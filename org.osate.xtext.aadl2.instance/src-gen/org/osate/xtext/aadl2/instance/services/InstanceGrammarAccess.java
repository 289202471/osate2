/*
 * generated by Xtext
 */
package org.osate.xtext.aadl2.instance.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class InstanceGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SystemInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SystemInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCategoryAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCategoryComponentCategoryParserRuleCall_0_0 = (RuleCall)cCategoryAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cComponentImplementationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cComponentImplementationComponentImplementationCrossReference_3_0 = (CrossReference)cComponentImplementationAssignment_3.eContents().get(0);
		private final RuleCall cComponentImplementationComponentImplementationIMPLREFParserRuleCall_3_0_1 = (RuleCall)cComponentImplementationComponentImplementationCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cFeatureInstanceAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cFeatureInstanceFeatureInstanceParserRuleCall_5_0_0 = (RuleCall)cFeatureInstanceAssignment_5_0.eContents().get(0);
		private final Assignment cComponentInstanceAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cComponentInstanceComponentInstanceParserRuleCall_5_1_0 = (RuleCall)cComponentInstanceAssignment_5_1.eContents().get(0);
		private final Assignment cSystemOperationModeAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cSystemOperationModeSystemOperationModeParserRuleCall_5_2_0 = (RuleCall)cSystemOperationModeAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SystemInstance returns instance::SystemInstance:
		//	category=ComponentCategory name=ID ":" componentImplementation=[aadl2::ComponentImplementation|IMPLREF] "{"
		//	(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance | systemOperationMode+=SystemOperationMode)*
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//category=ComponentCategory name=ID ":" componentImplementation=[aadl2::ComponentImplementation|IMPLREF] "{"
		//(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance | systemOperationMode+=SystemOperationMode)*
		//"}"
		public Group getGroup() { return cGroup; }

		//category=ComponentCategory
		public Assignment getCategoryAssignment_0() { return cCategoryAssignment_0; }

		//ComponentCategory
		public RuleCall getCategoryComponentCategoryParserRuleCall_0_0() { return cCategoryComponentCategoryParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//componentImplementation=[aadl2::ComponentImplementation|IMPLREF]
		public Assignment getComponentImplementationAssignment_3() { return cComponentImplementationAssignment_3; }

		//[aadl2::ComponentImplementation|IMPLREF]
		public CrossReference getComponentImplementationComponentImplementationCrossReference_3_0() { return cComponentImplementationComponentImplementationCrossReference_3_0; }

		//IMPLREF
		public RuleCall getComponentImplementationComponentImplementationIMPLREFParserRuleCall_3_0_1() { return cComponentImplementationComponentImplementationIMPLREFParserRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance | systemOperationMode+=SystemOperationMode)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//featureInstance+=FeatureInstance
		public Assignment getFeatureInstanceAssignment_5_0() { return cFeatureInstanceAssignment_5_0; }

		//FeatureInstance
		public RuleCall getFeatureInstanceFeatureInstanceParserRuleCall_5_0_0() { return cFeatureInstanceFeatureInstanceParserRuleCall_5_0_0; }

		//componentInstance+=ComponentInstance
		public Assignment getComponentInstanceAssignment_5_1() { return cComponentInstanceAssignment_5_1; }

		//ComponentInstance
		public RuleCall getComponentInstanceComponentInstanceParserRuleCall_5_1_0() { return cComponentInstanceComponentInstanceParserRuleCall_5_1_0; }

		//systemOperationMode+=SystemOperationMode
		public Assignment getSystemOperationModeAssignment_5_2() { return cSystemOperationModeAssignment_5_2; }

		//SystemOperationMode
		public RuleCall getSystemOperationModeSystemOperationModeParserRuleCall_5_2_0() { return cSystemOperationModeSystemOperationModeParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class FeatureInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionDirectionTypeParserRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cCategoryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCategoryFeatureCategoryParserRuleCall_1_0 = (RuleCall)cCategoryAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIndexAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIndexLONGTerminalRuleCall_3_1_0 = (RuleCall)cIndexAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeatureAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFeatureFeatureCrossReference_5_0 = (CrossReference)cFeatureAssignment_5.eContents().get(0);
		private final RuleCall cFeatureFeatureFEATREFParserRuleCall_5_0_1 = (RuleCall)cFeatureFeatureCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFeatureInstanceAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFeatureInstanceFeatureInstanceParserRuleCall_6_1_0 = (RuleCall)cFeatureInstanceAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//FeatureInstance returns instance::FeatureInstance:
		//	direction=DirectionType category=FeatureCategory name=ID ("[" index=LONG "]")? ":" feature=[aadl2::Feature|FEATREF]
		//	("{" featureInstance+=FeatureInstance* "}")?;
		@Override public ParserRule getRule() { return rule; }

		//direction=DirectionType category=FeatureCategory name=ID ("[" index=LONG "]")? ":" feature=[aadl2::Feature|FEATREF] ("{"
		//featureInstance+=FeatureInstance* "}")?
		public Group getGroup() { return cGroup; }

		//direction=DirectionType
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }

		//DirectionType
		public RuleCall getDirectionDirectionTypeParserRuleCall_0_0() { return cDirectionDirectionTypeParserRuleCall_0_0; }

		//category=FeatureCategory
		public Assignment getCategoryAssignment_1() { return cCategoryAssignment_1; }

		//FeatureCategory
		public RuleCall getCategoryFeatureCategoryParserRuleCall_1_0() { return cCategoryFeatureCategoryParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("[" index=LONG "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//index=LONG
		public Assignment getIndexAssignment_3_1() { return cIndexAssignment_3_1; }

		//LONG
		public RuleCall getIndexLONGTerminalRuleCall_3_1_0() { return cIndexLONGTerminalRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_2() { return cRightSquareBracketKeyword_3_2; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//feature=[aadl2::Feature|FEATREF]
		public Assignment getFeatureAssignment_5() { return cFeatureAssignment_5; }

		//[aadl2::Feature|FEATREF]
		public CrossReference getFeatureFeatureCrossReference_5_0() { return cFeatureFeatureCrossReference_5_0; }

		//FEATREF
		public RuleCall getFeatureFeatureFEATREFParserRuleCall_5_0_1() { return cFeatureFeatureFEATREFParserRuleCall_5_0_1; }

		//("{" featureInstance+=FeatureInstance* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }

		//featureInstance+=FeatureInstance*
		public Assignment getFeatureInstanceAssignment_6_1() { return cFeatureInstanceAssignment_6_1; }

		//FeatureInstance
		public RuleCall getFeatureInstanceFeatureInstanceParserRuleCall_6_1_0() { return cFeatureInstanceFeatureInstanceParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_2() { return cRightCurlyBracketKeyword_6_2; }
	}

	public class ComponentInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCategoryAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCategoryComponentCategoryParserRuleCall_0_0 = (RuleCall)cCategoryAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIndexAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIndexLONGTerminalRuleCall_2_1_0 = (RuleCall)cIndexAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSubcomponentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSubcomponentSubcomponentCrossReference_4_0 = (CrossReference)cSubcomponentAssignment_4.eContents().get(0);
		private final RuleCall cSubcomponentSubcomponentSUBREFParserRuleCall_4_0_1 = (RuleCall)cSubcomponentSubcomponentCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cFeatureInstanceAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final RuleCall cFeatureInstanceFeatureInstanceParserRuleCall_5_1_0_0 = (RuleCall)cFeatureInstanceAssignment_5_1_0.eContents().get(0);
		private final Assignment cComponentInstanceAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cComponentInstanceComponentInstanceParserRuleCall_5_1_1_0 = (RuleCall)cComponentInstanceAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//ComponentInstance returns instance::ComponentInstance:
		//	category=ComponentCategory name=ID ("[" index+=LONG "]")* ":" subcomponent=[aadl2::Subcomponent|SUBREF] ("{"
		//	(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance)* "}")?;
		@Override public ParserRule getRule() { return rule; }

		//category=ComponentCategory name=ID ("[" index+=LONG "]")* ":" subcomponent=[aadl2::Subcomponent|SUBREF] ("{"
		//(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance)* "}")?
		public Group getGroup() { return cGroup; }

		//category=ComponentCategory
		public Assignment getCategoryAssignment_0() { return cCategoryAssignment_0; }

		//ComponentCategory
		public RuleCall getCategoryComponentCategoryParserRuleCall_0_0() { return cCategoryComponentCategoryParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("[" index+=LONG "]")*
		public Group getGroup_2() { return cGroup_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//index+=LONG
		public Assignment getIndexAssignment_2_1() { return cIndexAssignment_2_1; }

		//LONG
		public RuleCall getIndexLONGTerminalRuleCall_2_1_0() { return cIndexLONGTerminalRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//subcomponent=[aadl2::Subcomponent|SUBREF]
		public Assignment getSubcomponentAssignment_4() { return cSubcomponentAssignment_4; }

		//[aadl2::Subcomponent|SUBREF]
		public CrossReference getSubcomponentSubcomponentCrossReference_4_0() { return cSubcomponentSubcomponentCrossReference_4_0; }

		//SUBREF
		public RuleCall getSubcomponentSubcomponentSUBREFParserRuleCall_4_0_1() { return cSubcomponentSubcomponentSUBREFParserRuleCall_4_0_1; }

		//("{" (featureInstance+=FeatureInstance | componentInstance+=ComponentInstance)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance)*
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }

		//featureInstance+=FeatureInstance
		public Assignment getFeatureInstanceAssignment_5_1_0() { return cFeatureInstanceAssignment_5_1_0; }

		//FeatureInstance
		public RuleCall getFeatureInstanceFeatureInstanceParserRuleCall_5_1_0_0() { return cFeatureInstanceFeatureInstanceParserRuleCall_5_1_0_0; }

		//componentInstance+=ComponentInstance
		public Assignment getComponentInstanceAssignment_5_1_1() { return cComponentInstanceAssignment_5_1_1; }

		//ComponentInstance
		public RuleCall getComponentInstanceComponentInstanceParserRuleCall_5_1_1_0() { return cComponentInstanceComponentInstanceParserRuleCall_5_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_2() { return cRightCurlyBracketKeyword_5_2; }
	}

	public class SystemOperationModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SystemOperationMode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSomKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//SystemOperationMode returns instance::SystemOperationMode:
		//	"som" name=STRING;
		@Override public ParserRule getRule() { return rule; }

		//"som" name=STRING
		public Group getGroup() { return cGroup; }

		//"som"
		public Keyword getSomKeyword_0() { return cSomKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}

	public class DirectionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DirectionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cOutKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cInKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cOutKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//DirectionType returns aadl2::DirectionType:
		//	"in" | "out" | "in" "out";
		@Override public ParserRule getRule() { return rule; }

		//"in" | "out" | "in" "out"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"in"
		public Keyword getInKeyword_0() { return cInKeyword_0; }

		//"out"
		public Keyword getOutKeyword_1() { return cOutKeyword_1; }

		//"in" "out"
		public Group getGroup_2() { return cGroup_2; }

		//"in"
		public Keyword getInKeyword_2_0() { return cInKeyword_2_0; }

		//"out"
		public Keyword getOutKeyword_2_1() { return cOutKeyword_2_1; }
	}

	public class FeatureCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDataPortKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cEventPortKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cEventDataPortKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cParameterKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cBusAccessKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cSubprogramAccessKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cSubprogramGroupAccessKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cFeatureGroupKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cAbstractFeatureKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		
		//FeatureCategory returns instance::FeatureCategory:
		//	"dataPort" | "eventPort" | "eventDataPort" | "parameter" | "busAccess" | "subprogramAccess" | "subprogramGroupAccess"
		//	| "featureGroup" | "abstractFeature";
		@Override public ParserRule getRule() { return rule; }

		//"dataPort" | "eventPort" | "eventDataPort" | "parameter" | "busAccess" | "subprogramAccess" | "subprogramGroupAccess" |
		//"featureGroup" | "abstractFeature"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"dataPort"
		public Keyword getDataPortKeyword_0() { return cDataPortKeyword_0; }

		//"eventPort"
		public Keyword getEventPortKeyword_1() { return cEventPortKeyword_1; }

		//"eventDataPort"
		public Keyword getEventDataPortKeyword_2() { return cEventDataPortKeyword_2; }

		//"parameter"
		public Keyword getParameterKeyword_3() { return cParameterKeyword_3; }

		//"busAccess"
		public Keyword getBusAccessKeyword_4() { return cBusAccessKeyword_4; }

		//"subprogramAccess"
		public Keyword getSubprogramAccessKeyword_5() { return cSubprogramAccessKeyword_5; }

		//"subprogramGroupAccess"
		public Keyword getSubprogramGroupAccessKeyword_6() { return cSubprogramGroupAccessKeyword_6; }

		//"featureGroup"
		public Keyword getFeatureGroupKeyword_7() { return cFeatureGroupKeyword_7; }

		//"abstractFeature"
		public Keyword getAbstractFeatureKeyword_8() { return cAbstractFeatureKeyword_8; }
	}

	public class ComponentCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAbstractKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cBusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDataKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDeviceKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cMemoryKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cProcessKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cProcessorKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cSubprogramKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cSubprogramKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cGroupKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cSystemKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Keyword cThreadKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cGroupKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cThreadKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Keyword cVirtualKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cBusKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cVirtualKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cProcessorKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		
		//ComponentCategory returns aadl2::ComponentCategory:
		//	"abstract" | "bus" | "data" | "device" | "memory" | "process" | "processor" | "subprogram" | "subprogram" "group" |
		//	"system" | "thread" "group" | "thread" | "virtual" "bus" | "virtual" "processor";
		@Override public ParserRule getRule() { return rule; }

		//"abstract" | "bus" | "data" | "device" | "memory" | "process" | "processor" | "subprogram" | "subprogram" "group" |
		//"system" | "thread" "group" | "thread" | "virtual" "bus" | "virtual" "processor"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"abstract"
		public Keyword getAbstractKeyword_0() { return cAbstractKeyword_0; }

		//"bus"
		public Keyword getBusKeyword_1() { return cBusKeyword_1; }

		//"data"
		public Keyword getDataKeyword_2() { return cDataKeyword_2; }

		//"device"
		public Keyword getDeviceKeyword_3() { return cDeviceKeyword_3; }

		//"memory"
		public Keyword getMemoryKeyword_4() { return cMemoryKeyword_4; }

		//"process"
		public Keyword getProcessKeyword_5() { return cProcessKeyword_5; }

		//"processor"
		public Keyword getProcessorKeyword_6() { return cProcessorKeyword_6; }

		//"subprogram"
		public Keyword getSubprogramKeyword_7() { return cSubprogramKeyword_7; }

		//"subprogram" "group"
		public Group getGroup_8() { return cGroup_8; }

		//"subprogram"
		public Keyword getSubprogramKeyword_8_0() { return cSubprogramKeyword_8_0; }

		//"group"
		public Keyword getGroupKeyword_8_1() { return cGroupKeyword_8_1; }

		//"system"
		public Keyword getSystemKeyword_9() { return cSystemKeyword_9; }

		//"thread" "group"
		public Group getGroup_10() { return cGroup_10; }

		//"thread"
		public Keyword getThreadKeyword_10_0() { return cThreadKeyword_10_0; }

		//"group"
		public Keyword getGroupKeyword_10_1() { return cGroupKeyword_10_1; }

		//"thread"
		public Keyword getThreadKeyword_11() { return cThreadKeyword_11; }

		//"virtual" "bus"
		public Group getGroup_12() { return cGroup_12; }

		//"virtual"
		public Keyword getVirtualKeyword_12_0() { return cVirtualKeyword_12_0; }

		//"bus"
		public Keyword getBusKeyword_12_1() { return cBusKeyword_12_1; }

		//"virtual" "processor"
		public Group getGroup_13() { return cGroup_13; }

		//"virtual"
		public Keyword getVirtualKeyword_13_0() { return cVirtualKeyword_13_0; }

		//"processor"
		public Keyword getProcessorKeyword_13_1() { return cProcessorKeyword_13_1; }
	}

	public class IMPLREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IMPLREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//IMPLREF:
		//	(ID "::")+ ID "." ID;
		@Override public ParserRule getRule() { return rule; }

		//(ID "::")+ ID "." ID
		public Group getGroup() { return cGroup; }

		//(ID "::")+
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }
	}

	public class FEATREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FEATREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//FEATREF:
		//	(ID "::")+ ID "::" ID;
		@Override public ParserRule getRule() { return rule; }

		//(ID "::")+ ID "::" ID
		public Group getGroup() { return cGroup; }

		//(ID "::")+
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//"::"
		public Keyword getColonColonKeyword_2() { return cColonColonKeyword_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }
	}

	public class SUBREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SUBREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cColonColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cIDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//SUBREF:
		//	(ID "::")+ ID "." ID "::" ID;
		@Override public ParserRule getRule() { return rule; }

		//(ID "::")+ ID "." ID "::" ID
		public Group getGroup() { return cGroup; }

		//(ID "::")+
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }

		//"::"
		public Keyword getColonColonKeyword_4() { return cColonColonKeyword_4; }

		//ID
		public RuleCall getIDTerminalRuleCall_5() { return cIDTerminalRuleCall_5; }
	}
	
	
	private final SystemInstanceElements pSystemInstance;
	private final FeatureInstanceElements pFeatureInstance;
	private final ComponentInstanceElements pComponentInstance;
	private final SystemOperationModeElements pSystemOperationMode;
	private final DirectionTypeElements pDirectionType;
	private final FeatureCategoryElements pFeatureCategory;
	private final ComponentCategoryElements pComponentCategory;
	private final IMPLREFElements pIMPLREF;
	private final FEATREFElements pFEATREF;
	private final SUBREFElements pSUBREF;
	private final TerminalRule tID;
	private final TerminalRule tLONG;
	private final TerminalRule tSTRING;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public InstanceGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pSystemInstance = new SystemInstanceElements();
		this.pFeatureInstance = new FeatureInstanceElements();
		this.pComponentInstance = new ComponentInstanceElements();
		this.pSystemOperationMode = new SystemOperationModeElements();
		this.pDirectionType = new DirectionTypeElements();
		this.pFeatureCategory = new FeatureCategoryElements();
		this.pComponentCategory = new ComponentCategoryElements();
		this.pIMPLREF = new IMPLREFElements();
		this.pFEATREF = new FEATREFElements();
		this.pSUBREF = new SUBREFElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID");
		this.tLONG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LONG");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.osate.xtext.aadl2.instance.Instance".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//SystemInstance returns instance::SystemInstance:
	//	category=ComponentCategory name=ID ":" componentImplementation=[aadl2::ComponentImplementation|IMPLREF] "{"
	//	(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance | systemOperationMode+=SystemOperationMode)*
	//	"}";
	public SystemInstanceElements getSystemInstanceAccess() {
		return pSystemInstance;
	}
	
	public ParserRule getSystemInstanceRule() {
		return getSystemInstanceAccess().getRule();
	}

	//FeatureInstance returns instance::FeatureInstance:
	//	direction=DirectionType category=FeatureCategory name=ID ("[" index=LONG "]")? ":" feature=[aadl2::Feature|FEATREF]
	//	("{" featureInstance+=FeatureInstance* "}")?;
	public FeatureInstanceElements getFeatureInstanceAccess() {
		return pFeatureInstance;
	}
	
	public ParserRule getFeatureInstanceRule() {
		return getFeatureInstanceAccess().getRule();
	}

	//ComponentInstance returns instance::ComponentInstance:
	//	category=ComponentCategory name=ID ("[" index+=LONG "]")* ":" subcomponent=[aadl2::Subcomponent|SUBREF] ("{"
	//	(featureInstance+=FeatureInstance | componentInstance+=ComponentInstance)* "}")?;
	public ComponentInstanceElements getComponentInstanceAccess() {
		return pComponentInstance;
	}
	
	public ParserRule getComponentInstanceRule() {
		return getComponentInstanceAccess().getRule();
	}

	//SystemOperationMode returns instance::SystemOperationMode:
	//	"som" name=STRING;
	public SystemOperationModeElements getSystemOperationModeAccess() {
		return pSystemOperationMode;
	}
	
	public ParserRule getSystemOperationModeRule() {
		return getSystemOperationModeAccess().getRule();
	}

	//DirectionType returns aadl2::DirectionType:
	//	"in" | "out" | "in" "out";
	public DirectionTypeElements getDirectionTypeAccess() {
		return pDirectionType;
	}
	
	public ParserRule getDirectionTypeRule() {
		return getDirectionTypeAccess().getRule();
	}

	//FeatureCategory returns instance::FeatureCategory:
	//	"dataPort" | "eventPort" | "eventDataPort" | "parameter" | "busAccess" | "subprogramAccess" | "subprogramGroupAccess"
	//	| "featureGroup" | "abstractFeature";
	public FeatureCategoryElements getFeatureCategoryAccess() {
		return pFeatureCategory;
	}
	
	public ParserRule getFeatureCategoryRule() {
		return getFeatureCategoryAccess().getRule();
	}

	//ComponentCategory returns aadl2::ComponentCategory:
	//	"abstract" | "bus" | "data" | "device" | "memory" | "process" | "processor" | "subprogram" | "subprogram" "group" |
	//	"system" | "thread" "group" | "thread" | "virtual" "bus" | "virtual" "processor";
	public ComponentCategoryElements getComponentCategoryAccess() {
		return pComponentCategory;
	}
	
	public ParserRule getComponentCategoryRule() {
		return getComponentCategoryAccess().getRule();
	}

	//IMPLREF:
	//	(ID "::")+ ID "." ID;
	public IMPLREFElements getIMPLREFAccess() {
		return pIMPLREF;
	}
	
	public ParserRule getIMPLREFRule() {
		return getIMPLREFAccess().getRule();
	}

	//FEATREF:
	//	(ID "::")+ ID "::" ID;
	public FEATREFElements getFEATREFAccess() {
		return pFEATREF;
	}
	
	public ParserRule getFEATREFRule() {
		return getFEATREFAccess().getRule();
	}

	//SUBREF:
	//	(ID "::")+ ID "." ID "::" ID;
	public SUBREFElements getSUBREFAccess() {
		return pSUBREF;
	}
	
	public ParserRule getSUBREFRule() {
		return getSUBREFAccess().getRule();
	}

	//terminal ID:
	//	("a".."z" | "A".."Z") ("_"? ("a".."z" | "A".."Z" | "0".."9"))*;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal LONG returns ecore::ELong:
	//	"0".."9"+;
	public TerminalRule getLONGRule() {
		return tLONG;
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//terminal SL_COMMENT:
	//	"--" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return tWS;
	} 
}
