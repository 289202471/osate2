grammar org.osate.xtext.aadl2.instance.Instance with org.osate.xtext.aadl2.properties.Properties

import "http://aadl.info/AADL/2.0/instance" as instance
import "http://aadl.info/AADL/2.0" as aadl2

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

SystemInstance returns instance::SystemInstance:
	category=ComponentCategory name=ID ':' componentImplementation=[aadl2::ComponentImplementation|ImplRef] '{' (
		featureInstance+=FeatureInstance |
		componentInstance+=ComponentInstance |
		connectionInstance+=ConnectionInstance |
		flowSpecification+=FlowSpecificationInstance |
		endToEndFlow+=EndToEndFlowInstance |
		modeInstance+=ModeInstance |
		modeTransitionInstance+=ModeTransitionInstance |
		systemOperationMode+=SystemOperationMode |
		ownedPropertyAssociation+=PropertyAssociationInstance
	)* '}'
;

FeatureInstance returns instance::FeatureInstance:
	direction=DirectionType category=FeatureCategory name=ID ('[' index=Long ']')? ':' feature=[aadl2::Feature|DeclarativeRef]
	('source' 'of' '(' (srcConnectionInstance+=[instance::ConnectionInstance|IndexRef] | srcFlowSpec+=[instance::FlowSpecificationInstance])
		(',' (srcConnectionInstance+=[instance::ConnectionInstance|IndexRef] | srcFlowSpec+=[instance::FlowSpecificationInstance]))* ')'
	)?
	('destination' 'of' '(' (dstConnectionInstance+=[instance::ConnectionInstance|IndexRef] | dstFlowSpec+=[instance::FlowSpecificationInstance])
		(',' (dstConnectionInstance+=[instance::ConnectionInstance|IndexRef] | dstFlowSpec+=[instance::FlowSpecificationInstance]))* ')'
	)? ('{' (
		featureInstance+=FeatureInstance |
		ownedPropertyAssociation+=PropertyAssociationInstance
	)* '}')?
;
	
ComponentInstance returns instance::ComponentInstance:
	category=ComponentCategory name=ID ('[' index+=Long ']')*
	('in' 'modes' '(' inMode+=[instance::ModeInstance] (',' inMode+=[instance::ModeInstance])*')')?
	':' subcomponent=[aadl2::Subcomponent|DeclarativeRef]
	('source' 'of' '(' srcConnectionInstance+=[instance::ConnectionInstance|IndexRef] (',' srcConnectionInstance+=[instance::ConnectionInstance|IndexRef])* ')')?
	('destination' 'of' '(' dstConnectionInstance+=[instance::ConnectionInstance|IndexRef] (',' dstConnectionInstance+=[instance::ConnectionInstance|IndexRef])* ')')? ('{' (
		featureInstance+=FeatureInstance |
		componentInstance+=ComponentInstance |
		connectionInstance+=ConnectionInstance |
		flowSpecification+=FlowSpecificationInstance |
		endToEndFlow+=EndToEndFlowInstance |
		modeInstance+=ModeInstance |
		modeTransitionInstance+=ModeTransitionInstance |
		ownedPropertyAssociation+=PropertyAssociationInstance
	)* '}')?
;

ConnectionInstance returns instance::ConnectionInstance:
	complete?='complete'? kind=ConnectionKind name=STRING ':'
	source=[instance::ConnectionInstanceEnd|InstanceRef] (bidirectional?='<->' | '->') destination=[instance::ConnectionInstanceEnd|InstanceRef]
	('in' 'modes' '(' inSystemOperationMode+=[instance::SystemOperationMode|IndexRef] (',' inSystemOperationMode+=[instance::SystemOperationMode|IndexRef])* ')')?
	('in' 'transitions' '(' inModeTransition+=[instance::ModeTransitionInstance|IndexRef] (',' inModeTransition+=[instance::ModeTransitionInstance|IndexRef])* ')')? '{' (
		connectionReference+=ConnectionReference |
		ownedPropertyAssociation+=PropertyAssociationInstance
	)+ '}'
;

ConnectionReference returns instance::ConnectionReference:
	source=[instance::ConnectionInstanceEnd|InstanceRef] '->' destination=[instance::ConnectionInstanceEnd|InstanceRef] ':'
	connection=[aadl2::Connection|DeclarativeRef] 'in' context=[instance::ComponentInstance|InstanceRef]
;

FlowSpecificationInstance returns instance::FlowSpecificationInstance:
	'flow' name=ID '(' source=[instance::FeatureInstance|InstanceRef]? '->' destination=[instance::FeatureInstance|InstanceRef]? ')'
	('in' 'modes' '(' inMode+=[instance::ModeInstance] (',' inMode+=[instance::ModeInstance])*')')?
	('in' 'transitions' '(' inModeTransition+=[instance::ModeTransitionInstance|IndexRef] (',' inModeTransition+=[instance::ModeTransitionInstance|IndexRef])* ')')?
	':' flowSpecification=[aadl2::FlowSpecification|DeclarativeRef] ('{' ownedPropertyAssociation+=PropertyAssociationInstance+ '}')?
;

EndToEndFlowInstance returns instance::EndToEndFlowInstance:
	'end' 'to' 'end' 'flow' name=ID (flowElement+=[instance::FlowElementInstance|InstanceRef] ('->' flowElement+=[instance::FlowElementInstance|InstanceRef])*)?
	('in' 'modes' '(' inSystemOperationMode+=[instance::SystemOperationMode|IndexRef] (',' inSystemOperationMode+=[instance::SystemOperationMode|IndexRef])* ')')?
	':' endToEndFlow=[aadl2::EndToEndFlow|DeclarativeRef] ('{' ownedPropertyAssociation+=PropertyAssociationInstance '}')?
;

ModeInstance returns instance::ModeInstance:
	initial?='initial'? derived?='derived'? 'mode' name=ID
	('=' (parent+=[instance::ModeInstance] | ('(' parent+=[instance::ModeInstance] (',' parent+=[instance::ModeInstance])+ ')')))?
	('source' 'of' '(' srcModeTransition+=[instance::ModeTransitionInstance|IndexRef] (',' srcModeTransition+=[instance::ModeTransitionInstance|IndexRef])* ')')?
	('destination' 'of' '(' dstModeTransition+=[instance::ModeTransitionInstance|IndexRef] (',' dstModeTransition+=[instance::ModeTransitionInstance|IndexRef])* ')')?
	':' mode=[aadl2::Mode|DeclarativeRef] ('{' ownedPropertyAssociation+=PropertyAssociationInstance '}')?
;

ModeTransitionInstance returns instance::ModeTransitionInstance:
	'mode' 'transition' name=ModeTransitionName source=[instance::ModeInstance] '->' destination=[instance::ModeInstance]
	':' modeTransition=[aadl2::ModeTransition|DeclarativeRef] ('{' ownedPropertyAssociation+=PropertyAssociationInstance '}')?
;
	
SystemOperationMode returns instance::SystemOperationMode:
	'som' name=STRING (currentMode+=[instance::ModeInstance|InstanceRef] (',' currentMode+=[instance::ModeInstance|InstanceRef])*)?
;

PropertyAssociationInstance returns instance::PropertyAssociationInstance:
	property=[aadl2::Property|QPREF] '=>' ownedValue+=OptionalModalPropertyValue (',' ownedValue+=OptionalModalPropertyValue)*
	':' propertyAssociation=[aadl2::PropertyAssociation|PropertyAssociationRef]
;

OptionalModalPropertyValue returns aadl2::ModalPropertyValue:
	ownedValue=PropertyExpression ('in' 'modes' '(' inMode+=[aadl2::Mode|IndexRef] (',' inMode+=[aadl2::Mode|IndexRef])* ')')?
;

DirectionType returns aadl2::DirectionType:
	'in' | 'out' | 'in' 'out'
;

FeatureCategory returns instance::FeatureCategory:
	'dataPort' | 'eventPort' | 'eventDataPort' | 'parameter' |
	'busAccess' | 'subprogramAccess' | 'subprogramGroupAccess' |
	'featureGroup' | 'abstractFeature'
;

ComponentCategory returns aadl2::ComponentCategory: 'abstract' | 'bus'|'data'
	| 'device' | 'memory' | 'process' | 'processor' | 'subprogram'
	| 'subprogram' 'group' | 'system' | 'thread' 'group'
	| 'thread' | 'virtual' 'bus' | 'virtual' 'processor';

ConnectionKind returns instance::ConnectionKind:
	'featureConnection' | 'accessConnection' | 'parameterConnection' |
	'portConnection' | 'featureGroupConnection'
;

ImplRef:
	(ID '::')+ ID '.' ID
;

DeclarativeRef:
	(ID '::')+ ID ('.' ID)? '::' ('transition' '#' INTEGER_LIT | ID)
;

InstanceRef:
	'parent' | (ID ('[' INTEGER_LIT ']')* '.')* (INTEGER_LIT | ID ('[' INTEGER_LIT ']')*)
;

IndexRef:
	(INTEGER_LIT '~')? INTEGER_LIT
;

ModeTransitionName:
	ID '.' ID '.' ID
;

PropertyAssociationRef:
	ID '::' ID ('.' ID)? ('::' ('transition' '#' INTEGER_LIT | ID))? '::' INTEGER_LIT
;
	
Long returns ecore::ELong:
	INTEGER_LIT
;