/*
* generated by Xtext
*/
package org.osate.xtext.aadl2.errormodel.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.osate.xtext.aadl2.errormodel.services.ErrorModelGrammarAccess;

public class ErrorModelParser extends AbstractContentAssistParser {
	
	@Inject
	private ErrorModelGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.osate.xtext.aadl2.errormodel.ui.contentassist.antlr.internal.InternalErrorModelParser createParser() {
		org.osate.xtext.aadl2.errormodel.ui.contentassist.antlr.internal.InternalErrorModelParser result = new org.osate.xtext.aadl2.errormodel.ui.contentassist.antlr.internal.InternalErrorModelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEM2AnnexSubclauseAccess().getAlternatives_3(), "rule__EM2AnnexSubclause__Alternatives_3");
					put(grammarAccess.getErrorTypeSetRefinementAccess().getAlternatives_4(), "rule__ErrorTypeSetRefinement__Alternatives_4");
					put(grammarAccess.getErrorPropagationAccess().getAlternatives_7(), "rule__ErrorPropagation__Alternatives_7");
					put(grammarAccess.getErrorPropagationAccess().getAlternatives_8_1(), "rule__ErrorPropagation__Alternatives_8_1");
					put(grammarAccess.getBindingKindAccess().getAlternatives(), "rule__BindingKind__Alternatives");
					put(grammarAccess.getErrorFlowAccess().getAlternatives(), "rule__ErrorFlow__Alternatives");
					put(grammarAccess.getErrorPropagationReferenceAccess().getAlternatives_0(), "rule__ErrorPropagationReference__Alternatives_0");
					put(grammarAccess.getErrorBehaviorEventAccess().getAlternatives(), "rule__ErrorBehaviorEvent__Alternatives");
					put(grammarAccess.getErrorBehaviorTransitionAccess().getAlternatives(), "rule__ErrorBehaviorTransition__Alternatives");
					put(grammarAccess.getTriggeredTransitionAccess().getAlternatives_3(), "rule__TriggeredTransition__Alternatives_3");
					put(grammarAccess.getBranchValueAccess().getAlternatives(), "rule__BranchValue__Alternatives");
					put(grammarAccess.getTransitionConditionAccess().getAlternatives_0(), "rule__TransitionCondition__Alternatives_0");
					put(grammarAccess.getTriggerConditionExpressionAccess().getAlternatives(), "rule__TriggerConditionExpression__Alternatives");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getWorkingReferenceAccess().getAlternatives_0(), "rule__WorkingReference__Alternatives_0");
					put(grammarAccess.getPropagationConditionAccess().getAlternatives_0(), "rule__PropagationCondition__Alternatives_0");
					put(grammarAccess.getStateConditionExpressionAccess().getAlternatives(), "rule__StateConditionExpression__Alternatives");
					put(grammarAccess.getSPrimaryAccess().getAlternatives(), "rule__SPrimary__Alternatives");
					put(grammarAccess.getPropertyExpressionAccess().getAlternatives(), "rule__PropertyExpression__Alternatives");
					put(grammarAccess.getPropagationDirectionAccess().getAlternatives(), "rule__PropagationDirection__Alternatives");
					put(grammarAccess.getEM2AnnexSubclauseAccess().getGroup(), "rule__EM2AnnexSubclause__Group__0");
					put(grammarAccess.getErrorTypeSetAccess().getGroup(), "rule__ErrorTypeSet__Group__0");
					put(grammarAccess.getErrorTypeSetRefinementAccess().getGroup(), "rule__ErrorTypeSetRefinement__Group__0");
					put(grammarAccess.getErrorTypeAccess().getGroup(), "rule__ErrorType__Group__0");
					put(grammarAccess.getErrorTypeAccess().getGroup_4(), "rule__ErrorType__Group_4__0");
					put(grammarAccess.getErrorTypeAccess().getGroup_4_3(), "rule__ErrorType__Group_4_3__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getErrorTypeRefinementAccess().getGroup(), "rule__ErrorTypeRefinement__Group__0");
					put(grammarAccess.getErrorTypeRefinementAccess().getGroup_4(), "rule__ErrorTypeRefinement__Group_4__0");
					put(grammarAccess.getErrorTypeRefinementAccess().getGroup_4_3(), "rule__ErrorTypeRefinement__Group_4_3__0");
					put(grammarAccess.getErrorPropagationsAccess().getGroup(), "rule__ErrorPropagations__Group__0");
					put(grammarAccess.getErrorPropagationsAccess().getGroup_5(), "rule__ErrorPropagations__Group_5__0");
					put(grammarAccess.getErrorPropagationsAccess().getGroup_6(), "rule__ErrorPropagations__Group_6__0");
					put(grammarAccess.getErrorPropagationAccess().getGroup(), "rule__ErrorPropagation__Group__0");
					put(grammarAccess.getErrorPropagationAccess().getGroup_8(), "rule__ErrorPropagation__Group_8__0");
					put(grammarAccess.getErrorSourceAccess().getGroup(), "rule__ErrorSource__Group__0");
					put(grammarAccess.getErrorSinkAccess().getGroup(), "rule__ErrorSink__Group__0");
					put(grammarAccess.getErrorPathAccess().getGroup(), "rule__ErrorPath__Group__0");
					put(grammarAccess.getErrorPropagationReferenceAccess().getGroup(), "rule__ErrorPropagationReference__Group__0");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getGroup(), "rule__ErrorBehaviorStateMachine__Group__0");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getGroup_3(), "rule__ErrorBehaviorStateMachine__Group_3__0");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getGroup_4(), "rule__ErrorBehaviorStateMachine__Group_4__0");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getGroup_5(), "rule__ErrorBehaviorStateMachine__Group_5__0");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getGroup_6(), "rule__ErrorBehaviorStateMachine__Group_6__0");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getGroup_7(), "rule__ErrorBehaviorStateMachine__Group_7__0");
					put(grammarAccess.getErrorEventAccess().getGroup(), "rule__ErrorEvent__Group__0");
					put(grammarAccess.getRepairEventAccess().getGroup(), "rule__RepairEvent__Group__0");
					put(grammarAccess.getErrorBehaviorStateAccess().getGroup(), "rule__ErrorBehaviorState__Group__0");
					put(grammarAccess.getErrorBehaviorStateAccess().getGroup_3(), "rule__ErrorBehaviorState__Group_3__0");
					put(grammarAccess.getTriggeredTransitionAccess().getGroup(), "rule__TriggeredTransition__Group__0");
					put(grammarAccess.getTriggeredTransitionAccess().getGroup_3_1(), "rule__TriggeredTransition__Group_3_1__0");
					put(grammarAccess.getTriggeredTransitionAccess().getGroup_3_1_2(), "rule__TriggeredTransition__Group_3_1_2__0");
					put(grammarAccess.getBranchTransitionAccess().getGroup(), "rule__BranchTransition__Group__0");
					put(grammarAccess.getComponentErrorBehaviorAccess().getGroup(), "rule__ComponentErrorBehavior__Group__0");
					put(grammarAccess.getComponentErrorBehaviorAccess().getGroup_5(), "rule__ComponentErrorBehavior__Group_5__0");
					put(grammarAccess.getComponentErrorBehaviorAccess().getGroup_6(), "rule__ComponentErrorBehavior__Group_6__0");
					put(grammarAccess.getComponentErrorBehaviorAccess().getGroup_7(), "rule__ComponentErrorBehavior__Group_7__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getTransitionConditionAccess().getGroup(), "rule__TransitionCondition__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getOrmoreExpressionAccess().getGroup(), "rule__OrmoreExpression__Group__0");
					put(grammarAccess.getOrmoreExpressionAccess().getGroup_4(), "rule__OrmoreExpression__Group_4__0");
					put(grammarAccess.getOrlessExpressionAccess().getGroup(), "rule__OrlessExpression__Group__0");
					put(grammarAccess.getOrlessExpressionAccess().getGroup_4(), "rule__OrlessExpression__Group_4__0");
					put(grammarAccess.getOthersExpressionAccess().getGroup(), "rule__OthersExpression__Group__0");
					put(grammarAccess.getPrimaryAccess().getGroup_3(), "rule__Primary__Group_3__0");
					put(grammarAccess.getErrorEventReferenceAccess().getGroup(), "rule__ErrorEventReference__Group__0");
					put(grammarAccess.getWorkingReferenceAccess().getGroup(), "rule__WorkingReference__Group__0");
					put(grammarAccess.getPropagationConditionAccess().getGroup(), "rule__PropagationCondition__Group__0");
					put(grammarAccess.getPropagationConditionAccess().getGroup_2(), "rule__PropagationCondition__Group_2__0");
					put(grammarAccess.getPropagationConditionAccess().getGroup_4(), "rule__PropagationCondition__Group_4__0");
					put(grammarAccess.getPropagationConditionAccess().getGroup_4_3(), "rule__PropagationCondition__Group_4_3__0");
					put(grammarAccess.getDetectionEventAccess().getGroup(), "rule__DetectionEvent__Group__0");
					put(grammarAccess.getDetectionEventAccess().getGroup_0(), "rule__DetectionEvent__Group_0__0");
					put(grammarAccess.getCompositeErrorBehaviorAccess().getGroup(), "rule__CompositeErrorBehavior__Group__0");
					put(grammarAccess.getCompositeErrorBehaviorAccess().getGroup_6(), "rule__CompositeErrorBehavior__Group_6__0");
					put(grammarAccess.getCompositeStateAccess().getGroup(), "rule__CompositeState__Group__0");
					put(grammarAccess.getAndSExpressionAccess().getGroup(), "rule__AndSExpression__Group__0");
					put(grammarAccess.getAndSExpressionAccess().getGroup_1(), "rule__AndSExpression__Group_1__0");
					put(grammarAccess.getOrSExpressionAccess().getGroup(), "rule__OrSExpression__Group__0");
					put(grammarAccess.getOrSExpressionAccess().getGroup_1(), "rule__OrSExpression__Group_1__0");
					put(grammarAccess.getOrmoreSExpressionAccess().getGroup(), "rule__OrmoreSExpression__Group__0");
					put(grammarAccess.getOrmoreSExpressionAccess().getGroup_4(), "rule__OrmoreSExpression__Group_4__0");
					put(grammarAccess.getOrlessSExpressionAccess().getGroup(), "rule__OrlessSExpression__Group__0");
					put(grammarAccess.getOrlessSExpressionAccess().getGroup_4(), "rule__OrlessSExpression__Group_4__0");
					put(grammarAccess.getSPrimaryAccess().getGroup_1(), "rule__SPrimary__Group_1__0");
					put(grammarAccess.getSubcomponentStateReferenceAccess().getGroup(), "rule__SubcomponentStateReference__Group__0");
					put(grammarAccess.getPropertyAssociationAccess().getGroup(), "rule__PropertyAssociation__Group__0");
					put(grammarAccess.getProbabilityValueAccess().getGroup(), "rule__ProbabilityValue__Group__0");
					put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
					put(grammarAccess.getQNAMEAccess().getGroup(), "rule__QNAME__Group__0");
					put(grammarAccess.getPNAMEAccess().getGroup(), "rule__PNAME__Group__0");
					put(grammarAccess.getPNAMEAccess().getGroup_1(), "rule__PNAME__Group_1__0");
					put(grammarAccess.getQCREFAccess().getGroup(), "rule__QCREF__Group__0");
					put(grammarAccess.getQCREFAccess().getGroup_0(), "rule__QCREF__Group_0__0");
					put(grammarAccess.getQCREFAccess().getGroup_2(), "rule__QCREF__Group_2__0");
					put(grammarAccess.getEM2AnnexSubclauseAccess().getTypesAssignment_3_0(), "rule__EM2AnnexSubclause__TypesAssignment_3_0");
					put(grammarAccess.getEM2AnnexSubclauseAccess().getEbsmAssignment_3_1(), "rule__EM2AnnexSubclause__EbsmAssignment_3_1");
					put(grammarAccess.getEM2AnnexSubclauseAccess().getEpAssignment_3_2(), "rule__EM2AnnexSubclause__EpAssignment_3_2");
					put(grammarAccess.getEM2AnnexSubclauseAccess().getCebAssignment_3_3(), "rule__EM2AnnexSubclause__CebAssignment_3_3");
					put(grammarAccess.getEM2AnnexSubclauseAccess().getCompebAssignment_3_4(), "rule__EM2AnnexSubclause__CompebAssignment_3_4");
					put(grammarAccess.getErrorTypeSetAccess().getNameAssignment_1(), "rule__ErrorTypeSet__NameAssignment_1");
					put(grammarAccess.getErrorTypeSetAccess().getTypesAssignment_2(), "rule__ErrorTypeSet__TypesAssignment_2");
					put(grammarAccess.getErrorTypeSetAccess().getFeaturesAssignment_3(), "rule__ErrorTypeSet__FeaturesAssignment_3");
					put(grammarAccess.getErrorTypeSetRefinementAccess().getNameAssignment_1(), "rule__ErrorTypeSetRefinement__NameAssignment_1");
					put(grammarAccess.getErrorTypeSetRefinementAccess().getExtendsAssignment_3(), "rule__ErrorTypeSetRefinement__ExtendsAssignment_3");
					put(grammarAccess.getErrorTypeSetRefinementAccess().getTypesAssignment_4_0(), "rule__ErrorTypeSetRefinement__TypesAssignment_4_0");
					put(grammarAccess.getErrorTypeSetRefinementAccess().getRefinementsAssignment_4_1(), "rule__ErrorTypeSetRefinement__RefinementsAssignment_4_1");
					put(grammarAccess.getErrorTypeAccess().getNameAssignment_0(), "rule__ErrorType__NameAssignment_0");
					put(grammarAccess.getErrorTypeAccess().getSubtypesAssignment_4_2(), "rule__ErrorType__SubtypesAssignment_4_2");
					put(grammarAccess.getErrorTypeAccess().getSubtypesAssignment_4_3_1(), "rule__ErrorType__SubtypesAssignment_4_3_1");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
					put(grammarAccess.getErrorTypeRefinementAccess().getNameAssignment_0(), "rule__ErrorTypeRefinement__NameAssignment_0");
					put(grammarAccess.getErrorTypeRefinementAccess().getSubtypesAssignment_4_2(), "rule__ErrorTypeRefinement__SubtypesAssignment_4_2");
					put(grammarAccess.getErrorTypeRefinementAccess().getSubtypesAssignment_4_3_1(), "rule__ErrorTypeRefinement__SubtypesAssignment_4_3_1");
					put(grammarAccess.getErrorPropagationsAccess().getImportedNamespaceAssignment_3(), "rule__ErrorPropagations__ImportedNamespaceAssignment_3");
					put(grammarAccess.getErrorPropagationsAccess().getPropagationsAssignment_5_1(), "rule__ErrorPropagations__PropagationsAssignment_5_1");
					put(grammarAccess.getErrorPropagationsAccess().getFlowsAssignment_6_1(), "rule__ErrorPropagations__FlowsAssignment_6_1");
					put(grammarAccess.getErrorPropagationAccess().getTypeAssignment_0(), "rule__ErrorPropagation__TypeAssignment_0");
					put(grammarAccess.getErrorPropagationAccess().getMaskAssignment_2(), "rule__ErrorPropagation__MaskAssignment_2");
					put(grammarAccess.getErrorPropagationAccess().getDirectionAssignment_3(), "rule__ErrorPropagation__DirectionAssignment_3");
					put(grammarAccess.getErrorPropagationAccess().getBindingAssignment_7_0(), "rule__ErrorPropagation__BindingAssignment_7_0");
					put(grammarAccess.getErrorPropagationAccess().getAppliestoAssignment_7_1(), "rule__ErrorPropagation__AppliestoAssignment_7_1");
					put(grammarAccess.getErrorPropagationAccess().getBindingAssignment_8_1_0(), "rule__ErrorPropagation__BindingAssignment_8_1_0");
					put(grammarAccess.getErrorPropagationAccess().getAppliestoAssignment_8_1_1(), "rule__ErrorPropagation__AppliestoAssignment_8_1_1");
					put(grammarAccess.getErrorSourceAccess().getOutgoingAssignment_2(), "rule__ErrorSource__OutgoingAssignment_2");
					put(grammarAccess.getErrorSinkAccess().getIncomingAssignment_2(), "rule__ErrorSink__IncomingAssignment_2");
					put(grammarAccess.getErrorPathAccess().getIncomingAssignment_2(), "rule__ErrorPath__IncomingAssignment_2");
					put(grammarAccess.getErrorPathAccess().getOutgoingAssignment_4(), "rule__ErrorPath__OutgoingAssignment_4");
					put(grammarAccess.getErrorPropagationReferenceAccess().getBindingAssignment_0_0(), "rule__ErrorPropagationReference__BindingAssignment_0_0");
					put(grammarAccess.getErrorPropagationReferenceAccess().getFeatureAssignment_0_1(), "rule__ErrorPropagationReference__FeatureAssignment_0_1");
					put(grammarAccess.getErrorPropagationReferenceAccess().getSelfAssignment_0_2(), "rule__ErrorPropagationReference__SelfAssignment_0_2");
					put(grammarAccess.getErrorPropagationReferenceAccess().getErrortypeAssignment_2(), "rule__ErrorPropagationReference__ErrortypeAssignment_2");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getNameAssignment_2(), "rule__ErrorBehaviorStateMachine__NameAssignment_2");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getExtendsAssignment_3_1(), "rule__ErrorBehaviorStateMachine__ExtendsAssignment_3_1");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getImportedNamespaceAssignment_4_1(), "rule__ErrorBehaviorStateMachine__ImportedNamespaceAssignment_4_1");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getEventsAssignment_5_1(), "rule__ErrorBehaviorStateMachine__EventsAssignment_5_1");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getStatesAssignment_6_1(), "rule__ErrorBehaviorStateMachine__StatesAssignment_6_1");
					put(grammarAccess.getErrorBehaviorStateMachineAccess().getTransitionsAssignment_7_1(), "rule__ErrorBehaviorStateMachine__TransitionsAssignment_7_1");
					put(grammarAccess.getErrorEventAccess().getNameAssignment_0(), "rule__ErrorEvent__NameAssignment_0");
					put(grammarAccess.getRepairEventAccess().getNameAssignment_0(), "rule__RepairEvent__NameAssignment_0");
					put(grammarAccess.getErrorBehaviorStateAccess().getNameAssignment_0(), "rule__ErrorBehaviorState__NameAssignment_0");
					put(grammarAccess.getErrorBehaviorStateAccess().getIntialAssignment_1(), "rule__ErrorBehaviorState__IntialAssignment_1");
					put(grammarAccess.getErrorBehaviorStateAccess().getPropertiesAssignment_3_1(), "rule__ErrorBehaviorState__PropertiesAssignment_3_1");
					put(grammarAccess.getTriggeredTransitionAccess().getNameAssignment_0(), "rule__TriggeredTransition__NameAssignment_0");
					put(grammarAccess.getTriggeredTransitionAccess().getSourceAssignment_2(), "rule__TriggeredTransition__SourceAssignment_2");
					put(grammarAccess.getTriggeredTransitionAccess().getEventsAssignment_3_1_1(), "rule__TriggeredTransition__EventsAssignment_3_1_1");
					put(grammarAccess.getTriggeredTransitionAccess().getEventsAssignment_3_1_2_1(), "rule__TriggeredTransition__EventsAssignment_3_1_2_1");
					put(grammarAccess.getTriggeredTransitionAccess().getDestinationAssignment_4(), "rule__TriggeredTransition__DestinationAssignment_4");
					put(grammarAccess.getBranchTransitionAccess().getSourceAssignment_0(), "rule__BranchTransition__SourceAssignment_0");
					put(grammarAccess.getBranchTransitionAccess().getValueAssignment_2(), "rule__BranchTransition__ValueAssignment_2");
					put(grammarAccess.getBranchTransitionAccess().getDestinationAssignment_4(), "rule__BranchTransition__DestinationAssignment_4");
					put(grammarAccess.getComponentErrorBehaviorAccess().getImportedNamespaceAssignment_3(), "rule__ComponentErrorBehavior__ImportedNamespaceAssignment_3");
					put(grammarAccess.getComponentErrorBehaviorAccess().getTransitionConditionAssignment_5_2(), "rule__ComponentErrorBehavior__TransitionConditionAssignment_5_2");
					put(grammarAccess.getComponentErrorBehaviorAccess().getPropagationConditionAssignment_6_2(), "rule__ComponentErrorBehavior__PropagationConditionAssignment_6_2");
					put(grammarAccess.getComponentErrorBehaviorAccess().getDetectionEventAssignment_7_2(), "rule__ComponentErrorBehavior__DetectionEventAssignment_7_2");
					put(grammarAccess.getTransitionConditionAccess().getErrorTransitionAssignment_0_0(), "rule__TransitionCondition__ErrorTransitionAssignment_0_0");
					put(grammarAccess.getTransitionConditionAccess().getMaskAssignment_0_1(), "rule__TransitionCondition__MaskAssignment_0_1");
					put(grammarAccess.getTransitionConditionAccess().getConditionAssignment_2(), "rule__TransitionCondition__ConditionAssignment_2");
					put(grammarAccess.getAndExpressionAccess().getOperandsAssignment_1_2(), "rule__AndExpression__OperandsAssignment_1_2");
					put(grammarAccess.getOrExpressionAccess().getOperandsAssignment_1_2(), "rule__OrExpression__OperandsAssignment_1_2");
					put(grammarAccess.getOrmoreExpressionAccess().getCountAssignment_0(), "rule__OrmoreExpression__CountAssignment_0");
					put(grammarAccess.getOrmoreExpressionAccess().getOperandsAssignment_3(), "rule__OrmoreExpression__OperandsAssignment_3");
					put(grammarAccess.getOrmoreExpressionAccess().getOperandsAssignment_4_1(), "rule__OrmoreExpression__OperandsAssignment_4_1");
					put(grammarAccess.getOrlessExpressionAccess().getCountAssignment_0(), "rule__OrlessExpression__CountAssignment_0");
					put(grammarAccess.getOrlessExpressionAccess().getOperandsAssignment_3(), "rule__OrlessExpression__OperandsAssignment_3");
					put(grammarAccess.getOrlessExpressionAccess().getOperandsAssignment_4_1(), "rule__OrlessExpression__OperandsAssignment_4_1");
					put(grammarAccess.getErrorEventReferenceAccess().getReferenceAssignment_1(), "rule__ErrorEventReference__ReferenceAssignment_1");
					put(grammarAccess.getWorkingReferenceAccess().getBindingAssignment_0_0(), "rule__WorkingReference__BindingAssignment_0_0");
					put(grammarAccess.getWorkingReferenceAccess().getFeatureAssignment_0_1(), "rule__WorkingReference__FeatureAssignment_0_1");
					put(grammarAccess.getWorkingReferenceAccess().getSelfAssignment_0_2(), "rule__WorkingReference__SelfAssignment_0_2");
					put(grammarAccess.getWorkingReferenceAccess().getWorkingAssignment_2(), "rule__WorkingReference__WorkingAssignment_2");
					put(grammarAccess.getPropagationConditionAccess().getOutPropagationAssignment_0_0(), "rule__PropagationCondition__OutPropagationAssignment_0_0");
					put(grammarAccess.getPropagationConditionAccess().getMaskAssignment_0_1(), "rule__PropagationCondition__MaskAssignment_0_1");
					put(grammarAccess.getPropagationConditionAccess().getWorkingAssignment_0_2(), "rule__PropagationCondition__WorkingAssignment_0_2");
					put(grammarAccess.getPropagationConditionAccess().getStateAssignment_2_0(), "rule__PropagationCondition__StateAssignment_2_0");
					put(grammarAccess.getPropagationConditionAccess().getConditionAssignment_3(), "rule__PropagationCondition__ConditionAssignment_3");
					put(grammarAccess.getPropagationConditionAccess().getFeatureAssignment_4_2(), "rule__PropagationCondition__FeatureAssignment_4_2");
					put(grammarAccess.getPropagationConditionAccess().getFeatureAssignment_4_3_1(), "rule__PropagationCondition__FeatureAssignment_4_3_1");
					put(grammarAccess.getDetectionEventAccess().getSelfAssignment_0_0(), "rule__DetectionEvent__SelfAssignment_0_0");
					put(grammarAccess.getDetectionEventAccess().getEventPortAssignment_1(), "rule__DetectionEvent__EventPortAssignment_1");
					put(grammarAccess.getDetectionEventAccess().getConditionAssignment_3(), "rule__DetectionEvent__ConditionAssignment_3");
					put(grammarAccess.getCompositeErrorBehaviorAccess().getImportedNamespaceAssignment_4(), "rule__CompositeErrorBehavior__ImportedNamespaceAssignment_4");
					put(grammarAccess.getCompositeErrorBehaviorAccess().getStateAssignment_6_1(), "rule__CompositeErrorBehavior__StateAssignment_6_1");
					put(grammarAccess.getCompositeStateAccess().getStateAssignment_0(), "rule__CompositeState__StateAssignment_0");
					put(grammarAccess.getCompositeStateAccess().getConditionAssignment_2(), "rule__CompositeState__ConditionAssignment_2");
					put(grammarAccess.getAndSExpressionAccess().getOperandsAssignment_1_2(), "rule__AndSExpression__OperandsAssignment_1_2");
					put(grammarAccess.getOrSExpressionAccess().getOperandsAssignment_1_2(), "rule__OrSExpression__OperandsAssignment_1_2");
					put(grammarAccess.getOrmoreSExpressionAccess().getCountAssignment_0(), "rule__OrmoreSExpression__CountAssignment_0");
					put(grammarAccess.getOrmoreSExpressionAccess().getOperandsAssignment_3(), "rule__OrmoreSExpression__OperandsAssignment_3");
					put(grammarAccess.getOrmoreSExpressionAccess().getOperandsAssignment_4_1(), "rule__OrmoreSExpression__OperandsAssignment_4_1");
					put(grammarAccess.getOrlessSExpressionAccess().getCountAssignment_0(), "rule__OrlessSExpression__CountAssignment_0");
					put(grammarAccess.getOrlessSExpressionAccess().getOperandsAssignment_3(), "rule__OrlessSExpression__OperandsAssignment_3");
					put(grammarAccess.getOrlessSExpressionAccess().getOperandsAssignment_4_1(), "rule__OrlessSExpression__OperandsAssignment_4_1");
					put(grammarAccess.getSubcomponentStateReferenceAccess().getSubcomponentAssignment_0(), "rule__SubcomponentStateReference__SubcomponentAssignment_0");
					put(grammarAccess.getSubcomponentStateReferenceAccess().getErrortypeAssignment_2(), "rule__SubcomponentStateReference__ErrortypeAssignment_2");
					put(grammarAccess.getPropertyAssociationAccess().getNameAssignment_0(), "rule__PropertyAssociation__NameAssignment_0");
					put(grammarAccess.getPropertyAssociationAccess().getValueAssignment_2(), "rule__PropertyAssociation__ValueAssignment_2");
					put(grammarAccess.getLiteralAccess().getNameAssignment(), "rule__Literal__NameAssignment");
					put(grammarAccess.getProbabilityValueAccess().getNumberAssignment_0(), "rule__ProbabilityValue__NumberAssignment_0");
					put(grammarAccess.getProbabilityValueAccess().getDistributionAssignment_1(), "rule__ProbabilityValue__DistributionAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.osate.xtext.aadl2.errormodel.ui.contentassist.antlr.internal.InternalErrorModelParser typedParser = (org.osate.xtext.aadl2.errormodel.ui.contentassist.antlr.internal.InternalErrorModelParser) parser;
			typedParser.entryRuleEM2AnnexSubclause();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ErrorModelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ErrorModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
