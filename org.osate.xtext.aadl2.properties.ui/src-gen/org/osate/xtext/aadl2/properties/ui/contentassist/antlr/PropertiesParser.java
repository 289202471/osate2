/*
* generated by Xtext
*/
package org.osate.xtext.aadl2.properties.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.osate.xtext.aadl2.properties.services.PropertiesGrammarAccess;

public class PropertiesParser extends AbstractContentAssistParser {
	
	@Inject
	private PropertiesGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.osate.xtext.aadl2.properties.ui.contentassist.antlr.internal.InternalPropertiesParser createParser() {
		org.osate.xtext.aadl2.properties.ui.contentassist.antlr.internal.InternalPropertiesParser result = new org.osate.xtext.aadl2.properties.ui.contentassist.antlr.internal.InternalPropertiesParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPropertySetAccess().getOwnedAlternatives_4_0(), "rule__PropertySet__OwnedAlternatives_4_0");
					put(grammarAccess.getPropertyExpressionAccess().getAlternatives(), "rule__PropertyExpression__Alternatives");
					put(grammarAccess.getPropertySetAccess().getGroup(), "rule__PropertySet__Group__0");
					put(grammarAccess.getPropertyTypeAccess().getGroup(), "rule__PropertyType__Group__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup(), "rule__PropertyDefinition__Group__0");
					put(grammarAccess.getPropertyAssociationAccess().getGroup(), "rule__PropertyAssociation__Group__0");
					put(grammarAccess.getProbabilityValueAccess().getGroup(), "rule__ProbabilityValue__Group__0");
					put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
					put(grammarAccess.getQNAMEAccess().getGroup(), "rule__QNAME__Group__0");
					put(grammarAccess.getPNAMEAccess().getGroup(), "rule__PNAME__Group__0");
					put(grammarAccess.getPNAMEAccess().getGroup_1(), "rule__PNAME__Group_1__0");
					put(grammarAccess.getQCREFAccess().getGroup(), "rule__QCREF__Group__0");
					put(grammarAccess.getQCREFAccess().getGroup_0(), "rule__QCREF__Group_0__0");
					put(grammarAccess.getQCREFAccess().getGroup_2(), "rule__QCREF__Group_2__0");
					put(grammarAccess.getPropertySetAccess().getNameAssignment_2(), "rule__PropertySet__NameAssignment_2");
					put(grammarAccess.getPropertySetAccess().getOwnedAssignment_4(), "rule__PropertySet__OwnedAssignment_4");
					put(grammarAccess.getPropertyTypeAccess().getNameAssignment_0(), "rule__PropertyType__NameAssignment_0");
					put(grammarAccess.getPropertyDefinitionAccess().getNameAssignment_0(), "rule__PropertyDefinition__NameAssignment_0");
					put(grammarAccess.getPropertyDefinitionAccess().getTypeAssignment_2(), "rule__PropertyDefinition__TypeAssignment_2");
					put(grammarAccess.getPropertyAssociationAccess().getNameAssignment_0(), "rule__PropertyAssociation__NameAssignment_0");
					put(grammarAccess.getPropertyAssociationAccess().getValueAssignment_2(), "rule__PropertyAssociation__ValueAssignment_2");
					put(grammarAccess.getLiteralAccess().getNameAssignment(), "rule__Literal__NameAssignment");
					put(grammarAccess.getProbabilityValueAccess().getNumberAssignment_0(), "rule__ProbabilityValue__NumberAssignment_0");
					put(grammarAccess.getProbabilityValueAccess().getDistributionAssignment_1(), "rule__ProbabilityValue__DistributionAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.osate.xtext.aadl2.properties.ui.contentassist.antlr.internal.InternalPropertiesParser typedParser = (org.osate.xtext.aadl2.properties.ui.contentassist.antlr.internal.InternalPropertiesParser) parser;
			typedParser.entryRulePropertySet();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PropertiesGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PropertiesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
