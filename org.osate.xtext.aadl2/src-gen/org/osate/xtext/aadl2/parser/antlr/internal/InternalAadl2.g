/*
* generated by Xtext
*/
grammar InternalAadl2;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.osate.xtext.aadl2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.osate.xtext.aadl2.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.xtext.aadl2.services.Aadl2GrammarAccess;

}

@parser::members {

 	private Aadl2GrammarAccess grammarAccess;
 	
    public InternalAadl2Parser(TokenStream input, Aadl2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AadlPackage";	
   	}
   	
   	@Override
   	protected Aadl2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAadlPackage
entryRuleAadlPackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAadlPackageRule()); }
	 iv_ruleAadlPackage=ruleAadlPackage 
	 { $current=$iv_ruleAadlPackage.current; } 
	 EOF 
;

// Rule AadlPackage
ruleAadlPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAadlPackageAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAadlPackageAccess().getNamePNAMEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=rulePNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAadlPackageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"PNAME");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getAadlPackageAccess().getOwnedPublicSectionPublicPackageSectionParserRuleCall_2_0_0_0()); 
	    }
		lv_ownedPublicSection_2_0=rulePublicPackageSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAadlPackageRule());
	        }
       		set(
       			$current, 
       			"ownedPublicSection",
        		lv_ownedPublicSection_2_0, 
        		"PublicPackageSection");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAadlPackageAccess().getOwnedPrivateSectionPrivatePackageSectionParserRuleCall_2_0_1_0()); 
	    }
		lv_ownedPrivateSection_3_0=rulePrivatePackageSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAadlPackageRule());
	        }
       		set(
       			$current, 
       			"ownedPrivateSection",
        		lv_ownedPrivateSection_3_0, 
        		"PrivatePackageSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAadlPackageAccess().getOwnedPrivateSectionPrivatePackageSectionParserRuleCall_2_1_0()); 
	    }
		lv_ownedPrivateSection_4_0=rulePrivatePackageSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAadlPackageRule());
	        }
       		set(
       			$current, 
       			"ownedPrivateSection",
        		lv_ownedPrivateSection_4_0, 
        		"PrivatePackageSection");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5='end' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAadlPackageAccess().getEndKeyword_3());
    }
this_ID_6=RULE_ID
    { 
    newLeafNode(this_ID_6, grammarAccess.getAadlPackageAccess().getIDTerminalRuleCall_4()); 
    }
(	otherlv_7='::' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAadlPackageAccess().getColonColonKeyword_5_0());
    }
this_ID_8=RULE_ID
    { 
    newLeafNode(this_ID_8, grammarAccess.getAadlPackageAccess().getIDTerminalRuleCall_5_1()); 
    }
)*this_SEMI_9=RULE_SEMI
    { 
    newLeafNode(this_SEMI_9, grammarAccess.getAadlPackageAccess().getSEMITerminalRuleCall_6()); 
    }
)
;







// Entry rule entryRulePublicPackageSection
entryRulePublicPackageSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPublicPackageSectionRule()); }
	 iv_rulePublicPackageSection=rulePublicPackageSection 
	 { $current=$iv_rulePublicPackageSection.current; } 
	 EOF 
;

// Rule PublicPackageSection
rulePublicPackageSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPublicPackageSectionAccess().getPublicPackageSectionAction_0(),
            $current);
    }
)	otherlv_1='public' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPublicPackageSectionAccess().getPublicKeyword_1());
    }
(((	'with' 
)=>	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPublicPackageSectionAccess().getWithKeyword_2_0());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublicPackageSectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPublicPackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_1_0()); 
	    }
		rulePNAME		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_4=RULE_COMMA
    { 
    newLeafNode(this_COMMA_4, grammarAccess.getPublicPackageSectionAccess().getCOMMATerminalRuleCall_2_2_0()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublicPackageSectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPublicPackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_2_1_0()); 
	    }
		rulePNAME		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*this_SEMI_6=RULE_SEMI
    { 
    newLeafNode(this_SEMI_6, grammarAccess.getPublicPackageSectionAccess().getSEMITerminalRuleCall_2_3()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getPublicPackageSectionAccess().getOwnedSystemTypeSystemTypeParserRuleCall_3_0_0()); 
	    }
		lv_ownedSystemType_7_0=ruleSystemType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPublicPackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedSystemType",
        		lv_ownedSystemType_7_0, 
        		"SystemType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPublicPackageSectionAccess().getOwnedSystemImplementationSystemImplementationParserRuleCall_3_1_0()); 
	    }
		lv_ownedSystemImplementation_8_0=ruleSystemImplementation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPublicPackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedSystemImplementation",
        		lv_ownedSystemImplementation_8_0, 
        		"SystemImplementation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPublicPackageSectionAccess().getOwnedProcessorTypeProcessorTypeParserRuleCall_3_2_0()); 
	    }
		lv_ownedProcessorType_9_0=ruleProcessorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPublicPackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedProcessorType",
        		lv_ownedProcessorType_9_0, 
        		"ProcessorType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPublicPackageSectionAccess().getOwnedDataTypeDataTypeParserRuleCall_3_3_0()); 
	    }
		lv_ownedDataType_10_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPublicPackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedDataType",
        		lv_ownedDataType_10_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePrivatePackageSection
entryRulePrivatePackageSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrivatePackageSectionRule()); }
	 iv_rulePrivatePackageSection=rulePrivatePackageSection 
	 { $current=$iv_rulePrivatePackageSection.current; } 
	 EOF 
;

// Rule PrivatePackageSection
rulePrivatePackageSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrivatePackageSectionAccess().getPrivatePackageSectionAction_0(),
            $current);
    }
)	otherlv_1='private' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrivatePackageSectionAccess().getPrivateKeyword_1());
    }
(((	'with' 
)=>	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrivatePackageSectionAccess().getWithKeyword_2_0());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrivatePackageSectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_1_0()); 
	    }
		rulePNAME		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_4=RULE_COMMA
    { 
    newLeafNode(this_COMMA_4, grammarAccess.getPrivatePackageSectionAccess().getCOMMATerminalRuleCall_2_2_0()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrivatePackageSectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_2_1_0()); 
	    }
		rulePNAME		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*this_SEMI_6=RULE_SEMI
    { 
    newLeafNode(this_SEMI_6, grammarAccess.getPrivatePackageSectionAccess().getSEMITerminalRuleCall_2_3()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getPrivatePackageSectionAccess().getOwnedSystemTypeSystemTypeParserRuleCall_3_0_0()); 
	    }
		lv_ownedSystemType_7_0=ruleSystemType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrivatePackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedSystemType",
        		lv_ownedSystemType_7_0, 
        		"SystemType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrivatePackageSectionAccess().getOwnedSystemImplementationSystemImplementationParserRuleCall_3_1_0()); 
	    }
		lv_ownedSystemImplementation_8_0=ruleSystemImplementation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrivatePackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedSystemImplementation",
        		lv_ownedSystemImplementation_8_0, 
        		"SystemImplementation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessorTypeProcessorTypeParserRuleCall_3_2_0()); 
	    }
		lv_ownedProcessorType_9_0=ruleProcessorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrivatePackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedProcessorType",
        		lv_ownedProcessorType_9_0, 
        		"ProcessorType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrivatePackageSectionAccess().getOwnedDataTypeDataTypeParserRuleCall_3_3_0()); 
	    }
		lv_ownedDataType_10_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrivatePackageSectionRule());
	        }
       		add(
       			$current, 
       			"ownedDataType",
        		lv_ownedDataType_10_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;









// Entry rule entryRuleFlowSource
entryRuleFlowSource returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowSourceRule()); } 
	 iv_ruleFlowSource=ruleFlowSource 
	 { $current=$iv_ruleFlowSource.current.getText(); }  
	 EOF 
;

// Rule FlowSource
ruleFlowSource returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='source' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFlowSourceAccess().getSourceKeyword()); 
    }

    ;





// Entry rule entryRuleFlowSink
entryRuleFlowSink returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowSinkRule()); } 
	 iv_ruleFlowSink=ruleFlowSink 
	 { $current=$iv_ruleFlowSink.current.getText(); }  
	 EOF 
;

// Rule FlowSink
ruleFlowSink returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='sink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFlowSinkAccess().getSinkKeyword()); 
    }

    ;





// Entry rule entryRuleFlowPath
entryRuleFlowPath returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowPathRule()); } 
	 iv_ruleFlowPath=ruleFlowPath 
	 { $current=$iv_ruleFlowPath.current.getText(); }  
	 EOF 
;

// Rule FlowPath
ruleFlowPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='path' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFlowPathAccess().getPathKeyword()); 
    }

    ;





// Entry rule entryRuleFlowSpecification
entryRuleFlowSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowSpecificationRule()); }
	 iv_ruleFlowSpecification=ruleFlowSpecification 
	 { $current=$iv_ruleFlowSpecification.current; } 
	 EOF 
;

// Rule FlowSpecification
ruleFlowSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFlowSpecificationAccess().getFlowSourceSpecParserRuleCall_0()); 
    }
    this_FlowSourceSpec_0=ruleFlowSourceSpec
    { 
        $current = $this_FlowSourceSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFlowSpecificationAccess().getFlowSinkSpecParserRuleCall_1()); 
    }
    this_FlowSinkSpec_1=ruleFlowSinkSpec
    { 
        $current = $this_FlowSinkSpec_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getFlowSpecificationAccess().getFlowPathSpecParserRuleCall_2_0()); 
    }
    this_FlowPathSpec_2=ruleFlowPathSpec
    { 
        $current = $this_FlowPathSpec_2.current; 
        afterParserOrEnumRuleCall();
    }
(((	'in' 
)=>	otherlv_3='in' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFlowSpecificationAccess().getInKeyword_2_1_0());
    }
)	otherlv_4='modes' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFlowSpecificationAccess().getModesKeyword_2_1_1());
    }
this_LPARENS_5=RULE_LPARENS
    { 
    newLeafNode(this_LPARENS_5, grammarAccess.getFlowSpecificationAccess().getLPARENSTerminalRuleCall_2_1_2()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowSpecificationRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getFlowSpecificationAccess().getInModeModeCrossReference_2_1_3_0()); 
	}

)
)+this_RPARENS_7=RULE_RPARENS
    { 
    newLeafNode(this_RPARENS_7, grammarAccess.getFlowSpecificationAccess().getRPARENSTerminalRuleCall_2_1_4()); 
    }
)?this_SEMI_8=RULE_SEMI
    { 
    newLeafNode(this_SEMI_8, grammarAccess.getFlowSpecificationAccess().getSEMITerminalRuleCall_2_2()); 
    }
))
;





// Entry rule entryRuleFlowSourceSpec
entryRuleFlowSourceSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowSourceSpecRule()); }
	 iv_ruleFlowSourceSpec=ruleFlowSourceSpec 
	 { $current=$iv_ruleFlowSourceSpec.current; } 
	 EOF 
;

// Rule FlowSourceSpec
ruleFlowSourceSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFlowSourceSpecAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowSourceSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getFlowSourceSpecAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='flow' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFlowSourceSpecAccess().getFlowKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowSourceSpecAccess().getKindFlowSourceParserRuleCall_3_0()); 
	    }
		lv_kind_3_0=ruleFlowSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowSourceSpecRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"FlowSource");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowSourceSpecRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFlowSourceSpecAccess().getOutFeatureFeatureCrossReference_4_0()); 
	}

)
))
;





// Entry rule entryRuleFlowSinkSpec
entryRuleFlowSinkSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowSinkSpecRule()); }
	 iv_ruleFlowSinkSpec=ruleFlowSinkSpec 
	 { $current=$iv_ruleFlowSinkSpec.current; } 
	 EOF 
;

// Rule FlowSinkSpec
ruleFlowSinkSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFlowSinkSpecAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowSinkSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getFlowSinkSpecAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='flow' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFlowSinkSpecAccess().getFlowKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowSinkSpecAccess().getKindFlowSinkParserRuleCall_3_0()); 
	    }
		lv_kind_3_0=ruleFlowSink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowSinkSpecRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"FlowSink");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowSinkSpecRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFlowSinkSpecAccess().getInFeatureFeatureCrossReference_4_0()); 
	}

)
))
;





// Entry rule entryRuleFlowPathSpec
entryRuleFlowPathSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowPathSpecRule()); }
	 iv_ruleFlowPathSpec=ruleFlowPathSpec 
	 { $current=$iv_ruleFlowPathSpec.current; } 
	 EOF 
;

// Rule FlowPathSpec
ruleFlowPathSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFlowPathSpecAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowPathSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getFlowPathSpecAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='flow' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFlowPathSpecAccess().getFlowKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowPathSpecAccess().getKindFlowPathParserRuleCall_3_0()); 
	    }
		lv_kind_3_0=ruleFlowPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowPathSpecRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"FlowPath");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowPathSpecRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFlowPathSpecAccess().getInFeatureFeatureCrossReference_4_0()); 
	}

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFlowPathSpecAccess().getHyphenMinusGreaterThanSignKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlowPathSpecRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getFlowPathSpecAccess().getOutFeatureFeatureCrossReference_6_0()); 
	}

)
))
;





// Entry rule entryRuleMode
entryRuleMode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModeRule()); }
	 iv_ruleMode=ruleMode 
	 { $current=$iv_ruleMode.current; } 
	 EOF 
;

// Rule Mode
ruleMode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getModeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getModeAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		lv_initial_2_0=	'initial' 
    {
        newLeafNode(lv_initial_2_0, grammarAccess.getModeAccess().getInitialInitialKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeRule());
	        }
       		setWithLastConsumed($current, "initial", true, "initial");
	    }

)
)?	otherlv_3='mode' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModeAccess().getModeKeyword_3());
    }
this_SEMI_4=RULE_SEMI
    { 
    newLeafNode(this_SEMI_4, grammarAccess.getModeAccess().getSEMITerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleModeTransition
entryRuleModeTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModeTransitionRule()); }
	 iv_ruleModeTransition=ruleModeTransition 
	 { $current=$iv_ruleModeTransition.current; } 
	 EOF 
;

// Rule ModeTransition
ruleModeTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getModeTransitionAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getModeTransitionAccess().getCOLONTerminalRuleCall_0_1()); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeTransitionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getModeTransitionAccess().getSourceModeCrossReference_1_0()); 
	}

)
)this_LTRANS_3=RULE_LTRANS
    { 
    newLeafNode(this_LTRANS_3, grammarAccess.getModeTransitionAccess().getLTRANSTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModeTransitionAccess().getOwnedTriggerTriggerPortParserRuleCall_3_0()); 
	    }
		lv_ownedTrigger_4_0=ruleTriggerPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModeTransitionRule());
	        }
       		add(
       			$current, 
       			"ownedTrigger",
        		lv_ownedTrigger_4_0, 
        		"TriggerPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_5=RULE_COMMA
    { 
    newLeafNode(this_COMMA_5, grammarAccess.getModeTransitionAccess().getCOMMATerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModeTransitionAccess().getOwnedTriggerTriggerPortParserRuleCall_4_1_0()); 
	    }
		lv_ownedTrigger_6_0=ruleTriggerPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModeTransitionRule());
	        }
       		add(
       			$current, 
       			"ownedTrigger",
        		lv_ownedTrigger_6_0, 
        		"TriggerPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RTRANS_7=RULE_RTRANS
    { 
    newLeafNode(this_RTRANS_7, grammarAccess.getModeTransitionAccess().getRTRANSTerminalRuleCall_5()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeTransitionRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getModeTransitionAccess().getDestinationModeCrossReference_6_0()); 
	}

)
)this_SEMI_9=RULE_SEMI
    { 
    newLeafNode(this_SEMI_9, grammarAccess.getModeTransitionAccess().getSEMITerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleTriggerPort
entryRuleTriggerPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggerPortRule()); }
	 iv_ruleTriggerPort=ruleTriggerPort 
	 { $current=$iv_ruleTriggerPort.current; } 
	 EOF 
;

// Rule TriggerPort
ruleTriggerPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggerPortRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTriggerPortAccess().getPortPortCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleComponentCategoryKW
entryRuleComponentCategoryKW returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentCategoryKWRule()); } 
	 iv_ruleComponentCategoryKW=ruleComponentCategoryKW 
	 { $current=$iv_ruleComponentCategoryKW.current.getText(); }  
	 EOF 
;

// Rule ComponentCategoryKW
ruleComponentCategoryKW returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getAbstractKeyword_0()); 
    }

    |
	kw='bus' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getBusKeyword_1()); 
    }

    |
	kw='data' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getDataKeyword_2()); 
    }

    |
	kw='device' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getDeviceKeyword_3()); 
    }

    |
	kw='memory' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getMemoryKeyword_4()); 
    }

    |
	kw='process' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getProcessKeyword_5()); 
    }

    |
	kw='processor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getProcessorKeyword_6()); 
    }

    |(
	kw='subprogram' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getSubprogramKeyword_7_0()); 
    }

	kw='group' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getGroupKeyword_7_1()); 
    }
)
    |
	kw='system' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getSystemKeyword_8()); 
    }

    |(
	kw='thread' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getThreadKeyword_9_0()); 
    }

	kw='group' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getGroupKeyword_9_1()); 
    }
)
    |
	kw='thread' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getThreadKeyword_10()); 
    }

    |(
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getVirtualKeyword_11_0()); 
    }

	kw='bus' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getBusKeyword_11_1()); 
    }
)
    |(
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getVirtualKeyword_12_0()); 
    }

	kw='processor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComponentCategoryKWAccess().getProcessorKeyword_12_1()); 
    }
))
    ;





// Entry rule entryRuleSystemType
entryRuleSystemType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemTypeRule()); }
	 iv_ruleSystemType=ruleSystemType 
	 { $current=$iv_ruleSystemType.current; } 
	 EOF 
;

// Rule SystemType
ruleSystemType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSystemTypeAccess().getSystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSystemTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(((	'prototypes' 
)=>	otherlv_2='prototypes' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemTypeAccess().getPrototypesKeyword_2_0());
    }
)((
(
		lv_noPrototypes_3_0=RULE_NONE
		{
			newLeafNode(lv_noPrototypes_3_0, grammarAccess.getSystemTypeAccess().getNoPrototypesNONETerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noPrototypes",
        		true, 
        		"NONE");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedPrototypePrototypeParserRuleCall_2_1_1_0()); 
	    }
		lv_ownedPrototype_4_0=rulePrototype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedPrototype",
        		lv_ownedPrototype_4_0, 
        		"Prototype");
	        afterParserOrEnumRuleCall();
	    }

)
)+))?(((	'features' 
)=>	otherlv_5='features' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSystemTypeAccess().getFeaturesKeyword_3_0());
    }
)((
(
		lv_noFeatures_6_0=RULE_NONE
		{
			newLeafNode(lv_noFeatures_6_0, grammarAccess.getSystemTypeAccess().getNoFeaturesNONETerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFeatures",
        		true, 
        		"NONE");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedDataPortDataPortParserRuleCall_3_1_1_0_0()); 
	    }
		lv_ownedDataPort_7_0=ruleDataPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedDataPort",
        		lv_ownedDataPort_7_0, 
        		"DataPort");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedEventPortEventPortParserRuleCall_3_1_1_1_0()); 
	    }
		lv_ownedEventPort_8_0=ruleEventPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedEventPort",
        		lv_ownedEventPort_8_0, 
        		"EventPort");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_3_1_1_2_0()); 
	    }
		lv_ownedEventDataPort_9_0=ruleEventDataPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedEventDataPort",
        		lv_ownedEventDataPort_9_0, 
        		"EventDataPort");
	        afterParserOrEnumRuleCall();
	    }

)
))+))?(((	'flows' 
)=>	otherlv_10='flows' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSystemTypeAccess().getFlowsKeyword_4_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_4_1_0_0()); 
	    }
		lv_ownedFlowSpecification_11_0=ruleFlowSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedFlowSpecification",
        		lv_ownedFlowSpecification_11_0, 
        		"FlowSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_noFlows_12_0=RULE_NONE
		{
			newLeafNode(lv_noFlows_12_0, grammarAccess.getSystemTypeAccess().getNoFlowsNONETerminalRuleCall_4_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFlows",
        		true, 
        		"NONE");
	    }

)
)))?((((	'modes' 
)=>	otherlv_13='modes' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSystemTypeAccess().getModesKeyword_5_0_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedModeModeParserRuleCall_5_0_1_0_0()); 
	    }
		lv_ownedMode_14_0=ruleMode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedMode",
        		lv_ownedMode_14_0, 
        		"Mode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_5_0_1_1_0()); 
	    }
		lv_ownedModeTransition_15_0=ruleModeTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedModeTransition",
        		lv_ownedModeTransition_15_0, 
        		"ModeTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |(
(
		lv_noModes_16_0=RULE_NONE
		{
			newLeafNode(lv_noModes_16_0, grammarAccess.getSystemTypeAccess().getNoModesNONETerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noModes",
        		true, 
        		"NONE");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_6_0()); 
	    }
		lv_ownedAnnexSubclause_17_0=ruleAnnexSubclause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemTypeRule());
	        }
       		add(
       			$current, 
       			"ownedAnnexSubclause",
        		lv_ownedAnnexSubclause_17_0, 
        		"AnnexSubclause");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_18='end' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSystemTypeAccess().getEndKeyword_7());
    }
this_ID_19=RULE_ID
    { 
    newLeafNode(this_ID_19, grammarAccess.getSystemTypeAccess().getIDTerminalRuleCall_8()); 
    }
this_SEMI_20=RULE_SEMI
    { 
    newLeafNode(this_SEMI_20, grammarAccess.getSystemTypeAccess().getSEMITerminalRuleCall_9()); 
    }
)
;









// Entry rule entryRuleProcessorType
entryRuleProcessorType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessorTypeRule()); }
	 iv_ruleProcessorType=ruleProcessorType 
	 { $current=$iv_ruleProcessorType.current; } 
	 EOF 
;

// Rule ProcessorType
ruleProcessorType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='processor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcessorTypeAccess().getProcessorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProcessorTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(((	'features' 
)=>	otherlv_2='features' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcessorTypeAccess().getFeaturesKeyword_2_0());
    }
)((
(
		lv_noFeatures_3_0=RULE_NONE
		{
			newLeafNode(lv_noFeatures_3_0, grammarAccess.getProcessorTypeAccess().getNoFeaturesNONETerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFeatures",
        		true, 
        		"NONE");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedDataPortDataPortParserRuleCall_2_1_1_0_0()); 
	    }
		lv_ownedDataPort_4_0=ruleDataPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedDataPort",
        		lv_ownedDataPort_4_0, 
        		"DataPort");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedEventPortEventPortParserRuleCall_2_1_1_1_0()); 
	    }
		lv_ownedEventPort_5_0=ruleEventPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedEventPort",
        		lv_ownedEventPort_5_0, 
        		"EventPort");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_2_1_1_2_0()); 
	    }
		lv_ownedEventDataPort_6_0=ruleEventDataPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedEventDataPort",
        		lv_ownedEventDataPort_6_0, 
        		"EventDataPort");
	        afterParserOrEnumRuleCall();
	    }

)
))+))?(((	'flows' 
)=>	otherlv_7='flows' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProcessorTypeAccess().getFlowsKeyword_3_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_3_1_0_0()); 
	    }
		lv_ownedFlowSpecification_8_0=ruleFlowSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedFlowSpecification",
        		lv_ownedFlowSpecification_8_0, 
        		"FlowSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_noFlows_9_0=RULE_NONE
		{
			newLeafNode(lv_noFlows_9_0, grammarAccess.getProcessorTypeAccess().getNoFlowsNONETerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFlows",
        		true, 
        		"NONE");
	    }

)
)))?((((	'modes' 
)=>	otherlv_10='modes' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getProcessorTypeAccess().getModesKeyword_4_0_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedModeModeParserRuleCall_4_0_1_0_0()); 
	    }
		lv_ownedMode_11_0=ruleMode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedMode",
        		lv_ownedMode_11_0, 
        		"Mode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_4_0_1_1_0()); 
	    }
		lv_ownedModeTransition_12_0=ruleModeTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedModeTransition",
        		lv_ownedModeTransition_12_0, 
        		"ModeTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |(
(
		lv_noModes_13_0=RULE_NONE
		{
			newLeafNode(lv_noModes_13_0, grammarAccess.getProcessorTypeAccess().getNoModesNONETerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noModes",
        		true, 
        		"NONE");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_5_0()); 
	    }
		lv_ownedAnnexSubclause_14_0=ruleAnnexSubclause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorTypeRule());
	        }
       		add(
       			$current, 
       			"ownedAnnexSubclause",
        		lv_ownedAnnexSubclause_14_0, 
        		"AnnexSubclause");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_15='end' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProcessorTypeAccess().getEndKeyword_6());
    }
this_ID_16=RULE_ID
    { 
    newLeafNode(this_ID_16, grammarAccess.getProcessorTypeAccess().getIDTerminalRuleCall_7()); 
    }
this_SEMI_17=RULE_SEMI
    { 
    newLeafNode(this_SEMI_17, grammarAccess.getProcessorTypeAccess().getSEMITerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current; } 
	 EOF 
;

// Rule DataType
ruleDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='data' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataTypeAccess().getDataKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(((	'features' 
)=>	otherlv_2='features' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataTypeAccess().getFeaturesKeyword_2_0());
    }
)(
(
		lv_noFeatures_3_0=RULE_NONE
		{
			newLeafNode(lv_noFeatures_3_0, grammarAccess.getDataTypeAccess().getNoFeaturesNONETerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFeatures",
        		true, 
        		"NONE");
	    }

)
))?(((	'flows' 
)=>	otherlv_4='flows' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataTypeAccess().getFlowsKeyword_3_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_3_1_0_0()); 
	    }
		lv_ownedFlowSpecification_5_0=ruleFlowSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		add(
       			$current, 
       			"ownedFlowSpecification",
        		lv_ownedFlowSpecification_5_0, 
        		"FlowSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_noFlows_6_0=RULE_NONE
		{
			newLeafNode(lv_noFlows_6_0, grammarAccess.getDataTypeAccess().getNoFlowsNONETerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFlows",
        		true, 
        		"NONE");
	    }

)
)))?((((	'modes' 
)=>	otherlv_7='modes' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataTypeAccess().getModesKeyword_4_0_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getOwnedModeModeParserRuleCall_4_0_1_0_0()); 
	    }
		lv_ownedMode_8_0=ruleMode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		add(
       			$current, 
       			"ownedMode",
        		lv_ownedMode_8_0, 
        		"Mode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_4_0_1_1_0()); 
	    }
		lv_ownedModeTransition_9_0=ruleModeTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		add(
       			$current, 
       			"ownedModeTransition",
        		lv_ownedModeTransition_9_0, 
        		"ModeTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |(
(
		lv_noModes_10_0=RULE_NONE
		{
			newLeafNode(lv_noModes_10_0, grammarAccess.getDataTypeAccess().getNoModesNONETerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noModes",
        		true, 
        		"NONE");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_5_0()); 
	    }
		lv_ownedAnnexSubclause_11_0=ruleAnnexSubclause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		add(
       			$current, 
       			"ownedAnnexSubclause",
        		lv_ownedAnnexSubclause_11_0, 
        		"AnnexSubclause");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12='end' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDataTypeAccess().getEndKeyword_6());
    }
this_ID_13=RULE_ID
    { 
    newLeafNode(this_ID_13, grammarAccess.getDataTypeAccess().getIDTerminalRuleCall_7()); 
    }
this_SEMI_14=RULE_SEMI
    { 
    newLeafNode(this_SEMI_14, grammarAccess.getDataTypeAccess().getSEMITerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleSystemImplementation
entryRuleSystemImplementation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemImplementationRule()); }
	 iv_ruleSystemImplementation=ruleSystemImplementation 
	 { $current=$iv_ruleSystemImplementation.current; } 
	 EOF 
;

// Rule SystemImplementation
ruleSystemImplementation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSystemImplementationAccess().getSystemKeyword_0());
    }
	otherlv_1='implementation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSystemImplementationAccess().getImplementationKeyword_1());
    }
(((	'subcomponents' 
)=>	otherlv_2='subcomponents' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemImplementationAccess().getSubcomponentsKeyword_2_0());
    }
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedSystemSubcomponentSystemSubcomponentParserRuleCall_2_1_0_0_0()); 
	    }
		lv_ownedSystemSubcomponent_3_0=ruleSystemSubcomponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedSystemSubcomponent",
        		lv_ownedSystemSubcomponent_3_0, 
        		"SystemSubcomponent");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedProcessorSubcomponentProcessorSubcomponentParserRuleCall_2_1_0_1_0()); 
	    }
		lv_ownedProcessorSubcomponent_4_0=ruleProcessorSubcomponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedProcessorSubcomponent",
        		lv_ownedProcessorSubcomponent_4_0, 
        		"ProcessorSubcomponent");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_2_1_0_2_0()); 
	    }
		lv_ownedDataSubcomponent_5_0=ruleDataSubcomponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedDataSubcomponent",
        		lv_ownedDataSubcomponent_5_0, 
        		"DataSubcomponent");
	        afterParserOrEnumRuleCall();
	    }

)
))+
    |(
(
		lv_noSubcomponents_6_0=RULE_NONE
		{
			newLeafNode(lv_noSubcomponents_6_0, grammarAccess.getSystemImplementationAccess().getNoSubcomponentsNONETerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemImplementationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noSubcomponents",
        		true, 
        		"NONE");
	    }

)
)))?(((	'connections' 
)=>	otherlv_7='connections' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSystemImplementationAccess().getConnectionsKeyword_3_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_3_1_0_0()); 
	    }
		lv_ownedPortConnection_8_0=rulePortConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedPortConnection",
        		lv_ownedPortConnection_8_0, 
        		"PortConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_noConnections_9_0=RULE_NONE
		{
			newLeafNode(lv_noConnections_9_0, grammarAccess.getSystemImplementationAccess().getNoConnectionsNONETerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemImplementationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noConnections",
        		true, 
        		"NONE");
	    }

)
)))?(((	'flows' 
)=>	otherlv_10='flows' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSystemImplementationAccess().getFlowsKeyword_4_0());
    }
)(
(
		lv_noFlows_11_0=RULE_NONE
		{
			newLeafNode(lv_noFlows_11_0, grammarAccess.getSystemImplementationAccess().getNoFlowsNONETerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemImplementationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noFlows",
        		true, 
        		"NONE");
	    }

)
))?(((	'modes' 
)=>	otherlv_12='modes' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSystemImplementationAccess().getModesKeyword_5_0());
    }
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedModeModeParserRuleCall_5_1_0_0_0()); 
	    }
		lv_ownedMode_13_0=ruleMode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedMode",
        		lv_ownedMode_13_0, 
        		"Mode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_5_1_0_1_0()); 
	    }
		lv_ownedModeTransition_14_0=ruleModeTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedModeTransition",
        		lv_ownedModeTransition_14_0, 
        		"ModeTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))+
    |(
(
		lv_noModes_15_0=RULE_NONE
		{
			newLeafNode(lv_noModes_15_0, grammarAccess.getSystemImplementationAccess().getNoModesNONETerminalRuleCall_5_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemImplementationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"noModes",
        		true, 
        		"NONE");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_6_0()); 
	    }
		lv_ownedAnnexSubclause_16_0=ruleAnnexSubclause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemImplementationRule());
	        }
       		add(
       			$current, 
       			"ownedAnnexSubclause",
        		lv_ownedAnnexSubclause_16_0, 
        		"AnnexSubclause");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='end' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSystemImplementationAccess().getEndKeyword_7());
    }
this_ID_18=RULE_ID
    { 
    newLeafNode(this_ID_18, grammarAccess.getSystemImplementationAccess().getIDTerminalRuleCall_8()); 
    }
this_DOT_19=RULE_DOT
    { 
    newLeafNode(this_DOT_19, grammarAccess.getSystemImplementationAccess().getDOTTerminalRuleCall_9()); 
    }

    { 
        newCompositeNode(grammarAccess.getSystemImplementationAccess().getINAMEParserRuleCall_10()); 
    }
ruleINAME
    { 
        afterParserOrEnumRuleCall();
    }
this_SEMI_21=RULE_SEMI
    { 
    newLeafNode(this_SEMI_21, grammarAccess.getSystemImplementationAccess().getSEMITerminalRuleCall_11()); 
    }
)
;









// Entry rule entryRulePrototype
entryRulePrototype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrototypeRule()); }
	 iv_rulePrototype=rulePrototype 
	 { $current=$iv_rulePrototype.current; } 
	 EOF 
;

// Rule Prototype
rulePrototype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrototypeAccess().getComponentPrototypeParserRuleCall_0()); 
    }
    this_ComponentPrototype_0=ruleComponentPrototype
    { 
        $current = $this_ComponentPrototype_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrototypeAccess().getFeatureGroupPrototypeParserRuleCall_1()); 
    }
    this_FeatureGroupPrototype_1=ruleFeatureGroupPrototype
    { 
        $current = $this_FeatureGroupPrototype_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrototypeAccess().getFeaturePrototypeParserRuleCall_2()); 
    }
    this_FeaturePrototype_2=ruleFeaturePrototype
    { 
        $current = $this_FeaturePrototype_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleComponentPrototype
entryRuleComponentPrototype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentPrototypeRule()); }
	 iv_ruleComponentPrototype=ruleComponentPrototype 
	 { $current=$iv_ruleComponentPrototype.current; } 
	 EOF 
;

// Rule ComponentPrototype
ruleComponentPrototype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getComponentPrototypeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentPrototypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getComponentPrototypeAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentPrototypeAccess().getCategoryComponentCategoryKWParserRuleCall_2_0()); 
	    }
		lv_category_2_0=ruleComponentCategoryKW		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentPrototypeRule());
	        }
       		set(
       			$current, 
       			"category",
        		lv_category_2_0, 
        		"ComponentCategoryKW");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentPrototypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComponentPrototypeAccess().getConstrainingClassifierComponentClassifierCrossReference_3_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMI_4=RULE_SEMI
    { 
    newLeafNode(this_SEMI_4, grammarAccess.getComponentPrototypeAccess().getSEMITerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleFeatureGroupPrototype
entryRuleFeatureGroupPrototype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureGroupPrototypeRule()); }
	 iv_ruleFeatureGroupPrototype=ruleFeatureGroupPrototype 
	 { $current=$iv_ruleFeatureGroupPrototype.current; } 
	 EOF 
;

// Rule FeatureGroupPrototype
ruleFeatureGroupPrototype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFeatureGroupPrototypeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureGroupPrototypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getFeatureGroupPrototypeAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='feature' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureGroupPrototypeAccess().getFeatureKeyword_2());
    }
	otherlv_3='group' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeatureGroupPrototypeAccess().getGroupKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureGroupPrototypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFeatureGroupPrototypeAccess().getConstrainingFeatureGroupTypeFeatureGroupTypeCrossReference_4_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMI_5=RULE_SEMI
    { 
    newLeafNode(this_SEMI_5, grammarAccess.getFeatureGroupPrototypeAccess().getSEMITerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleFeaturePrototype
entryRuleFeaturePrototype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeaturePrototypeRule()); }
	 iv_ruleFeaturePrototype=ruleFeaturePrototype 
	 { $current=$iv_ruleFeaturePrototype.current; } 
	 EOF 
;

// Rule FeaturePrototype
ruleFeaturePrototype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFeaturePrototypeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturePrototypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getFeaturePrototypeAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='feature' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeaturePrototypeAccess().getFeatureKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeaturePrototypeAccess().getDirectionPortDirectionParserRuleCall_3_0()); 
	    }
		lv_direction_3_0=rulePortDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeaturePrototypeRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_3_0, 
        		"PortDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturePrototypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFeaturePrototypeAccess().getConstrainingClassifierComponentClassifierCrossReference_4_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMI_5=RULE_SEMI
    { 
    newLeafNode(this_SEMI_5, grammarAccess.getFeaturePrototypeAccess().getSEMITerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleDataPort
entryRuleDataPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataPortRule()); }
	 iv_ruleDataPort=ruleDataPort 
	 { $current=$iv_ruleDataPort.current; } 
	 EOF 
;

// Rule DataPort
ruleDataPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDataPortAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getDataPortAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataPortAccess().getDirectionPortDirectionParserRuleCall_2_0()); 
	    }
		lv_direction_2_0=rulePortDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataPortRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_2_0, 
        		"PortDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='data' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataPortAccess().getDataKeyword_3());
    }
	otherlv_4='port' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataPortAccess().getPortKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataPortAccess().getDataClassifierDataTypeCrossReference_5_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMI_6=RULE_SEMI
    { 
    newLeafNode(this_SEMI_6, grammarAccess.getDataPortAccess().getSEMITerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRuleEventDataPort
entryRuleEventDataPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventDataPortRule()); }
	 iv_ruleEventDataPort=ruleEventDataPort 
	 { $current=$iv_ruleEventDataPort.current; } 
	 EOF 
;

// Rule EventDataPort
ruleEventDataPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEventDataPortAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventDataPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getEventDataPortAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDataPortAccess().getDirectionPortDirectionParserRuleCall_2_0()); 
	    }
		lv_direction_2_0=rulePortDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDataPortRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_2_0, 
        		"PortDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEventDataPortAccess().getEventKeyword_3());
    }
	otherlv_4='data' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventDataPortAccess().getDataKeyword_4());
    }
	otherlv_5='port' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEventDataPortAccess().getPortKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventDataPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventDataPortAccess().getDataClassifierDataTypeCrossReference_6_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?this_SEMI_7=RULE_SEMI
    { 
    newLeafNode(this_SEMI_7, grammarAccess.getEventDataPortAccess().getSEMITerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleEventPort
entryRuleEventPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventPortRule()); }
	 iv_ruleEventPort=ruleEventPort 
	 { $current=$iv_ruleEventPort.current; } 
	 EOF 
;

// Rule EventPort
ruleEventPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEventPortAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getEventPortAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventPortAccess().getDirectionPortDirectionParserRuleCall_2_0()); 
	    }
		lv_direction_2_0=rulePortDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventPortRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_2_0, 
        		"PortDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEventPortAccess().getEventKeyword_3());
    }
	otherlv_4='port' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventPortAccess().getPortKeyword_4());
    }
this_SEMI_5=RULE_SEMI
    { 
    newLeafNode(this_SEMI_5, grammarAccess.getEventPortAccess().getSEMITerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleFeatureGroup
entryRuleFeatureGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureGroupRule()); }
	 iv_ruleFeatureGroup=ruleFeatureGroup 
	 { $current=$iv_ruleFeatureGroup.current; } 
	 EOF 
;

// Rule FeatureGroup
ruleFeatureGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFeatureGroupAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='feature' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeatureGroupAccess().getFeatureKeyword_1());
    }
	otherlv_2='group' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureGroupAccess().getGroupKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFeatureGroupAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_3_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMI_4=RULE_SEMI
    { 
    newLeafNode(this_SEMI_4, grammarAccess.getFeatureGroupAccess().getSEMITerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getPortParserRuleCall_0()); 
    }
    this_Port_0=rulePort
    { 
        $current = $this_Port_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getFeatureGroupParserRuleCall_1()); 
    }
    this_FeatureGroup_1=ruleFeatureGroup
    { 
        $current = $this_FeatureGroup_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePort
entryRulePort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	 iv_rulePort=rulePort 
	 { $current=$iv_rulePort.current; } 
	 EOF 
;

// Rule Port
rulePort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPortAccess().getDataPortParserRuleCall_0()); 
    }
    this_DataPort_0=ruleDataPort
    { 
        $current = $this_DataPort_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPortAccess().getEventPortParserRuleCall_1()); 
    }
    this_EventPort_1=ruleEventPort
    { 
        $current = $this_EventPort_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPortAccess().getEventDataPortParserRuleCall_2()); 
    }
    this_EventDataPort_2=ruleEventDataPort
    { 
        $current = $this_EventDataPort_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePortDirection
entryRulePortDirection returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortDirectionRule()); } 
	 iv_rulePortDirection=rulePortDirection 
	 { $current=$iv_rulePortDirection.current.getText(); }  
	 EOF 
;

// Rule PortDirection
rulePortDirection returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='in' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPortDirectionAccess().getInKeyword_0()); 
    }

    |
	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPortDirectionAccess().getOutKeyword_1()); 
    }

    |(
	kw='in' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPortDirectionAccess().getInKeyword_2_0()); 
    }

	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPortDirectionAccess().getOutKeyword_2_1()); 
    }
))
    ;





// Entry rule entryRuleModeRef
entryRuleModeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModeRefRule()); }
	 iv_ruleModeRef=ruleModeRef 
	 { $current=$iv_ruleModeRef.current; } 
	 EOF 
;

// Rule ModeRef
ruleModeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getModeRefAccess().getParentModeModeCrossReference_0_0()); 
	}

)
)(	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModeRefAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeRefRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getModeRefAccess().getDerivedModeModeCrossReference_1_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleSystemSubcomponent
entryRuleSystemSubcomponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemSubcomponentRule()); }
	 iv_ruleSystemSubcomponent=ruleSystemSubcomponent 
	 { $current=$iv_ruleSystemSubcomponent.current; } 
	 EOF 
;

// Rule SystemSubcomponent
ruleSystemSubcomponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSystemSubcomponentAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemSubcomponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getSystemSubcomponentAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='system' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemSubcomponentAccess().getSystemKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemSubcomponentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSystemSubcomponentAccess().getSystemClassifierSystemClassifierCrossReference_3_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSystemSubcomponentAccess().getInKeyword_4_0());
    }
	otherlv_5='modes' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSystemSubcomponentAccess().getModesKeyword_4_1());
    }
this_LPARENS_6=RULE_LPARENS
    { 
    newLeafNode(this_LPARENS_6, grammarAccess.getSystemSubcomponentAccess().getLPARENSTerminalRuleCall_4_2()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSystemSubcomponentAccess().getModeBindingModeRefParserRuleCall_4_3_0_0()); 
	    }
		lv_modeBinding_7_0=ruleModeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemSubcomponentRule());
	        }
       		add(
       			$current, 
       			"modeBinding",
        		lv_modeBinding_7_0, 
        		"ModeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_allModes_8_0=	'all' 
    {
        newLeafNode(lv_allModes_8_0, grammarAccess.getSystemSubcomponentAccess().getAllModesAllKeyword_4_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemSubcomponentRule());
	        }
       		setWithLastConsumed($current, "allModes", true, "all");
	    }

)
))this_RPARENS_9=RULE_RPARENS
    { 
    newLeafNode(this_RPARENS_9, grammarAccess.getSystemSubcomponentAccess().getRPARENSTerminalRuleCall_4_4()); 
    }
)?this_SEMI_10=RULE_SEMI
    { 
    newLeafNode(this_SEMI_10, grammarAccess.getSystemSubcomponentAccess().getSEMITerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleProcessorSubcomponent
entryRuleProcessorSubcomponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessorSubcomponentRule()); }
	 iv_ruleProcessorSubcomponent=ruleProcessorSubcomponent 
	 { $current=$iv_ruleProcessorSubcomponent.current; } 
	 EOF 
;

// Rule ProcessorSubcomponent
ruleProcessorSubcomponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getProcessorSubcomponentAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorSubcomponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getProcessorSubcomponentAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='processor' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcessorSubcomponentAccess().getProcessorKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorSubcomponentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProcessorSubcomponentAccess().getProcessorClassifierProcessorClassifierCrossReference_3_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcessorSubcomponentAccess().getInKeyword_4_0());
    }
	otherlv_5='modes' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProcessorSubcomponentAccess().getModesKeyword_4_1());
    }
this_LPARENS_6=RULE_LPARENS
    { 
    newLeafNode(this_LPARENS_6, grammarAccess.getProcessorSubcomponentAccess().getLPARENSTerminalRuleCall_4_2()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcessorSubcomponentAccess().getModeBindingModeRefParserRuleCall_4_3_0_0()); 
	    }
		lv_modeBinding_7_0=ruleModeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessorSubcomponentRule());
	        }
       		add(
       			$current, 
       			"modeBinding",
        		lv_modeBinding_7_0, 
        		"ModeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_allModes_8_0=	'all' 
    {
        newLeafNode(lv_allModes_8_0, grammarAccess.getProcessorSubcomponentAccess().getAllModesAllKeyword_4_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcessorSubcomponentRule());
	        }
       		setWithLastConsumed($current, "allModes", true, "all");
	    }

)
))this_RPARENS_9=RULE_RPARENS
    { 
    newLeafNode(this_RPARENS_9, grammarAccess.getProcessorSubcomponentAccess().getRPARENSTerminalRuleCall_4_4()); 
    }
)?this_SEMI_10=RULE_SEMI
    { 
    newLeafNode(this_SEMI_10, grammarAccess.getProcessorSubcomponentAccess().getSEMITerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleDataSubcomponent
entryRuleDataSubcomponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataSubcomponentRule()); }
	 iv_ruleDataSubcomponent=ruleDataSubcomponent 
	 { $current=$iv_ruleDataSubcomponent.current; } 
	 EOF 
;

// Rule DataSubcomponent
ruleDataSubcomponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDataSubcomponentAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataSubcomponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getDataSubcomponentAccess().getCOLONTerminalRuleCall_1()); 
    }
	otherlv_2='data' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataSubcomponentAccess().getDataKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataSubcomponentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataSubcomponentAccess().getDataClassifierDataClassifierCrossReference_3_0()); 
	    }
		ruleQCREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataSubcomponentAccess().getInKeyword_4_0());
    }
	otherlv_5='modes' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataSubcomponentAccess().getModesKeyword_4_1());
    }
this_LPARENS_6=RULE_LPARENS
    { 
    newLeafNode(this_LPARENS_6, grammarAccess.getDataSubcomponentAccess().getLPARENSTerminalRuleCall_4_2()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDataSubcomponentAccess().getModeBindingModeRefParserRuleCall_4_3_0_0()); 
	    }
		lv_modeBinding_7_0=ruleModeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSubcomponentRule());
	        }
       		add(
       			$current, 
       			"modeBinding",
        		lv_modeBinding_7_0, 
        		"ModeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		lv_allModes_8_0=	'all' 
    {
        newLeafNode(lv_allModes_8_0, grammarAccess.getDataSubcomponentAccess().getAllModesAllKeyword_4_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataSubcomponentRule());
	        }
       		setWithLastConsumed($current, "allModes", true, "all");
	    }

)
))this_RPARENS_9=RULE_RPARENS
    { 
    newLeafNode(this_RPARENS_9, grammarAccess.getDataSubcomponentAccess().getRPARENSTerminalRuleCall_4_4()); 
    }
)?this_SEMI_10=RULE_SEMI
    { 
    newLeafNode(this_SEMI_10, grammarAccess.getDataSubcomponentAccess().getSEMITerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleSubcomponent
entryRuleSubcomponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubcomponentRule()); }
	 iv_ruleSubcomponent=ruleSubcomponent 
	 { $current=$iv_ruleSubcomponent.current; } 
	 EOF 
;

// Rule Subcomponent
ruleSubcomponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubcomponentAccess().getSystemSubcomponentParserRuleCall_0()); 
    }
    this_SystemSubcomponent_0=ruleSystemSubcomponent
    { 
        $current = $this_SystemSubcomponent_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubcomponentAccess().getProcessorSubcomponentParserRuleCall_1()); 
    }
    this_ProcessorSubcomponent_1=ruleProcessorSubcomponent
    { 
        $current = $this_ProcessorSubcomponent_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubcomponentAccess().getDataSubcomponentParserRuleCall_2()); 
    }
    this_DataSubcomponent_2=ruleDataSubcomponent
    { 
        $current = $this_DataSubcomponent_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePortConnection
entryRulePortConnection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortConnectionRule()); }
	 iv_rulePortConnection=rulePortConnection 
	 { $current=$iv_rulePortConnection.current; } 
	 EOF 
;

// Rule PortConnection
rulePortConnection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPortConnectionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortConnectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getPortConnectionAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortConnectionAccess().getKindConnectionTypeParserRuleCall_2_0()); 
	    }
		lv_kind_2_0=ruleConnectionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortConnectionRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_2_0, 
        		"ConnectionType");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortConnectionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPortConnectionAccess().getSourceContextContextCrossReference_3_0_0()); 
	}

)
)this_DOT_4=RULE_DOT
    { 
    newLeafNode(this_DOT_4, grammarAccess.getPortConnectionAccess().getDOTTerminalRuleCall_3_1()); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortConnectionRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getPortConnectionAccess().getSourceConnectionEndCrossReference_4_0()); 
	}

)
)(	otherlv_6='->' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPortConnectionAccess().getHyphenMinusGreaterThanSignKeyword_5_0());
    }

    |(
(
		lv_bidirectional_7_0=	'<->' 
    {
        newLeafNode(lv_bidirectional_7_0, grammarAccess.getPortConnectionAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortConnectionRule());
	        }
       		setWithLastConsumed($current, "bidirectional", true, "<->");
	    }

)
))((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortConnectionRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getPortConnectionAccess().getDestinationContextContextCrossReference_6_0_0()); 
	}

)
)this_DOT_9=RULE_DOT
    { 
    newLeafNode(this_DOT_9, grammarAccess.getPortConnectionAccess().getDOTTerminalRuleCall_6_1()); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortConnectionRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getPortConnectionAccess().getDestinationConnectionEndCrossReference_7_0()); 
	}

)
)this_SEMI_11=RULE_SEMI
    { 
    newLeafNode(this_SEMI_11, grammarAccess.getPortConnectionAccess().getSEMITerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleConnectionType
entryRuleConnectionType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionTypeRule()); } 
	 iv_ruleConnectionType=ruleConnectionType 
	 { $current=$iv_ruleConnectionType.current.getText(); }  
	 EOF 
;

// Rule ConnectionType
ruleConnectionType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='access' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getAccessKeyword_0()); 
    }

    |
	kw='feature' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getFeatureKeyword_1()); 
    }

    |(
	kw='feature' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getFeatureKeyword_2_0()); 
    }

	kw='group' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getGroupKeyword_2_1()); 
    }
)
    |
	kw='parameter' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getParameterKeyword_3()); 
    }

    |
	kw='port' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getPortKeyword_4()); 
    }
)
    ;















// Entry rule entryRuleDefaultAnnexLibrary
entryRuleDefaultAnnexLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultAnnexLibraryRule()); }
	 iv_ruleDefaultAnnexLibrary=ruleDefaultAnnexLibrary 
	 { $current=$iv_ruleDefaultAnnexLibrary.current; } 
	 EOF 
;

// Rule DefaultAnnexLibrary
ruleDefaultAnnexLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='annex' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefaultAnnexLibraryAccess().getAnnexKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDefaultAnnexLibraryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultAnnexLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_sourceText_2_0=RULE_ANNEXTEXT
		{
			newLeafNode(lv_sourceText_2_0, grammarAccess.getDefaultAnnexLibraryAccess().getSourceTextANNEXTEXTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultAnnexLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sourceText",
        		lv_sourceText_2_0, 
        		"ANNEXTEXT");
	    }

)
)this_SEMI_3=RULE_SEMI
    { 
    newLeafNode(this_SEMI_3, grammarAccess.getDefaultAnnexLibraryAccess().getSEMITerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleAnnexSubclause
entryRuleAnnexSubclause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnexSubclauseRule()); }
	 iv_ruleAnnexSubclause=ruleAnnexSubclause 
	 { $current=$iv_ruleAnnexSubclause.current; } 
	 EOF 
;

// Rule AnnexSubclause
ruleAnnexSubclause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getAnnexSubclauseAccess().getDefaultAnnexSubclauseParserRuleCall()); 
    }
    this_DefaultAnnexSubclause_0=ruleDefaultAnnexSubclause
    { 
        $current = $this_DefaultAnnexSubclause_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleDefaultAnnexSubclause
entryRuleDefaultAnnexSubclause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultAnnexSubclauseRule()); }
	 iv_ruleDefaultAnnexSubclause=ruleDefaultAnnexSubclause 
	 { $current=$iv_ruleDefaultAnnexSubclause.current; } 
	 EOF 
;

// Rule DefaultAnnexSubclause
ruleDefaultAnnexSubclause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='annex' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefaultAnnexSubclauseAccess().getAnnexKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDefaultAnnexSubclauseAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultAnnexSubclauseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_sourceText_2_0=RULE_ANNEXTEXT
		{
			newLeafNode(lv_sourceText_2_0, grammarAccess.getDefaultAnnexSubclauseAccess().getSourceTextANNEXTEXTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultAnnexSubclauseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sourceText",
        		lv_sourceText_2_0, 
        		"ANNEXTEXT");
	    }

)
)this_SEMI_3=RULE_SEMI
    { 
    newLeafNode(this_SEMI_3, grammarAccess.getDefaultAnnexSubclauseAccess().getSEMITerminalRuleCall_3()); 
    }
)
;









// Entry rule entryRulePNAME
entryRulePNAME returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPNAMERule()); } 
	 iv_rulePNAME=rulePNAME 
	 { $current=$iv_rulePNAME.current.getText(); }  
	 EOF 
;

// Rule PNAME
rulePNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getPNAMEAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPNAMEAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getPNAMEAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;







// Entry rule entryRuleINAME
entryRuleINAME returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getINAMERule()); } 
	 iv_ruleINAME=ruleINAME 
	 { $current=$iv_ruleINAME.current.getText(); }  
	 EOF 
;

// Rule INAME
ruleINAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getINAMEAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQCREF
entryRuleQCREF returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQCREFRule()); } 
	 iv_ruleQCREF=ruleQCREF 
	 { $current=$iv_ruleQCREF.current.getText(); }  
	 EOF 
;

// Rule QCREF
ruleQCREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); 
    }
(    this_DOT_3=RULE_DOT    {
		$current.merge(this_DOT_3);
    }

    { 
    newLeafNode(this_DOT_3, grammarAccess.getQCREFAccess().getDOTTerminalRuleCall_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;







RULE_EM : 'error_model';

RULE_ANNEXTEXT : '{**' ( options {greedy=false;} : . )*'**}';

RULE_NONE : 'none' RULE_SEMI;

RULE_LTRANS : '-[';

RULE_RTRANS : ']->';

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SEMI : ';';

RULE_COLON : ':';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_LPARENS : '(';

RULE_RPARENS : ')';

RULE_LBRACKET : '[';

RULE_RBRACKET : ']';

RULE_LCURLY : '{';

RULE_RCURLY : '}';

RULE_ASSIGN : '=>';

RULE_APPEND : '+=>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


