/*
* generated by Xtext
*/
package org.osate.xtext.aadl2.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.osate.xtext.aadl2.services.Aadl2GrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class Aadl2ParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private Aadl2GrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_Group(this, this, 0, inst);
			case 1: return new PublicPackageSection_Group(this, this, 1, inst);
			case 2: return new PrivatePackageSection_Group(this, this, 2, inst);
			case 3: return new PackageRename_Group(this, this, 3, inst);
			case 4: return new PackageRenameAll_Group(this, this, 4, inst);
			case 5: return new FGTRename_Group(this, this, 5, inst);
			case 6: return new CTRename_Group(this, this, 6, inst);
			case 7: return new TypeExtension_Group(this, this, 7, inst);
			case 8: return new ImplementationExtension_Group(this, this, 8, inst);
			case 9: return new GroupExtension_Group(this, this, 9, inst);
			case 10: return new AbstractType_Group(this, this, 10, inst);
			case 11: return new SystemType_Group(this, this, 11, inst);
			case 12: return new ProcessType_Group(this, this, 12, inst);
			case 13: return new ThreadGroupType_Group(this, this, 13, inst);
			case 14: return new ThreadType_Group(this, this, 14, inst);
			case 15: return new SubprogramType_Group(this, this, 15, inst);
			case 16: return new SubprogramGroupType_Group(this, this, 16, inst);
			case 17: return new ProcessorType_Group(this, this, 17, inst);
			case 18: return new DeviceType_Group(this, this, 18, inst);
			case 19: return new MemoryType_Group(this, this, 19, inst);
			case 20: return new BusType_Group(this, this, 20, inst);
			case 21: return new VirtualBusType_Group(this, this, 21, inst);
			case 22: return new VirtualProcessorType_Group(this, this, 22, inst);
			case 23: return new DataType_Group(this, this, 23, inst);
			case 24: return new Realization_ImplementedAssignment(this, this, 24, inst);
			case 25: return new AbstractImplementation_Group(this, this, 25, inst);
			case 26: return new SystemImplementation_Group(this, this, 26, inst);
			case 27: return new ProcessImplementation_Group(this, this, 27, inst);
			case 28: return new ThreadGroupImplementation_Group(this, this, 28, inst);
			case 29: return new ThreadImplementation_Group(this, this, 29, inst);
			case 30: return new SubprogramImplementation_Group(this, this, 30, inst);
			case 31: return new SubprogramGroupImplementation_Group(this, this, 31, inst);
			case 32: return new ProcessorImplementation_Group(this, this, 32, inst);
			case 33: return new VirtualProcessorImplementation_Group(this, this, 33, inst);
			case 34: return new DeviceImplementation_Group(this, this, 34, inst);
			case 35: return new MemoryImplementation_Group(this, this, 35, inst);
			case 36: return new BusImplementation_Group(this, this, 36, inst);
			case 37: return new VirtualBusImplementation_Group(this, this, 37, inst);
			case 38: return new DataImplementation_Group(this, this, 38, inst);
			case 39: return new SubprogramCallSequence_Group(this, this, 39, inst);
			case 40: return new CallSpecification_Group(this, this, 40, inst);
			case 41: return new Prototype_Group(this, this, 41, inst);
			case 42: return new ComponentPrototype_Group(this, this, 42, inst);
			case 43: return new FeatureGroupPrototype_Group(this, this, 43, inst);
			case 44: return new FeaturePrototype_Group(this, this, 44, inst);
			case 45: return new PrototypeBinding_Alternatives(this, this, 45, inst);
			case 46: return new FeatureGroupPrototypeBinding_Group(this, this, 46, inst);
			case 47: return new FeatureGroupTypeReference_FeatureGroupTypeAssignment(this, this, 47, inst);
			case 48: return new FeaturePrototypeBinding_Group(this, this, 48, inst);
			case 49: return new PortSpecification_Group(this, this, 49, inst);
			case 50: return new AccessSpecification_Group(this, this, 50, inst);
			case 51: return new FeaturePrototypeReference_Group(this, this, 51, inst);
			case 52: return new ComponentPrototypeBinding_Group(this, this, 52, inst);
			case 53: return new ComponentReference_Group(this, this, 53, inst);
			case 54: return new AbstractSubcomponent_Group(this, this, 54, inst);
			case 55: return new SystemSubcomponent_Group(this, this, 55, inst);
			case 56: return new ProcessSubcomponent_Group(this, this, 56, inst);
			case 57: return new ThreadGroupSubcomponent_Group(this, this, 57, inst);
			case 58: return new ThreadSubcomponent_Group(this, this, 58, inst);
			case 59: return new SubprogramSubcomponent_Group(this, this, 59, inst);
			case 60: return new SubprogramGroupSubcomponent_Group(this, this, 60, inst);
			case 61: return new ProcessorSubcomponent_Group(this, this, 61, inst);
			case 62: return new VirtualProcessorSubcomponent_Group(this, this, 62, inst);
			case 63: return new DeviceSubcomponent_Group(this, this, 63, inst);
			case 64: return new MemorySubcomponent_Group(this, this, 64, inst);
			case 65: return new BusSubcomponent_Group(this, this, 65, inst);
			case 66: return new VirtualBusSubcomponent_Group(this, this, 66, inst);
			case 67: return new DataSubcomponent_Group(this, this, 67, inst);
			case 68: return new ArraySpecification_Group(this, this, 68, inst);
			case 69: return new SingleArraySpecification_Group(this, this, 69, inst);
			case 70: return new Numeral_ValueAssignment(this, this, 70, inst);
			case 71: return new ComponentImplementationReference_Group(this, this, 71, inst);
			case 72: return new PropertyReference_PropertyAssignment(this, this, 72, inst);
			case 73: return new DataPort_Group(this, this, 73, inst);
			case 74: return new EventDataPort_Group(this, this, 74, inst);
			case 75: return new EventPort_Group(this, this, 75, inst);
			case 76: return new FeatureGroup_Group(this, this, 76, inst);
			case 77: return new Parameter_Group(this, this, 77, inst);
			case 78: return new SubprogramAccess_Group(this, this, 78, inst);
			case 79: return new SubprogramGroupAccess_Group(this, this, 79, inst);
			case 80: return new BusAccess_Group(this, this, 80, inst);
			case 81: return new DataAccess_Group(this, this, 81, inst);
			case 82: return new AbstractFeature_Group(this, this, 82, inst);
			case 83: return new FeatureGroupType_Group(this, this, 83, inst);
			case 84: return new PortConnection_Group(this, this, 84, inst);
			case 85: return new AccessConnection_Group(this, this, 85, inst);
			case 86: return new FeatureGroupConnection_Group(this, this, 86, inst);
			case 87: return new FeatureConnection_Group(this, this, 87, inst);
			case 88: return new ParameterConnection_Group(this, this, 88, inst);
			case 89: return new Connection_PortConnectionParserRuleCall(this, this, 89, inst);
			case 90: return new FlowSpecification_Group(this, this, 90, inst);
			case 91: return new FlowSourceSpec_Group(this, this, 91, inst);
			case 92: return new FlowSinkSpec_Group(this, this, 92, inst);
			case 93: return new FlowPathSpec_Group(this, this, 93, inst);
			case 94: return new FlowSourceSpecRefinement_Group(this, this, 94, inst);
			case 95: return new FlowSinkSpecRefinement_Group(this, this, 95, inst);
			case 96: return new FlowPathSpecRefinement_Group(this, this, 96, inst);
			case 97: return new FlowImplementation_Group(this, this, 97, inst);
			case 98: return new FlowSourceImpl_Group(this, this, 98, inst);
			case 99: return new FlowSinkImpl_Group(this, this, 99, inst);
			case 100: return new FlowPathImpl_Group(this, this, 100, inst);
			case 101: return new EndToEndFlow_Group(this, this, 101, inst);
			case 102: return new EndToEndFlowRefinement_Group(this, this, 102, inst);
			case 103: return new SubcomponentFlow_Group(this, this, 103, inst);
			case 104: return new Mode_Group(this, this, 104, inst);
			case 105: return new ModeTransition_Group(this, this, 105, inst);
			case 106: return new TriggerPort_Group(this, this, 106, inst);
			case 107: return new ModeRef_Group(this, this, 107, inst);
			case 108: return new AnnexLibrary_DefaultAnnexLibraryParserRuleCall(this, this, 108, inst);
			case 109: return new DefaultAnnexLibrary_Group(this, this, 109, inst);
			case 110: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 110, inst);
			case 111: return new DefaultAnnexSubclause_Group(this, this, 111, inst);
			case 112: return new BasicPropertyAssociation_Group(this, this, 112, inst);
			case 113: return new PropertyAssociation_Group(this, this, 113, inst);
			case 114: return new ContainedPropertyAssociation_Group(this, this, 114, inst);
			case 115: return new ContainmentPath_Group(this, this, 115, inst);
			case 116: return new ContainmentPathElement_Group(this, this, 116, inst);
			case 117: return new ArrayRange_Group(this, this, 117, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule AadlPackage ****************
 *
 * // TODO:   
 * //InternalEvent(SELF), ProcessorPort: objects in mode transition instead of reference to unnamed owned in impl.
 * AadlPackage returns aadl2::AadlPackage:
 * 	"package" name=PNAME (ownedPublicSection=PublicPackageSection ownedPrivateSection=PrivatePackageSection? |
 * 	ownedPrivateSection=PrivatePackageSection) ("properties" ownedPropertyAssociation+=BasicPropertyAssociation+)? //| (noProperties?='none' ';')
 * 	"end" ID ("::" ID)* ";";
 *
 **/

// "package" name=PNAME (ownedPublicSection=PublicPackageSection ownedPrivateSection=PrivatePackageSection? |
// ownedPrivateSection=PrivatePackageSection) ("properties" ownedPropertyAssociation+=BasicPropertyAssociation+)? //| (noProperties?='none' ';')
// "end" ID ("::" ID)* ";"
protected class AadlPackage_Group extends GroupToken {
	
	public AadlPackage_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAadlPackageRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "package"
protected class AadlPackage_PackageKeyword_0 extends KeywordToken  {
	
	public AadlPackage_PackageKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getPackageKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=PNAME
protected class AadlPackage_NameAssignment_1 extends AssignmentToken  {
	
	public AadlPackage_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_PackageKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAadlPackageAccess().getNamePNAMEParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAadlPackageAccess().getNamePNAMEParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ownedPublicSection=PublicPackageSection ownedPrivateSection=PrivatePackageSection? |
// ownedPrivateSection=PrivatePackageSection
protected class AadlPackage_Alternatives_2 extends AlternativesToken {

	public AadlPackage_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AadlPackage_OwnedPrivateSectionAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPublicSection=PublicPackageSection ownedPrivateSection=PrivatePackageSection?
protected class AadlPackage_Group_2_0 extends GroupToken {
	
	public AadlPackage_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_OwnedPrivateSectionAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AadlPackage_OwnedPublicSectionAssignment_2_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPublicSection=PublicPackageSection
protected class AadlPackage_OwnedPublicSectionAssignment_2_0_0 extends AssignmentToken  {
	
	public AadlPackage_OwnedPublicSectionAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getOwnedPublicSectionAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPublicSection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPublicSection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPublicPackageSectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAadlPackageAccess().getOwnedPublicSectionPublicPackageSectionParserRuleCall_2_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AadlPackage_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedPrivateSection=PrivatePackageSection?
protected class AadlPackage_OwnedPrivateSectionAssignment_2_0_1 extends AssignmentToken  {
	
	public AadlPackage_OwnedPrivateSectionAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getOwnedPrivateSectionAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrivateSection",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrivateSection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrivatePackageSectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAadlPackageAccess().getOwnedPrivateSectionPrivatePackageSectionParserRuleCall_2_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AadlPackage_OwnedPublicSectionAssignment_2_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ownedPrivateSection=PrivatePackageSection
protected class AadlPackage_OwnedPrivateSectionAssignment_2_1 extends AssignmentToken  {
	
	public AadlPackage_OwnedPrivateSectionAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getOwnedPrivateSectionAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrivateSection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrivateSection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrivatePackageSectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAadlPackageAccess().getOwnedPrivateSectionPrivatePackageSectionParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AadlPackage_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (=> "properties" ownedPropertyAssociation+=BasicPropertyAssociation+)?
protected class AadlPackage_Group_3 extends GroupToken {
	
	public AadlPackage_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_OwnedPropertyAssociationAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class AadlPackage_PropertiesKeyword_3_0 extends KeywordToken  {
	
	public AadlPackage_PropertiesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getPropertiesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=BasicPropertyAssociation+
protected class AadlPackage_OwnedPropertyAssociationAssignment_3_1 extends AssignmentToken  {
	
	public AadlPackage_OwnedPropertyAssociationAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getOwnedPropertyAssociationAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BasicPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBasicPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAadlPackageAccess().getOwnedPropertyAssociationBasicPropertyAssociationParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AadlPackage_OwnedPropertyAssociationAssignment_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AadlPackage_PropertiesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "end"
protected class AadlPackage_EndKeyword_4 extends KeywordToken  {
	
	public AadlPackage_EndKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getEndKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AadlPackage_Alternatives_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ID
protected class AadlPackage_IDTerminalRuleCall_5 extends UnassignedTextToken {

	public AadlPackage_IDTerminalRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getIDTerminalRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_EndKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class AadlPackage_SemicolonKeyword_7 extends KeywordToken  {
	
	public AadlPackage_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAadlPackageAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AadlPackage_IDTerminalRuleCall_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AadlPackage ****************/


/************ begin Rule PublicPackageSection ****************
 *
 * // currently derived: (ownedClassifier+=Classifier | ownedAnnexLibrary+=AnnexLibrary)*;
 * PublicPackageSection returns aadl2::PublicPackageSection:
 * 	{aadl2::PublicPackageSection} "public" ("with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
 * 	("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";" | ownedPackageRename+=PackageRename |
 * 	ownedPackageRename+=PackageRenameAll | ownedFeatureGroupTypeRename+=FGTRename | ownedComponentTypeRename+=CTRename)*
 * 	(ownedSystemType+=SystemType //    | ownedAnnexLibrary+=AnnexLibrary
 * 	| ownedSystemImplementation+=SystemImplementation | ownedProcessorType+=ProcessorType |
 * 	ownedProcessorImplementation+=ProcessorImplementation | ownedProcessType+=ProcessType |
 * 	ownedProcessImplementation+=ProcessImplementation | ownedThreadGroupType+=ThreadGroupType |
 * 	ownedThreadGroupImplementation+=ThreadGroupImplementation | ownedThreadType+=ThreadType |
 * 	ownedThreadImplementation+=ThreadImplementation | ownedDeviceType+=DeviceType |
 * 	ownedDeviceImplementation+=DeviceImplementation | ownedBusType+=BusType | ownedBusImplementation+=BusImplementation |
 * 	ownedVirtualProcessorType+=VirtualProcessorType | ownedVirtualProcessorImplementation+=VirtualProcessorImplementation
 * 	| ownedVirtualBusType+=VirtualBusType | ownedVirtualBusImplementation+=VirtualBusImplementation |
 * 	ownedMemoryType+=MemoryType | ownedMemoryImplementation+=MemoryImplementation | ownedSubprogramType+=SubprogramType |
 * 	ownedSubprogramImplementation+=SubprogramImplementation | ownedSubprogramGroupType+=SubprogramGroupType |
 * 	ownedSubprogramGroupImplementation+=SubprogramGroupImplementation | ownedAbstractType+=AbstractType |
 * 	ownedAbstractImplementation+=AbstractImplementation | ownedDataType+=DataType |
 * 	ownedDataImplementation+=DataImplementation)*;
 *
 **/

// {aadl2::PublicPackageSection} "public" ("with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
// ("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";" | ownedPackageRename+=PackageRename |
// ownedPackageRename+=PackageRenameAll | ownedFeatureGroupTypeRename+=FGTRename | ownedComponentTypeRename+=CTRename)*
// (ownedSystemType+=SystemType //    | ownedAnnexLibrary+=AnnexLibrary
// | ownedSystemImplementation+=SystemImplementation | ownedProcessorType+=ProcessorType |
// ownedProcessorImplementation+=ProcessorImplementation | ownedProcessType+=ProcessType |
// ownedProcessImplementation+=ProcessImplementation | ownedThreadGroupType+=ThreadGroupType |
// ownedThreadGroupImplementation+=ThreadGroupImplementation | ownedThreadType+=ThreadType |
// ownedThreadImplementation+=ThreadImplementation | ownedDeviceType+=DeviceType |
// ownedDeviceImplementation+=DeviceImplementation | ownedBusType+=BusType | ownedBusImplementation+=BusImplementation |
// ownedVirtualProcessorType+=VirtualProcessorType | ownedVirtualProcessorImplementation+=VirtualProcessorImplementation |
// ownedVirtualBusType+=VirtualBusType | ownedVirtualBusImplementation+=VirtualBusImplementation |
// ownedMemoryType+=MemoryType | ownedMemoryImplementation+=MemoryImplementation | ownedSubprogramType+=SubprogramType |
// ownedSubprogramImplementation+=SubprogramImplementation | ownedSubprogramGroupType+=SubprogramGroupType |
// ownedSubprogramGroupImplementation+=SubprogramGroupImplementation | ownedAbstractType+=AbstractType |
// ownedAbstractImplementation+=AbstractImplementation | ownedDataType+=DataType |
// ownedDataImplementation+=DataImplementation)*
protected class PublicPackageSection_Group extends GroupToken {
	
	public PublicPackageSection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPublicPackageSectionAccess().getPublicPackageSectionAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::PublicPackageSection}
protected class PublicPackageSection_PublicPackageSectionAction_0 extends ActionToken  {

	public PublicPackageSection_PublicPackageSectionAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getPublicPackageSectionAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "public"
protected class PublicPackageSection_PublicKeyword_1 extends KeywordToken  {
	
	public PublicPackageSection_PublicKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getPublicKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_PublicPackageSectionAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (=> "with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
// ("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";" | ownedPackageRename+=PackageRename |
// ownedPackageRename+=PackageRenameAll | ownedFeatureGroupTypeRename+=FGTRename | ownedComponentTypeRename+=CTRename)*
protected class PublicPackageSection_Alternatives_2 extends AlternativesToken {

	public PublicPackageSection_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PublicPackageSection_OwnedPackageRenameAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PublicPackageSection_OwnedPackageRenameAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new PublicPackageSection_OwnedFeatureGroupTypeRenameAssignment_2_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new PublicPackageSection_OwnedComponentTypeRenameAssignment_2_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// => "with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
// ("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";"
protected class PublicPackageSection_Group_2_0 extends GroupToken {
	
	public PublicPackageSection_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_SemicolonKeyword_2_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "with"
protected class PublicPackageSection_WithKeyword_2_0_0 extends KeywordToken  {
	
	public PublicPackageSection_WithKeyword_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getWithKeyword_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// importedPackage+=[aadl2::AadlPackage|PNAME]
protected class PublicPackageSection_ImportedPackageAssignment_2_0_1 extends AssignmentToken  {
	
	public PublicPackageSection_ImportedPackageAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getImportedPackageAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_WithKeyword_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("importedPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importedPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPublicPackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPublicPackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," importedPackage+=[aadl2::AadlPackage|PNAME])*
protected class PublicPackageSection_Group_2_0_2 extends GroupToken {
	
	public PublicPackageSection_Group_2_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getGroup_2_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_ImportedPackageAssignment_2_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class PublicPackageSection_CommaKeyword_2_0_2_0 extends KeywordToken  {
	
	public PublicPackageSection_CommaKeyword_2_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getCommaKeyword_2_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_Group_2_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PublicPackageSection_ImportedPackageAssignment_2_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// importedPackage+=[aadl2::AadlPackage|PNAME]
protected class PublicPackageSection_ImportedPackageAssignment_2_0_2_1 extends AssignmentToken  {
	
	public PublicPackageSection_ImportedPackageAssignment_2_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getImportedPackageAssignment_2_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_CommaKeyword_2_0_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("importedPackage",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importedPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPublicPackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPublicPackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ";"
protected class PublicPackageSection_SemicolonKeyword_2_0_3 extends KeywordToken  {
	
	public PublicPackageSection_SemicolonKeyword_2_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getSemicolonKeyword_2_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_Group_2_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PublicPackageSection_ImportedPackageAssignment_2_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ownedPackageRename+=PackageRename
protected class PublicPackageSection_OwnedPackageRenameAssignment_2_1 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedPackageRenameAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedPackageRenameAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPackageRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPackageRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRenameRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedPackageRenamePackageRenameParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedPackageRename+=PackageRenameAll
protected class PublicPackageSection_OwnedPackageRenameAssignment_2_2 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedPackageRenameAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedPackageRenameAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPackageRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPackageRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRenameAllRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedPackageRenamePackageRenameAllParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupTypeRename+=FGTRename
protected class PublicPackageSection_OwnedFeatureGroupTypeRenameAssignment_2_3 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedFeatureGroupTypeRenameAssignment_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedFeatureGroupTypeRenameAssignment_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupTypeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupTypeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFGTRenameRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedFeatureGroupTypeRenameFGTRenameParserRuleCall_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedComponentTypeRename+=CTRename
protected class PublicPackageSection_OwnedComponentTypeRenameAssignment_2_4 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedComponentTypeRenameAssignment_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedComponentTypeRenameAssignment_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedComponentTypeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedComponentTypeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCTRenameRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedComponentTypeRenameCTRenameParserRuleCall_2_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (ownedSystemType+=SystemType //    | ownedAnnexLibrary+=AnnexLibrary
// | ownedSystemImplementation+=SystemImplementation | ownedProcessorType+=ProcessorType |
// ownedProcessorImplementation+=ProcessorImplementation | ownedProcessType+=ProcessType |
// ownedProcessImplementation+=ProcessImplementation | ownedThreadGroupType+=ThreadGroupType |
// ownedThreadGroupImplementation+=ThreadGroupImplementation | ownedThreadType+=ThreadType |
// ownedThreadImplementation+=ThreadImplementation | ownedDeviceType+=DeviceType |
// ownedDeviceImplementation+=DeviceImplementation | ownedBusType+=BusType | ownedBusImplementation+=BusImplementation |
// ownedVirtualProcessorType+=VirtualProcessorType | ownedVirtualProcessorImplementation+=VirtualProcessorImplementation |
// ownedVirtualBusType+=VirtualBusType | ownedVirtualBusImplementation+=VirtualBusImplementation |
// ownedMemoryType+=MemoryType | ownedMemoryImplementation+=MemoryImplementation | ownedSubprogramType+=SubprogramType |
// ownedSubprogramImplementation+=SubprogramImplementation | ownedSubprogramGroupType+=SubprogramGroupType |
// ownedSubprogramGroupImplementation+=SubprogramGroupImplementation | ownedAbstractType+=AbstractType |
// ownedAbstractImplementation+=AbstractImplementation | ownedDataType+=DataType |
// ownedDataImplementation+=DataImplementation)*
protected class PublicPackageSection_Alternatives_3 extends AlternativesToken {

	public PublicPackageSection_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PublicPackageSection_OwnedSystemTypeAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PublicPackageSection_OwnedSystemImplementationAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PublicPackageSection_OwnedProcessorTypeAssignment_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new PublicPackageSection_OwnedProcessorImplementationAssignment_3_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new PublicPackageSection_OwnedProcessTypeAssignment_3_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new PublicPackageSection_OwnedProcessImplementationAssignment_3_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new PublicPackageSection_OwnedThreadGroupTypeAssignment_3_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new PublicPackageSection_OwnedThreadGroupImplementationAssignment_3_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new PublicPackageSection_OwnedThreadTypeAssignment_3_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new PublicPackageSection_OwnedThreadImplementationAssignment_3_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new PublicPackageSection_OwnedDeviceTypeAssignment_3_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new PublicPackageSection_OwnedDeviceImplementationAssignment_3_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new PublicPackageSection_OwnedBusTypeAssignment_3_12(lastRuleCallOrigin, this, 12, inst);
			case 13: return new PublicPackageSection_OwnedBusImplementationAssignment_3_13(lastRuleCallOrigin, this, 13, inst);
			case 14: return new PublicPackageSection_OwnedVirtualProcessorTypeAssignment_3_14(lastRuleCallOrigin, this, 14, inst);
			case 15: return new PublicPackageSection_OwnedVirtualProcessorImplementationAssignment_3_15(lastRuleCallOrigin, this, 15, inst);
			case 16: return new PublicPackageSection_OwnedVirtualBusTypeAssignment_3_16(lastRuleCallOrigin, this, 16, inst);
			case 17: return new PublicPackageSection_OwnedVirtualBusImplementationAssignment_3_17(lastRuleCallOrigin, this, 17, inst);
			case 18: return new PublicPackageSection_OwnedMemoryTypeAssignment_3_18(lastRuleCallOrigin, this, 18, inst);
			case 19: return new PublicPackageSection_OwnedMemoryImplementationAssignment_3_19(lastRuleCallOrigin, this, 19, inst);
			case 20: return new PublicPackageSection_OwnedSubprogramTypeAssignment_3_20(lastRuleCallOrigin, this, 20, inst);
			case 21: return new PublicPackageSection_OwnedSubprogramImplementationAssignment_3_21(lastRuleCallOrigin, this, 21, inst);
			case 22: return new PublicPackageSection_OwnedSubprogramGroupTypeAssignment_3_22(lastRuleCallOrigin, this, 22, inst);
			case 23: return new PublicPackageSection_OwnedSubprogramGroupImplementationAssignment_3_23(lastRuleCallOrigin, this, 23, inst);
			case 24: return new PublicPackageSection_OwnedAbstractTypeAssignment_3_24(lastRuleCallOrigin, this, 24, inst);
			case 25: return new PublicPackageSection_OwnedAbstractImplementationAssignment_3_25(lastRuleCallOrigin, this, 25, inst);
			case 26: return new PublicPackageSection_OwnedDataTypeAssignment_3_26(lastRuleCallOrigin, this, 26, inst);
			case 27: return new PublicPackageSection_OwnedDataImplementationAssignment_3_27(lastRuleCallOrigin, this, 27, inst);
			default: return null;
		}	
	}

}

// ownedSystemType+=SystemType
protected class PublicPackageSection_OwnedSystemTypeAssignment_3_0 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedSystemTypeAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedSystemTypeAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSystemType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSystemType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedSystemTypeSystemTypeParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSystemImplementation+=SystemImplementation
protected class PublicPackageSection_OwnedSystemImplementationAssignment_3_1 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedSystemImplementationAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedSystemImplementationAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSystemImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSystemImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedSystemImplementationSystemImplementationParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessorType+=ProcessorType
protected class PublicPackageSection_OwnedProcessorTypeAssignment_3_2 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedProcessorTypeAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedProcessorTypeAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessorType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessorType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedProcessorTypeProcessorTypeParserRuleCall_3_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessorImplementation+=ProcessorImplementation
protected class PublicPackageSection_OwnedProcessorImplementationAssignment_3_3 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedProcessorImplementationAssignment_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedProcessorImplementationAssignment_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessorImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessorImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedProcessorImplementationProcessorImplementationParserRuleCall_3_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessType+=ProcessType
protected class PublicPackageSection_OwnedProcessTypeAssignment_3_4 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedProcessTypeAssignment_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedProcessTypeAssignment_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedProcessTypeProcessTypeParserRuleCall_3_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessImplementation+=ProcessImplementation
protected class PublicPackageSection_OwnedProcessImplementationAssignment_3_5 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedProcessImplementationAssignment_3_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedProcessImplementationAssignment_3_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedProcessImplementationProcessImplementationParserRuleCall_3_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadGroupType+=ThreadGroupType
protected class PublicPackageSection_OwnedThreadGroupTypeAssignment_3_6 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedThreadGroupTypeAssignment_3_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedThreadGroupTypeAssignment_3_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedThreadGroupTypeThreadGroupTypeParserRuleCall_3_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadGroupImplementation+=ThreadGroupImplementation
protected class PublicPackageSection_OwnedThreadGroupImplementationAssignment_3_7 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedThreadGroupImplementationAssignment_3_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedThreadGroupImplementationAssignment_3_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedThreadGroupImplementationThreadGroupImplementationParserRuleCall_3_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadType+=ThreadType
protected class PublicPackageSection_OwnedThreadTypeAssignment_3_8 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedThreadTypeAssignment_3_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedThreadTypeAssignment_3_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedThreadTypeThreadTypeParserRuleCall_3_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadImplementation+=ThreadImplementation
protected class PublicPackageSection_OwnedThreadImplementationAssignment_3_9 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedThreadImplementationAssignment_3_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedThreadImplementationAssignment_3_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedThreadImplementationThreadImplementationParserRuleCall_3_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDeviceType+=DeviceType
protected class PublicPackageSection_OwnedDeviceTypeAssignment_3_10 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedDeviceTypeAssignment_3_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedDeviceTypeAssignment_3_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDeviceType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDeviceType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedDeviceTypeDeviceTypeParserRuleCall_3_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDeviceImplementation+=DeviceImplementation
protected class PublicPackageSection_OwnedDeviceImplementationAssignment_3_11 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedDeviceImplementationAssignment_3_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedDeviceImplementationAssignment_3_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDeviceImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDeviceImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedDeviceImplementationDeviceImplementationParserRuleCall_3_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusType+=BusType
protected class PublicPackageSection_OwnedBusTypeAssignment_3_12 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedBusTypeAssignment_3_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedBusTypeAssignment_3_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedBusTypeBusTypeParserRuleCall_3_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusImplementation+=BusImplementation
protected class PublicPackageSection_OwnedBusImplementationAssignment_3_13 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedBusImplementationAssignment_3_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedBusImplementationAssignment_3_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedBusImplementationBusImplementationParserRuleCall_3_13_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorType+=VirtualProcessorType
protected class PublicPackageSection_OwnedVirtualProcessorTypeAssignment_3_14 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedVirtualProcessorTypeAssignment_3_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualProcessorTypeAssignment_3_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualProcessorTypeVirtualProcessorTypeParserRuleCall_3_14_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorImplementation+=VirtualProcessorImplementation
protected class PublicPackageSection_OwnedVirtualProcessorImplementationAssignment_3_15 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedVirtualProcessorImplementationAssignment_3_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualProcessorImplementationAssignment_3_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualProcessorImplementationVirtualProcessorImplementationParserRuleCall_3_15_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusType+=VirtualBusType
protected class PublicPackageSection_OwnedVirtualBusTypeAssignment_3_16 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedVirtualBusTypeAssignment_3_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualBusTypeAssignment_3_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualBusTypeVirtualBusTypeParserRuleCall_3_16_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusImplementation+=VirtualBusImplementation
protected class PublicPackageSection_OwnedVirtualBusImplementationAssignment_3_17 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedVirtualBusImplementationAssignment_3_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualBusImplementationAssignment_3_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedVirtualBusImplementationVirtualBusImplementationParserRuleCall_3_17_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemoryType+=MemoryType
protected class PublicPackageSection_OwnedMemoryTypeAssignment_3_18 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedMemoryTypeAssignment_3_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedMemoryTypeAssignment_3_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemoryType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemoryType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemoryTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedMemoryTypeMemoryTypeParserRuleCall_3_18_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemoryImplementation+=MemoryImplementation
protected class PublicPackageSection_OwnedMemoryImplementationAssignment_3_19 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedMemoryImplementationAssignment_3_19(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedMemoryImplementationAssignment_3_19();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemoryImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemoryImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemoryImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedMemoryImplementationMemoryImplementationParserRuleCall_3_19_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramType+=SubprogramType
protected class PublicPackageSection_OwnedSubprogramTypeAssignment_3_20 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedSubprogramTypeAssignment_3_20(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramTypeAssignment_3_20();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramTypeSubprogramTypeParserRuleCall_3_20_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramImplementation+=SubprogramImplementation
protected class PublicPackageSection_OwnedSubprogramImplementationAssignment_3_21 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedSubprogramImplementationAssignment_3_21(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramImplementationAssignment_3_21();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramImplementationSubprogramImplementationParserRuleCall_3_21_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupType+=SubprogramGroupType
protected class PublicPackageSection_OwnedSubprogramGroupTypeAssignment_3_22 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedSubprogramGroupTypeAssignment_3_22(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramGroupTypeAssignment_3_22();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramGroupTypeSubprogramGroupTypeParserRuleCall_3_22_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupImplementation+=SubprogramGroupImplementation
protected class PublicPackageSection_OwnedSubprogramGroupImplementationAssignment_3_23 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedSubprogramGroupImplementationAssignment_3_23(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramGroupImplementationAssignment_3_23();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedSubprogramGroupImplementationSubprogramGroupImplementationParserRuleCall_3_23_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractType+=AbstractType
protected class PublicPackageSection_OwnedAbstractTypeAssignment_3_24 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedAbstractTypeAssignment_3_24(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedAbstractTypeAssignment_3_24();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedAbstractTypeAbstractTypeParserRuleCall_3_24_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractImplementation+=AbstractImplementation
protected class PublicPackageSection_OwnedAbstractImplementationAssignment_3_25 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedAbstractImplementationAssignment_3_25(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedAbstractImplementationAssignment_3_25();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedAbstractImplementationAbstractImplementationParserRuleCall_3_25_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataType+=DataType
protected class PublicPackageSection_OwnedDataTypeAssignment_3_26 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedDataTypeAssignment_3_26(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedDataTypeAssignment_3_26();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedDataTypeDataTypeParserRuleCall_3_26_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataImplementation+=DataImplementation
protected class PublicPackageSection_OwnedDataImplementationAssignment_3_27 extends AssignmentToken  {
	
	public PublicPackageSection_OwnedDataImplementationAssignment_3_27(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPublicPackageSectionAccess().getOwnedDataImplementationAssignment_3_27();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPublicPackageSectionAccess().getOwnedDataImplementationDataImplementationParserRuleCall_3_27_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PublicPackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PublicPackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PublicPackageSection_PublicKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule PublicPackageSection ****************/


/************ begin Rule PrivatePackageSection ****************
 *
 * //	(ownedClassifier+=Classifier | ownedAnnexLibrary+=AnnexLibrary)*
 * PrivatePackageSection returns aadl2::PrivatePackageSection:
 * 	{aadl2::PrivatePackageSection} "private" ("with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
 * 	("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";" | ownedPackageRename+=PackageRename |
 * 	ownedPackageRename+=PackageRenameAll | ownedFeatureGroupTypeRename+=FGTRename | ownedComponentTypeRename+=CTRename)*
 * 	(ownedSystemType+=SystemType | ownedSystemImplementation+=SystemImplementation | ownedProcessorType+=ProcessorType |
 * 	ownedProcessorImplementation+=ProcessorImplementation | ownedProcessType+=ProcessType |
 * 	ownedProcessImplementation+=ProcessImplementation | ownedThreadGroupType+=ThreadGroupType |
 * 	ownedThreadGroupImplementation+=ThreadGroupImplementation | ownedThreadType+=ThreadType |
 * 	ownedThreadImplementation+=ThreadImplementation | ownedDeviceType+=DeviceType |
 * 	ownedDeviceImplementation+=DeviceImplementation | ownedBusType+=BusType | ownedBusImplementation+=BusImplementation |
 * 	ownedVirtualProcessorType+=VirtualProcessorType | ownedVirtualProcessorImplementation+=VirtualProcessorImplementation
 * 	| ownedVirtualBusType+=VirtualBusType | ownedVirtualBusImplementation+=VirtualBusImplementation |
 * 	ownedMemoryType+=MemoryType | ownedMemoryImplementation+=MemoryImplementation | ownedSubprogramType+=SubprogramType |
 * 	ownedSubprogramImplementation+=SubprogramImplementation | ownedSubprogramGroupType+=SubprogramGroupType |
 * 	ownedSubprogramGroupImplementation+=SubprogramGroupImplementation | ownedAbstractType+=AbstractType |
 * 	ownedAbstractImplementation+=AbstractImplementation | ownedDataType+=DataType)*;
 *
 **/

// {aadl2::PrivatePackageSection} "private" ("with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
// ("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";" | ownedPackageRename+=PackageRename |
// ownedPackageRename+=PackageRenameAll | ownedFeatureGroupTypeRename+=FGTRename | ownedComponentTypeRename+=CTRename)*
// (ownedSystemType+=SystemType | ownedSystemImplementation+=SystemImplementation | ownedProcessorType+=ProcessorType |
// ownedProcessorImplementation+=ProcessorImplementation | ownedProcessType+=ProcessType |
// ownedProcessImplementation+=ProcessImplementation | ownedThreadGroupType+=ThreadGroupType |
// ownedThreadGroupImplementation+=ThreadGroupImplementation | ownedThreadType+=ThreadType |
// ownedThreadImplementation+=ThreadImplementation | ownedDeviceType+=DeviceType |
// ownedDeviceImplementation+=DeviceImplementation | ownedBusType+=BusType | ownedBusImplementation+=BusImplementation |
// ownedVirtualProcessorType+=VirtualProcessorType | ownedVirtualProcessorImplementation+=VirtualProcessorImplementation |
// ownedVirtualBusType+=VirtualBusType | ownedVirtualBusImplementation+=VirtualBusImplementation |
// ownedMemoryType+=MemoryType | ownedMemoryImplementation+=MemoryImplementation | ownedSubprogramType+=SubprogramType |
// ownedSubprogramImplementation+=SubprogramImplementation | ownedSubprogramGroupType+=SubprogramGroupType |
// ownedSubprogramGroupImplementation+=SubprogramGroupImplementation | ownedAbstractType+=AbstractType |
// ownedAbstractImplementation+=AbstractImplementation | ownedDataType+=DataType)*
protected class PrivatePackageSection_Group extends GroupToken {
	
	public PrivatePackageSection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrivatePackageSectionAccess().getPrivatePackageSectionAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::PrivatePackageSection}
protected class PrivatePackageSection_PrivatePackageSectionAction_0 extends ActionToken  {

	public PrivatePackageSection_PrivatePackageSectionAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getPrivatePackageSectionAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "private"
protected class PrivatePackageSection_PrivateKeyword_1 extends KeywordToken  {
	
	public PrivatePackageSection_PrivateKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getPrivateKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_PrivatePackageSectionAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (=> "with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
// ("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";" | ownedPackageRename+=PackageRename |
// ownedPackageRename+=PackageRenameAll | ownedFeatureGroupTypeRename+=FGTRename | ownedComponentTypeRename+=CTRename)*
protected class PrivatePackageSection_Alternatives_2 extends AlternativesToken {

	public PrivatePackageSection_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrivatePackageSection_OwnedPackageRenameAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PrivatePackageSection_OwnedPackageRenameAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new PrivatePackageSection_OwnedFeatureGroupTypeRenameAssignment_2_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new PrivatePackageSection_OwnedComponentTypeRenameAssignment_2_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// => "with" importedPackage+=[aadl2::AadlPackage|PNAME] //| importedPropertySet+=[props::PropertySet|ID]) 
// ("," importedPackage+=[aadl2::AadlPackage|PNAME])* ";"
protected class PrivatePackageSection_Group_2_0 extends GroupToken {
	
	public PrivatePackageSection_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_SemicolonKeyword_2_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "with"
protected class PrivatePackageSection_WithKeyword_2_0_0 extends KeywordToken  {
	
	public PrivatePackageSection_WithKeyword_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getWithKeyword_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// importedPackage+=[aadl2::AadlPackage|PNAME]
protected class PrivatePackageSection_ImportedPackageAssignment_2_0_1 extends AssignmentToken  {
	
	public PrivatePackageSection_ImportedPackageAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_WithKeyword_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("importedPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importedPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," importedPackage+=[aadl2::AadlPackage|PNAME])*
protected class PrivatePackageSection_Group_2_0_2 extends GroupToken {
	
	public PrivatePackageSection_Group_2_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getGroup_2_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_ImportedPackageAssignment_2_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class PrivatePackageSection_CommaKeyword_2_0_2_0 extends KeywordToken  {
	
	public PrivatePackageSection_CommaKeyword_2_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getCommaKeyword_2_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Group_2_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrivatePackageSection_ImportedPackageAssignment_2_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// importedPackage+=[aadl2::AadlPackage|PNAME]
protected class PrivatePackageSection_ImportedPackageAssignment_2_0_2_1 extends AssignmentToken  {
	
	public PrivatePackageSection_ImportedPackageAssignment_2_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAssignment_2_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_CommaKeyword_2_0_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("importedPackage",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importedPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPrivatePackageSectionAccess().getImportedPackageAadlPackageCrossReference_2_0_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ";"
protected class PrivatePackageSection_SemicolonKeyword_2_0_3 extends KeywordToken  {
	
	public PrivatePackageSection_SemicolonKeyword_2_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getSemicolonKeyword_2_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_Group_2_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrivatePackageSection_ImportedPackageAssignment_2_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ownedPackageRename+=PackageRename
protected class PrivatePackageSection_OwnedPackageRenameAssignment_2_1 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedPackageRenameAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedPackageRenameAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPackageRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPackageRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRenameRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedPackageRenamePackageRenameParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedPackageRename+=PackageRenameAll
protected class PrivatePackageSection_OwnedPackageRenameAssignment_2_2 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedPackageRenameAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedPackageRenameAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPackageRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPackageRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRenameAllRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedPackageRenamePackageRenameAllParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupTypeRename+=FGTRename
protected class PrivatePackageSection_OwnedFeatureGroupTypeRenameAssignment_2_3 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedFeatureGroupTypeRenameAssignment_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedFeatureGroupTypeRenameAssignment_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupTypeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupTypeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFGTRenameRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedFeatureGroupTypeRenameFGTRenameParserRuleCall_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedComponentTypeRename+=CTRename
protected class PrivatePackageSection_OwnedComponentTypeRenameAssignment_2_4 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedComponentTypeRenameAssignment_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedComponentTypeRenameAssignment_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedComponentTypeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedComponentTypeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCTRenameRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedComponentTypeRenameCTRenameParserRuleCall_2_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (ownedSystemType+=SystemType | ownedSystemImplementation+=SystemImplementation | ownedProcessorType+=ProcessorType |
// ownedProcessorImplementation+=ProcessorImplementation | ownedProcessType+=ProcessType |
// ownedProcessImplementation+=ProcessImplementation | ownedThreadGroupType+=ThreadGroupType |
// ownedThreadGroupImplementation+=ThreadGroupImplementation | ownedThreadType+=ThreadType |
// ownedThreadImplementation+=ThreadImplementation | ownedDeviceType+=DeviceType |
// ownedDeviceImplementation+=DeviceImplementation | ownedBusType+=BusType | ownedBusImplementation+=BusImplementation |
// ownedVirtualProcessorType+=VirtualProcessorType | ownedVirtualProcessorImplementation+=VirtualProcessorImplementation |
// ownedVirtualBusType+=VirtualBusType | ownedVirtualBusImplementation+=VirtualBusImplementation |
// ownedMemoryType+=MemoryType | ownedMemoryImplementation+=MemoryImplementation | ownedSubprogramType+=SubprogramType |
// ownedSubprogramImplementation+=SubprogramImplementation | ownedSubprogramGroupType+=SubprogramGroupType |
// ownedSubprogramGroupImplementation+=SubprogramGroupImplementation | ownedAbstractType+=AbstractType |
// ownedAbstractImplementation+=AbstractImplementation | ownedDataType+=DataType)*
protected class PrivatePackageSection_Alternatives_3 extends AlternativesToken {

	public PrivatePackageSection_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivatePackageSection_OwnedSystemTypeAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrivatePackageSection_OwnedSystemImplementationAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PrivatePackageSection_OwnedProcessorTypeAssignment_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new PrivatePackageSection_OwnedProcessorImplementationAssignment_3_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new PrivatePackageSection_OwnedProcessTypeAssignment_3_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new PrivatePackageSection_OwnedProcessImplementationAssignment_3_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new PrivatePackageSection_OwnedThreadGroupTypeAssignment_3_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new PrivatePackageSection_OwnedThreadGroupImplementationAssignment_3_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new PrivatePackageSection_OwnedThreadTypeAssignment_3_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new PrivatePackageSection_OwnedThreadImplementationAssignment_3_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new PrivatePackageSection_OwnedDeviceTypeAssignment_3_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new PrivatePackageSection_OwnedDeviceImplementationAssignment_3_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new PrivatePackageSection_OwnedBusTypeAssignment_3_12(lastRuleCallOrigin, this, 12, inst);
			case 13: return new PrivatePackageSection_OwnedBusImplementationAssignment_3_13(lastRuleCallOrigin, this, 13, inst);
			case 14: return new PrivatePackageSection_OwnedVirtualProcessorTypeAssignment_3_14(lastRuleCallOrigin, this, 14, inst);
			case 15: return new PrivatePackageSection_OwnedVirtualProcessorImplementationAssignment_3_15(lastRuleCallOrigin, this, 15, inst);
			case 16: return new PrivatePackageSection_OwnedVirtualBusTypeAssignment_3_16(lastRuleCallOrigin, this, 16, inst);
			case 17: return new PrivatePackageSection_OwnedVirtualBusImplementationAssignment_3_17(lastRuleCallOrigin, this, 17, inst);
			case 18: return new PrivatePackageSection_OwnedMemoryTypeAssignment_3_18(lastRuleCallOrigin, this, 18, inst);
			case 19: return new PrivatePackageSection_OwnedMemoryImplementationAssignment_3_19(lastRuleCallOrigin, this, 19, inst);
			case 20: return new PrivatePackageSection_OwnedSubprogramTypeAssignment_3_20(lastRuleCallOrigin, this, 20, inst);
			case 21: return new PrivatePackageSection_OwnedSubprogramImplementationAssignment_3_21(lastRuleCallOrigin, this, 21, inst);
			case 22: return new PrivatePackageSection_OwnedSubprogramGroupTypeAssignment_3_22(lastRuleCallOrigin, this, 22, inst);
			case 23: return new PrivatePackageSection_OwnedSubprogramGroupImplementationAssignment_3_23(lastRuleCallOrigin, this, 23, inst);
			case 24: return new PrivatePackageSection_OwnedAbstractTypeAssignment_3_24(lastRuleCallOrigin, this, 24, inst);
			case 25: return new PrivatePackageSection_OwnedAbstractImplementationAssignment_3_25(lastRuleCallOrigin, this, 25, inst);
			case 26: return new PrivatePackageSection_OwnedDataTypeAssignment_3_26(lastRuleCallOrigin, this, 26, inst);
			default: return null;
		}	
	}

}

// ownedSystemType+=SystemType
protected class PrivatePackageSection_OwnedSystemTypeAssignment_3_0 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedSystemTypeAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedSystemTypeAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSystemType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSystemType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedSystemTypeSystemTypeParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSystemImplementation+=SystemImplementation
protected class PrivatePackageSection_OwnedSystemImplementationAssignment_3_1 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedSystemImplementationAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedSystemImplementationAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSystemImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSystemImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedSystemImplementationSystemImplementationParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessorType+=ProcessorType
protected class PrivatePackageSection_OwnedProcessorTypeAssignment_3_2 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedProcessorTypeAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessorTypeAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessorType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessorType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessorTypeProcessorTypeParserRuleCall_3_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessorImplementation+=ProcessorImplementation
protected class PrivatePackageSection_OwnedProcessorImplementationAssignment_3_3 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedProcessorImplementationAssignment_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessorImplementationAssignment_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessorImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessorImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessorImplementationProcessorImplementationParserRuleCall_3_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessType+=ProcessType
protected class PrivatePackageSection_OwnedProcessTypeAssignment_3_4 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedProcessTypeAssignment_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessTypeAssignment_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessTypeProcessTypeParserRuleCall_3_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessImplementation+=ProcessImplementation
protected class PrivatePackageSection_OwnedProcessImplementationAssignment_3_5 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedProcessImplementationAssignment_3_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessImplementationAssignment_3_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedProcessImplementationProcessImplementationParserRuleCall_3_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadGroupType+=ThreadGroupType
protected class PrivatePackageSection_OwnedThreadGroupTypeAssignment_3_6 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedThreadGroupTypeAssignment_3_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadGroupTypeAssignment_3_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadGroupTypeThreadGroupTypeParserRuleCall_3_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadGroupImplementation+=ThreadGroupImplementation
protected class PrivatePackageSection_OwnedThreadGroupImplementationAssignment_3_7 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedThreadGroupImplementationAssignment_3_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadGroupImplementationAssignment_3_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadGroupImplementationThreadGroupImplementationParserRuleCall_3_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadType+=ThreadType
protected class PrivatePackageSection_OwnedThreadTypeAssignment_3_8 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedThreadTypeAssignment_3_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadTypeAssignment_3_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadTypeThreadTypeParserRuleCall_3_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadImplementation+=ThreadImplementation
protected class PrivatePackageSection_OwnedThreadImplementationAssignment_3_9 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedThreadImplementationAssignment_3_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadImplementationAssignment_3_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedThreadImplementationThreadImplementationParserRuleCall_3_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDeviceType+=DeviceType
protected class PrivatePackageSection_OwnedDeviceTypeAssignment_3_10 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedDeviceTypeAssignment_3_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedDeviceTypeAssignment_3_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDeviceType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDeviceType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedDeviceTypeDeviceTypeParserRuleCall_3_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDeviceImplementation+=DeviceImplementation
protected class PrivatePackageSection_OwnedDeviceImplementationAssignment_3_11 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedDeviceImplementationAssignment_3_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedDeviceImplementationAssignment_3_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDeviceImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDeviceImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedDeviceImplementationDeviceImplementationParserRuleCall_3_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusType+=BusType
protected class PrivatePackageSection_OwnedBusTypeAssignment_3_12 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedBusTypeAssignment_3_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedBusTypeAssignment_3_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedBusTypeBusTypeParserRuleCall_3_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusImplementation+=BusImplementation
protected class PrivatePackageSection_OwnedBusImplementationAssignment_3_13 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedBusImplementationAssignment_3_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedBusImplementationAssignment_3_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedBusImplementationBusImplementationParserRuleCall_3_13_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorType+=VirtualProcessorType
protected class PrivatePackageSection_OwnedVirtualProcessorTypeAssignment_3_14 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedVirtualProcessorTypeAssignment_3_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualProcessorTypeAssignment_3_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualProcessorTypeVirtualProcessorTypeParserRuleCall_3_14_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorImplementation+=VirtualProcessorImplementation
protected class PrivatePackageSection_OwnedVirtualProcessorImplementationAssignment_3_15 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedVirtualProcessorImplementationAssignment_3_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualProcessorImplementationAssignment_3_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualProcessorImplementationVirtualProcessorImplementationParserRuleCall_3_15_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusType+=VirtualBusType
protected class PrivatePackageSection_OwnedVirtualBusTypeAssignment_3_16 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedVirtualBusTypeAssignment_3_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualBusTypeAssignment_3_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualBusTypeVirtualBusTypeParserRuleCall_3_16_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusImplementation+=VirtualBusImplementation
protected class PrivatePackageSection_OwnedVirtualBusImplementationAssignment_3_17 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedVirtualBusImplementationAssignment_3_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualBusImplementationAssignment_3_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedVirtualBusImplementationVirtualBusImplementationParserRuleCall_3_17_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemoryType+=MemoryType
protected class PrivatePackageSection_OwnedMemoryTypeAssignment_3_18 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedMemoryTypeAssignment_3_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedMemoryTypeAssignment_3_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemoryType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemoryType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemoryTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedMemoryTypeMemoryTypeParserRuleCall_3_18_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemoryImplementation+=MemoryImplementation
protected class PrivatePackageSection_OwnedMemoryImplementationAssignment_3_19 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedMemoryImplementationAssignment_3_19(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedMemoryImplementationAssignment_3_19();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemoryImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemoryImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemoryImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedMemoryImplementationMemoryImplementationParserRuleCall_3_19_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramType+=SubprogramType
protected class PrivatePackageSection_OwnedSubprogramTypeAssignment_3_20 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedSubprogramTypeAssignment_3_20(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramTypeAssignment_3_20();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramTypeSubprogramTypeParserRuleCall_3_20_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramImplementation+=SubprogramImplementation
protected class PrivatePackageSection_OwnedSubprogramImplementationAssignment_3_21 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedSubprogramImplementationAssignment_3_21(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramImplementationAssignment_3_21();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramImplementationSubprogramImplementationParserRuleCall_3_21_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupType+=SubprogramGroupType
protected class PrivatePackageSection_OwnedSubprogramGroupTypeAssignment_3_22 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedSubprogramGroupTypeAssignment_3_22(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramGroupTypeAssignment_3_22();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramGroupTypeSubprogramGroupTypeParserRuleCall_3_22_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupImplementation+=SubprogramGroupImplementation
protected class PrivatePackageSection_OwnedSubprogramGroupImplementationAssignment_3_23 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedSubprogramGroupImplementationAssignment_3_23(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramGroupImplementationAssignment_3_23();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedSubprogramGroupImplementationSubprogramGroupImplementationParserRuleCall_3_23_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractType+=AbstractType
protected class PrivatePackageSection_OwnedAbstractTypeAssignment_3_24 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedAbstractTypeAssignment_3_24(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedAbstractTypeAssignment_3_24();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedAbstractTypeAbstractTypeParserRuleCall_3_24_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractImplementation+=AbstractImplementation
protected class PrivatePackageSection_OwnedAbstractImplementationAssignment_3_25 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedAbstractImplementationAssignment_3_25(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedAbstractImplementationAssignment_3_25();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractImplementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractImplementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractImplementationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedAbstractImplementationAbstractImplementationParserRuleCall_3_25_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataType+=DataType
protected class PrivatePackageSection_OwnedDataTypeAssignment_3_26 extends AssignmentToken  {
	
	public PrivatePackageSection_OwnedDataTypeAssignment_3_26(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivatePackageSectionAccess().getOwnedDataTypeAssignment_3_26();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrivatePackageSectionAccess().getOwnedDataTypeDataTypeParserRuleCall_3_26_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrivatePackageSection_Alternatives_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PrivatePackageSection_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new PrivatePackageSection_PrivateKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule PrivatePackageSection ****************/


/************ begin Rule PackageRename ****************
 *
 * PackageRename returns aadl2::PackageRename:
 * 	name=ID "renames" "package" renamedPackage=[aadl2::AadlPackage|PNAME] ";";
 *
 **/

// name=ID "renames" "package" renamedPackage=[aadl2::AadlPackage|PNAME] ";"
protected class PackageRename_Group extends GroupToken {
	
	public PackageRename_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageRenameAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageRenameRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class PackageRename_NameAssignment_0 extends AssignmentToken  {
	
	public PackageRename_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageRenameAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPackageRenameAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPackageRenameAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "renames"
protected class PackageRename_RenamesKeyword_1 extends KeywordToken  {
	
	public PackageRename_RenamesKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAccess().getRenamesKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "package"
protected class PackageRename_PackageKeyword_2 extends KeywordToken  {
	
	public PackageRename_PackageKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAccess().getPackageKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_RenamesKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// renamedPackage=[aadl2::AadlPackage|PNAME]
protected class PackageRename_RenamedPackageAssignment_3 extends AssignmentToken  {
	
	public PackageRename_RenamedPackageAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageRenameAccess().getRenamedPackageAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_PackageKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("renamedPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("renamedPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRenameAccess().getRenamedPackageAadlPackageCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPackageRenameAccess().getRenamedPackageAadlPackageCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ";"
protected class PackageRename_SemicolonKeyword_4 extends KeywordToken  {
	
	public PackageRename_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAccess().getSemicolonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRename_RenamedPackageAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PackageRename ****************/


/************ begin Rule PackageRenameAll ****************
 *
 * PackageRenameAll returns aadl2::PackageRename:
 * 	"renames" "package" renamedPackage=[aadl2::AadlPackage|PNAME] "::" renameAll?="all" ";" ";";
 *
 **/

// "renames" "package" renamedPackage=[aadl2::AadlPackage|PNAME] "::" renameAll?="all" ";" ";"
protected class PackageRenameAll_Group extends GroupToken {
	
	public PackageRenameAll_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPackageRenameAllRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "renames"
protected class PackageRenameAll_RenamesKeyword_0 extends KeywordToken  {
	
	public PackageRenameAll_RenamesKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getRenamesKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "package"
protected class PackageRenameAll_PackageKeyword_1 extends KeywordToken  {
	
	public PackageRenameAll_PackageKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getPackageKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_RenamesKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// renamedPackage=[aadl2::AadlPackage|PNAME]
protected class PackageRenameAll_RenamedPackageAssignment_2 extends AssignmentToken  {
	
	public PackageRenameAll_RenamedPackageAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getRenamedPackageAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_PackageKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("renamedPackage",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("renamedPackage");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPackageRenameAllAccess().getRenamedPackageAadlPackageCrossReference_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPackageRenameAllAccess().getRenamedPackageAadlPackageCrossReference_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "::"
protected class PackageRenameAll_ColonColonKeyword_3 extends KeywordToken  {
	
	public PackageRenameAll_ColonColonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getColonColonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_RenamedPackageAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// renameAll?="all"
protected class PackageRenameAll_RenameAllAssignment_4 extends AssignmentToken  {
	
	public PackageRenameAll_RenameAllAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getRenameAllAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_ColonColonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("renameAll",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("renameAll");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getPackageRenameAllAccess().getRenameAllAllKeyword_4_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class PackageRenameAll_SemicolonKeyword_5 extends KeywordToken  {
	
	public PackageRenameAll_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_RenameAllAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class PackageRenameAll_SemicolonKeyword_6 extends KeywordToken  {
	
	public PackageRenameAll_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPackageRenameAllAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PackageRenameAll_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PackageRenameAll ****************/


/************ begin Rule FGTRename ****************
 *
 * FGTRename returns aadl2::FeatureGroupTypeRename:
 * 	name=ID? "renames" "feature" "group" renamedFeatureGroupType=[aadl2::FeatureGroupType|QCREF] ";";
 *
 **/

// name=ID? "renames" "feature" "group" renamedFeatureGroupType=[aadl2::FeatureGroupType|QCREF] ";"
protected class FGTRename_Group extends GroupToken {
	
	public FGTRename_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFGTRenameRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID?
protected class FGTRename_NameAssignment_0 extends AssignmentToken  {
	
	public FGTRename_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFGTRenameAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFGTRenameAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "renames"
protected class FGTRename_RenamesKeyword_1 extends KeywordToken  {
	
	public FGTRename_RenamesKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getRenamesKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

}

// "feature"
protected class FGTRename_FeatureKeyword_2 extends KeywordToken  {
	
	public FGTRename_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_RenamesKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class FGTRename_GroupKeyword_3 extends KeywordToken  {
	
	public FGTRename_GroupKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getGroupKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_FeatureKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// renamedFeatureGroupType=[aadl2::FeatureGroupType|QCREF]
protected class FGTRename_RenamedFeatureGroupTypeAssignment_4 extends AssignmentToken  {
	
	public FGTRename_RenamedFeatureGroupTypeAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getRenamedFeatureGroupTypeAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_GroupKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("renamedFeatureGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("renamedFeatureGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFGTRenameAccess().getRenamedFeatureGroupTypeFeatureGroupTypeCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFGTRenameAccess().getRenamedFeatureGroupTypeFeatureGroupTypeCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ";"
protected class FGTRename_SemicolonKeyword_5 extends KeywordToken  {
	
	public FGTRename_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFGTRenameAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FGTRename_RenamedFeatureGroupTypeAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule FGTRename ****************/


/************ begin Rule CTRename ****************
 *
 * CTRename returns aadl2::ComponentTypeRename:
 * 	name=ID? "renames" category=ComponentCategory renamedComponentType=[aadl2::ComponentType|QCREF] ";";
 *
 **/

// name=ID? "renames" category=ComponentCategory renamedComponentType=[aadl2::ComponentType|QCREF] ";"
protected class CTRename_Group extends GroupToken {
	
	public CTRename_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCTRenameAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_SemicolonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCTRenameRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID?
protected class CTRename_NameAssignment_0 extends AssignmentToken  {
	
	public CTRename_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTRenameAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCTRenameAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCTRenameAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "renames"
protected class CTRename_RenamesKeyword_1 extends KeywordToken  {
	
	public CTRename_RenamesKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTRenameAccess().getRenamesKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

}

// category=ComponentCategory
protected class CTRename_CategoryAssignment_2 extends AssignmentToken  {
	
	public CTRename_CategoryAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTRenameAccess().getCategoryAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_RenamesKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("category",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("category");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCTRenameAccess().getCategoryComponentCategoryParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCTRenameAccess().getCategoryComponentCategoryParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// renamedComponentType=[aadl2::ComponentType|QCREF]
protected class CTRename_RenamedComponentTypeAssignment_3 extends AssignmentToken  {
	
	public CTRename_RenamedComponentTypeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTRenameAccess().getRenamedComponentTypeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_CategoryAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("renamedComponentType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("renamedComponentType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCTRenameAccess().getRenamedComponentTypeComponentTypeCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCTRenameAccess().getRenamedComponentTypeComponentTypeCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ";"
protected class CTRename_SemicolonKeyword_4 extends KeywordToken  {
	
	public CTRename_SemicolonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTRenameAccess().getSemicolonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTRename_RenamedComponentTypeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CTRename ****************/


/************ begin Rule TypeExtension ****************
 *
 * TypeExtension returns aadl2::TypeExtension:
 * 	"extends" extended=[aadl2::ComponentType|QCREF];
 *
 **/

// "extends" extended=[aadl2::ComponentType|QCREF]
protected class TypeExtension_Group extends GroupToken {
	
	public TypeExtension_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeExtensionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_ExtendedAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeExtensionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "extends"
protected class TypeExtension_ExtendsKeyword_0 extends KeywordToken  {
	
	public TypeExtension_ExtendsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeExtensionAccess().getExtendsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// extended=[aadl2::ComponentType|QCREF]
protected class TypeExtension_ExtendedAssignment_1 extends AssignmentToken  {
	
	public TypeExtension_ExtendedAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeExtensionAccess().getExtendedAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_ExtendsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extended",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extended");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionAccess().getExtendedComponentTypeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTypeExtensionAccess().getExtendedComponentTypeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule TypeExtension ****************/


/************ begin Rule ImplementationExtension ****************
 *
 * ImplementationExtension returns aadl2::ImplementationExtension:
 * 	"extends" extended=[aadl2::ComponentImplementation|QCREF];
 *
 **/

// "extends" extended=[aadl2::ComponentImplementation|QCREF]
protected class ImplementationExtension_Group extends GroupToken {
	
	public ImplementationExtension_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImplementationExtensionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_ExtendedAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImplementationExtensionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "extends"
protected class ImplementationExtension_ExtendsKeyword_0 extends KeywordToken  {
	
	public ImplementationExtension_ExtendsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImplementationExtensionAccess().getExtendsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// extended=[aadl2::ComponentImplementation|QCREF]
protected class ImplementationExtension_ExtendedAssignment_1 extends AssignmentToken  {
	
	public ImplementationExtension_ExtendedAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImplementationExtensionAccess().getExtendedAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_ExtendsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extended",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extended");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionAccess().getExtendedComponentImplementationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getImplementationExtensionAccess().getExtendedComponentImplementationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule ImplementationExtension ****************/


/************ begin Rule GroupExtension ****************
 *
 * GroupExtension returns aadl2::GroupExtension:
 * 	"extends" extended=[aadl2::FeatureGroupType|QCREF];
 *
 **/

// "extends" extended=[aadl2::FeatureGroupType|QCREF]
protected class GroupExtension_Group extends GroupToken {
	
	public GroupExtension_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupExtensionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupExtension_ExtendedAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGroupExtensionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "extends"
protected class GroupExtension_ExtendsKeyword_0 extends KeywordToken  {
	
	public GroupExtension_ExtendsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupExtensionAccess().getExtendsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// extended=[aadl2::FeatureGroupType|QCREF]
protected class GroupExtension_ExtendedAssignment_1 extends AssignmentToken  {
	
	public GroupExtension_ExtendedAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupExtensionAccess().getExtendedAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupExtension_ExtendsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extended",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extended");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getGroupExtensionAccess().getExtendedFeatureGroupTypeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getGroupExtensionAccess().getExtendedFeatureGroupTypeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule GroupExtension ****************/



/************ begin Rule AbstractType ****************
 *
 * AbstractType returns aadl2::AbstractType:
 * 	"abstract" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
 * 	ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "abstract" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
// ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class AbstractType_Group extends GroupToken {
	
	public AbstractType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "abstract"
protected class AbstractType_AbstractKeyword_0 extends KeywordToken  {
	
	public AbstractType_AbstractKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAbstractKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class AbstractType_NameAssignment_1 extends AssignmentToken  {
	
	public AbstractType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_AbstractKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAbstractTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class AbstractType_Group_2 extends GroupToken {
	
	public AbstractType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class AbstractType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public AbstractType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class AbstractType_Group_2_1 extends GroupToken {
	
	public AbstractType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class AbstractType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public AbstractType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class AbstractType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public AbstractType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class AbstractType_Group_2_1_2 extends GroupToken {
	
	public AbstractType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AbstractType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public AbstractType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class AbstractType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public AbstractType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class AbstractType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public AbstractType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class AbstractType_Group_3 extends GroupToken {
	
	public AbstractType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class AbstractType_PrototypesKeyword_3_0 extends KeywordToken  {
	
	public AbstractType_PrototypesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getPrototypesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class AbstractType_Alternatives_3_1 extends AlternativesToken {

	public AbstractType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class AbstractType_Group_3_1_0 extends GroupToken {
	
	public AbstractType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class AbstractType_NoPrototypesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public AbstractType_NoPrototypesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNoPrototypesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_PrototypesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractTypeAccess().getNoPrototypesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public AbstractType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_NoPrototypesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class AbstractType_OwnedPrototypeAssignment_3_1_1 extends AssignmentToken  {
	
	public AbstractType_OwnedPrototypeAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedPrototypeAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedPrototypePrototypeParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_PrototypesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess |
// ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess
// | ownedAbstractFeature+=AbstractFeature)+))?
protected class AbstractType_Group_4 extends GroupToken {
	
	public AbstractType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class AbstractType_FeaturesKeyword_4_0 extends KeywordToken  {
	
	public AbstractType_FeaturesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getFeaturesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+
protected class AbstractType_Alternatives_4_1 extends AlternativesToken {

	public AbstractType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class AbstractType_Group_4_1_0 extends GroupToken {
	
	public AbstractType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class AbstractType_NoFeaturesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public AbstractType_NoFeaturesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNoFeaturesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractTypeAccess().getNoFeaturesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public AbstractType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_NoFeaturesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+
protected class AbstractType_Alternatives_4_1_1 extends AlternativesToken {

	public AbstractType_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedDataPortAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_OwnedEventPortAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractType_OwnedEventDataPortAssignment_4_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractType_OwnedFeatureGroupAssignment_4_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractType_OwnedDataAccessAssignment_4_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractType_OwnedBusAccessAssignment_4_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new AbstractType_OwnedSubprogramAccessAssignment_4_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new AbstractType_OwnedSubprogramGroupAccessAssignment_4_1_1_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new AbstractType_OwnedAbstractFeatureAssignment_4_1_1_8(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class AbstractType_OwnedDataPortAssignment_4_1_1_0 extends AssignmentToken  {
	
	public AbstractType_OwnedDataPortAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedDataPortAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedDataPortDataPortParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class AbstractType_OwnedEventPortAssignment_4_1_1_1 extends AssignmentToken  {
	
	public AbstractType_OwnedEventPortAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedEventPortAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedEventPortEventPortParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class AbstractType_OwnedEventDataPortAssignment_4_1_1_2 extends AssignmentToken  {
	
	public AbstractType_OwnedEventDataPortAssignment_4_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedEventDataPortAssignment_4_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_4_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class AbstractType_OwnedFeatureGroupAssignment_4_1_1_3 extends AssignmentToken  {
	
	public AbstractType_OwnedFeatureGroupAssignment_4_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedFeatureGroupAssignment_4_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_4_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataAccess+=DataAccess
protected class AbstractType_OwnedDataAccessAssignment_4_1_1_4 extends AssignmentToken  {
	
	public AbstractType_OwnedDataAccessAssignment_4_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedDataAccessAssignment_4_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedDataAccessDataAccessParserRuleCall_4_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusAccess+=BusAccess
protected class AbstractType_OwnedBusAccessAssignment_4_1_1_5 extends AssignmentToken  {
	
	public AbstractType_OwnedBusAccessAssignment_4_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedBusAccessAssignment_4_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedBusAccessBusAccessParserRuleCall_4_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class AbstractType_OwnedSubprogramAccessAssignment_4_1_1_6 extends AssignmentToken  {
	
	public AbstractType_OwnedSubprogramAccessAssignment_4_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedSubprogramAccessAssignment_4_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_4_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class AbstractType_OwnedSubprogramGroupAccessAssignment_4_1_1_7 extends AssignmentToken  {
	
	public AbstractType_OwnedSubprogramGroupAccessAssignment_4_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedSubprogramGroupAccessAssignment_4_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_4_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class AbstractType_OwnedAbstractFeatureAssignment_4_1_1_8 extends AssignmentToken  {
	
	public AbstractType_OwnedAbstractFeatureAssignment_4_1_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedAbstractFeatureAssignment_4_1_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_4_1_1_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class AbstractType_Group_5 extends GroupToken {
	
	public AbstractType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class AbstractType_FlowsKeyword_5_0 extends KeywordToken  {
	
	public AbstractType_FlowsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getFlowsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class AbstractType_Alternatives_5_1 extends AlternativesToken {

	public AbstractType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class AbstractType_OwnedFlowSpecificationAssignment_5_1_0 extends AssignmentToken  {
	
	public AbstractType_OwnedFlowSpecificationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedFlowSpecificationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_FlowsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class AbstractType_Group_5_1_1 extends GroupToken {
	
	public AbstractType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class AbstractType_NoFlowsAssignment_5_1_1_0 extends AssignmentToken  {
	
	public AbstractType_NoFlowsAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNoFlowsAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_FlowsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractTypeAccess().getNoFlowsNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public AbstractType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_NoFlowsAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class AbstractType_Group_6 extends GroupToken {
	
	public AbstractType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class AbstractType_ModesKeyword_6_0 extends KeywordToken  {
	
	public AbstractType_ModesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getModesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class AbstractType_Alternatives_6_1 extends AlternativesToken {

	public AbstractType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class AbstractType_Alternatives_6_1_0 extends AlternativesToken {

	public AbstractType_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedModeAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_OwnedModeTransitionAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class AbstractType_OwnedModeAssignment_6_1_0_0 extends AssignmentToken  {
	
	public AbstractType_OwnedModeAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedModeAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedModeModeParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class AbstractType_OwnedModeTransitionAssignment_6_1_0_1 extends AssignmentToken  {
	
	public AbstractType_OwnedModeTransitionAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedModeTransitionAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class AbstractType_Group_6_1_1 extends GroupToken {
	
	public AbstractType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class AbstractType_NoModesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public AbstractType_NoModesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNoModesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_ModesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractTypeAccess().getNoModesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public AbstractType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_NoModesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class AbstractType_Group_7 extends GroupToken {
	
	public AbstractType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class AbstractType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public AbstractType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class AbstractType_Alternatives_7_1 extends AlternativesToken {

	public AbstractType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class AbstractType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public AbstractType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class AbstractType_Group_7_1_1 extends GroupToken {
	
	public AbstractType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class AbstractType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public AbstractType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public AbstractType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class AbstractType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public AbstractType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new AbstractType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new AbstractType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new AbstractType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new AbstractType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new AbstractType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class AbstractType_EndKeyword_9 extends KeywordToken  {
	
	public AbstractType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new AbstractType_Group_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class AbstractType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public AbstractType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class AbstractType_SemicolonKeyword_11 extends KeywordToken  {
	
	public AbstractType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AbstractType ****************/


/************ begin Rule SystemType ****************
 *
 * SystemType returns aadl2::SystemType:
 * 	"system" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (ownedPrototype+=Prototype+ | noPrototypes?="none"
 * 	";"))? ("features" ((ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
 * 	ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
 * 	ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
 * 	ownedAbstractFeature+=AbstractFeature)+ | noFeatures?="none" ";"))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "system" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (ownedPrototype+=Prototype+ | noPrototypes?="none"
// ";"))? ("features" ((ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+ | noFeatures?="none" ";"))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class SystemType_Group extends GroupToken {
	
	public SystemType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSystemTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "system"
protected class SystemType_SystemKeyword_0 extends KeywordToken  {
	
	public SystemType_SystemKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSystemKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class SystemType_NameAssignment_1 extends AssignmentToken  {
	
	public SystemType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SystemKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSystemTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSystemTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SystemType_Group_2 extends GroupToken {
	
	public SystemType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class SystemType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public SystemType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SystemType_Group_2_1 extends GroupToken {
	
	public SystemType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SystemType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public SystemType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SystemType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public SystemType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SystemType_Group_2_1_2 extends GroupToken {
	
	public SystemType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SystemType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public SystemType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SystemType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public SystemType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SystemType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public SystemType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (ownedPrototype+=Prototype+ | noPrototypes?="none" ";"))?
protected class SystemType_Group_3 extends GroupToken {
	
	public SystemType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class SystemType_PrototypesKeyword_3_0 extends KeywordToken  {
	
	public SystemType_PrototypesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getPrototypesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototype+=Prototype+ | noPrototypes?="none" ";"
protected class SystemType_Alternatives_3_1 extends AlternativesToken {

	public SystemType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedPrototypeAssignment_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototype+=Prototype+
protected class SystemType_OwnedPrototypeAssignment_3_1_0 extends AssignmentToken  {
	
	public SystemType_OwnedPrototypeAssignment_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedPrototypeAssignment_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedPrototypePrototypeParserRuleCall_3_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_OwnedPrototypeAssignment_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_PrototypesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noPrototypes?="none" ";"
protected class SystemType_Group_3_1_1 extends GroupToken {
	
	public SystemType_Group_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SemicolonKeyword_3_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class SystemType_NoPrototypesAssignment_3_1_1_0 extends AssignmentToken  {
	
	public SystemType_NoPrototypesAssignment_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getNoPrototypesAssignment_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_PrototypesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemTypeAccess().getNoPrototypesNoneKeyword_3_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemType_SemicolonKeyword_3_1_1_1 extends KeywordToken  {
	
	public SystemType_SemicolonKeyword_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSemicolonKeyword_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_NoPrototypesAssignment_3_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "features" ((ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+ | noFeatures?="none" ";"))?
protected class SystemType_Group_4 extends GroupToken {
	
	public SystemType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class SystemType_FeaturesKeyword_4_0 extends KeywordToken  {
	
	public SystemType_FeaturesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getFeaturesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+ | noFeatures?="none" ";"
protected class SystemType_Alternatives_4_1 extends AlternativesToken {

	public SystemType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+
protected class SystemType_Alternatives_4_1_0 extends AlternativesToken {

	public SystemType_Alternatives_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedDataPortAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_OwnedEventPortAssignment_4_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemType_OwnedEventDataPortAssignment_4_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemType_OwnedFeatureGroupAssignment_4_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemType_OwnedDataAccessAssignment_4_1_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SystemType_OwnedBusAccessAssignment_4_1_0_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SystemType_OwnedSubprogramAccessAssignment_4_1_0_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SystemType_OwnedSubprogramGroupAccessAssignment_4_1_0_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new SystemType_OwnedAbstractFeatureAssignment_4_1_0_8(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class SystemType_OwnedDataPortAssignment_4_1_0_0 extends AssignmentToken  {
	
	public SystemType_OwnedDataPortAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedDataPortAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedDataPortDataPortParserRuleCall_4_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class SystemType_OwnedEventPortAssignment_4_1_0_1 extends AssignmentToken  {
	
	public SystemType_OwnedEventPortAssignment_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedEventPortAssignment_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedEventPortEventPortParserRuleCall_4_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class SystemType_OwnedEventDataPortAssignment_4_1_0_2 extends AssignmentToken  {
	
	public SystemType_OwnedEventDataPortAssignment_4_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedEventDataPortAssignment_4_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_4_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class SystemType_OwnedFeatureGroupAssignment_4_1_0_3 extends AssignmentToken  {
	
	public SystemType_OwnedFeatureGroupAssignment_4_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedFeatureGroupAssignment_4_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_4_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataAccess+=DataAccess
protected class SystemType_OwnedDataAccessAssignment_4_1_0_4 extends AssignmentToken  {
	
	public SystemType_OwnedDataAccessAssignment_4_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedDataAccessAssignment_4_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedDataAccessDataAccessParserRuleCall_4_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusAccess+=BusAccess
protected class SystemType_OwnedBusAccessAssignment_4_1_0_5 extends AssignmentToken  {
	
	public SystemType_OwnedBusAccessAssignment_4_1_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedBusAccessAssignment_4_1_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedBusAccessBusAccessParserRuleCall_4_1_0_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class SystemType_OwnedSubprogramAccessAssignment_4_1_0_6 extends AssignmentToken  {
	
	public SystemType_OwnedSubprogramAccessAssignment_4_1_0_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedSubprogramAccessAssignment_4_1_0_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_4_1_0_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class SystemType_OwnedSubprogramGroupAccessAssignment_4_1_0_7 extends AssignmentToken  {
	
	public SystemType_OwnedSubprogramGroupAccessAssignment_4_1_0_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedSubprogramGroupAccessAssignment_4_1_0_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_4_1_0_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class SystemType_OwnedAbstractFeatureAssignment_4_1_0_8 extends AssignmentToken  {
	
	public SystemType_OwnedAbstractFeatureAssignment_4_1_0_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedAbstractFeatureAssignment_4_1_0_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_4_1_0_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noFeatures?="none" ";"
protected class SystemType_Group_4_1_1 extends GroupToken {
	
	public SystemType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class SystemType_NoFeaturesAssignment_4_1_1_0 extends AssignmentToken  {
	
	public SystemType_NoFeaturesAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getNoFeaturesAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_FeaturesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemTypeAccess().getNoFeaturesNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public SystemType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_NoFeaturesAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class SystemType_Group_5 extends GroupToken {
	
	public SystemType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class SystemType_FlowsKeyword_5_0 extends KeywordToken  {
	
	public SystemType_FlowsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getFlowsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class SystemType_Alternatives_5_1 extends AlternativesToken {

	public SystemType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class SystemType_OwnedFlowSpecificationAssignment_5_1_0 extends AssignmentToken  {
	
	public SystemType_OwnedFlowSpecificationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedFlowSpecificationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_FlowsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class SystemType_Group_5_1_1 extends GroupToken {
	
	public SystemType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class SystemType_NoFlowsAssignment_5_1_1_0 extends AssignmentToken  {
	
	public SystemType_NoFlowsAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getNoFlowsAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_FlowsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemTypeAccess().getNoFlowsNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public SystemType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_NoFlowsAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class SystemType_Group_6 extends GroupToken {
	
	public SystemType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class SystemType_ModesKeyword_6_0 extends KeywordToken  {
	
	public SystemType_ModesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getModesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class SystemType_Alternatives_6_1 extends AlternativesToken {

	public SystemType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class SystemType_Alternatives_6_1_0 extends AlternativesToken {

	public SystemType_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedModeAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_OwnedModeTransitionAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class SystemType_OwnedModeAssignment_6_1_0_0 extends AssignmentToken  {
	
	public SystemType_OwnedModeAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedModeAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedModeModeParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class SystemType_OwnedModeTransitionAssignment_6_1_0_1 extends AssignmentToken  {
	
	public SystemType_OwnedModeTransitionAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedModeTransitionAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class SystemType_Group_6_1_1 extends GroupToken {
	
	public SystemType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class SystemType_NoModesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public SystemType_NoModesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getNoModesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_ModesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemTypeAccess().getNoModesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public SystemType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_NoModesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class SystemType_Group_7 extends GroupToken {
	
	public SystemType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class SystemType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public SystemType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SystemType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class SystemType_Alternatives_7_1 extends AlternativesToken {

	public SystemType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SystemType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public SystemType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class SystemType_Group_7_1_1 extends GroupToken {
	
	public SystemType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class SystemType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public SystemType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public SystemType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class SystemType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public SystemType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SystemType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SystemType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SystemType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SystemType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SystemType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new SystemType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class SystemType_EndKeyword_9 extends KeywordToken  {
	
	public SystemType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SystemType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SystemType_Group_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SystemType_NameAssignment_1(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class SystemType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public SystemType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class SystemType_SemicolonKeyword_11 extends KeywordToken  {
	
	public SystemType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule SystemType ****************/


/************ begin Rule ProcessType ****************
 *
 * ProcessType returns aadl2::ProcessType:
 * 	"process" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
 * 	ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "process" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
// ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class ProcessType_Group extends GroupToken {
	
	public ProcessType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "process"
protected class ProcessType_ProcessKeyword_0 extends KeywordToken  {
	
	public ProcessType_ProcessKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getProcessKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ProcessType_NameAssignment_1 extends AssignmentToken  {
	
	public ProcessType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_ProcessKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getProcessTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ProcessType_Group_2 extends GroupToken {
	
	public ProcessType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class ProcessType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public ProcessType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ProcessType_Group_2_1 extends GroupToken {
	
	public ProcessType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public ProcessType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public ProcessType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ProcessType_Group_2_1_2 extends GroupToken {
	
	public ProcessType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public ProcessType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public ProcessType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public ProcessType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class ProcessType_Group_3 extends GroupToken {
	
	public ProcessType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class ProcessType_PrototypesKeyword_3_0 extends KeywordToken  {
	
	public ProcessType_PrototypesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getPrototypesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class ProcessType_Alternatives_3_1 extends AlternativesToken {

	public ProcessType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class ProcessType_Group_3_1_0 extends GroupToken {
	
	public ProcessType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class ProcessType_NoPrototypesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public ProcessType_NoPrototypesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getNoPrototypesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_PrototypesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessTypeAccess().getNoPrototypesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public ProcessType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_NoPrototypesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class ProcessType_OwnedPrototypeAssignment_3_1_1 extends AssignmentToken  {
	
	public ProcessType_OwnedPrototypeAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedPrototypeAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedPrototypePrototypeParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_PrototypesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))?
protected class ProcessType_Group_4 extends GroupToken {
	
	public ProcessType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class ProcessType_FeaturesKeyword_4_0 extends KeywordToken  {
	
	public ProcessType_FeaturesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getFeaturesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ProcessType_Alternatives_4_1 extends AlternativesToken {

	public ProcessType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class ProcessType_Group_4_1_0 extends GroupToken {
	
	public ProcessType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class ProcessType_NoFeaturesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public ProcessType_NoFeaturesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getNoFeaturesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessTypeAccess().getNoFeaturesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public ProcessType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_NoFeaturesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ProcessType_Alternatives_4_1_1 extends AlternativesToken {

	public ProcessType_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedDataPortAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_OwnedEventPortAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessType_OwnedEventDataPortAssignment_4_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessType_OwnedFeatureGroupAssignment_4_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessType_OwnedDataAccessAssignment_4_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessType_OwnedSubprogramAccessAssignment_4_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ProcessType_OwnedSubprogramGroupAccessAssignment_4_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ProcessType_OwnedAbstractFeatureAssignment_4_1_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class ProcessType_OwnedDataPortAssignment_4_1_1_0 extends AssignmentToken  {
	
	public ProcessType_OwnedDataPortAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedDataPortAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedDataPortDataPortParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class ProcessType_OwnedEventPortAssignment_4_1_1_1 extends AssignmentToken  {
	
	public ProcessType_OwnedEventPortAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedEventPortAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedEventPortEventPortParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class ProcessType_OwnedEventDataPortAssignment_4_1_1_2 extends AssignmentToken  {
	
	public ProcessType_OwnedEventDataPortAssignment_4_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedEventDataPortAssignment_4_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_4_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class ProcessType_OwnedFeatureGroupAssignment_4_1_1_3 extends AssignmentToken  {
	
	public ProcessType_OwnedFeatureGroupAssignment_4_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedFeatureGroupAssignment_4_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_4_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataAccess+=DataAccess
protected class ProcessType_OwnedDataAccessAssignment_4_1_1_4 extends AssignmentToken  {
	
	public ProcessType_OwnedDataAccessAssignment_4_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedDataAccessAssignment_4_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedDataAccessDataAccessParserRuleCall_4_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class ProcessType_OwnedSubprogramAccessAssignment_4_1_1_5 extends AssignmentToken  {
	
	public ProcessType_OwnedSubprogramAccessAssignment_4_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedSubprogramAccessAssignment_4_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_4_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class ProcessType_OwnedSubprogramGroupAccessAssignment_4_1_1_6 extends AssignmentToken  {
	
	public ProcessType_OwnedSubprogramGroupAccessAssignment_4_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedSubprogramGroupAccessAssignment_4_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_4_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class ProcessType_OwnedAbstractFeatureAssignment_4_1_1_7 extends AssignmentToken  {
	
	public ProcessType_OwnedAbstractFeatureAssignment_4_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedAbstractFeatureAssignment_4_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_4_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class ProcessType_Group_5 extends GroupToken {
	
	public ProcessType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ProcessType_FlowsKeyword_5_0 extends KeywordToken  {
	
	public ProcessType_FlowsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getFlowsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class ProcessType_Alternatives_5_1 extends AlternativesToken {

	public ProcessType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class ProcessType_OwnedFlowSpecificationAssignment_5_1_0 extends AssignmentToken  {
	
	public ProcessType_OwnedFlowSpecificationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedFlowSpecificationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_FlowsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class ProcessType_Group_5_1_1 extends GroupToken {
	
	public ProcessType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ProcessType_NoFlowsAssignment_5_1_1_0 extends AssignmentToken  {
	
	public ProcessType_NoFlowsAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getNoFlowsAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_FlowsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessTypeAccess().getNoFlowsNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public ProcessType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_NoFlowsAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ProcessType_Group_6 extends GroupToken {
	
	public ProcessType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ProcessType_ModesKeyword_6_0 extends KeywordToken  {
	
	public ProcessType_ModesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getModesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ProcessType_Alternatives_6_1 extends AlternativesToken {

	public ProcessType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ProcessType_Alternatives_6_1_0 extends AlternativesToken {

	public ProcessType_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedModeAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_OwnedModeTransitionAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ProcessType_OwnedModeAssignment_6_1_0_0 extends AssignmentToken  {
	
	public ProcessType_OwnedModeAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedModeAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedModeModeParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ProcessType_OwnedModeTransitionAssignment_6_1_0_1 extends AssignmentToken  {
	
	public ProcessType_OwnedModeTransitionAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedModeTransitionAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ProcessType_Group_6_1_1 extends GroupToken {
	
	public ProcessType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ProcessType_NoModesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ProcessType_NoModesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getNoModesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_ModesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessTypeAccess().getNoModesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ProcessType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_NoModesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ProcessType_Group_7 extends GroupToken {
	
	public ProcessType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ProcessType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public ProcessType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ProcessType_Alternatives_7_1 extends AlternativesToken {

	public ProcessType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ProcessType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public ProcessType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ProcessType_Group_7_1_1 extends GroupToken {
	
	public ProcessType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ProcessType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public ProcessType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public ProcessType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ProcessType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public ProcessType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ProcessType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ProcessType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ProcessType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ProcessType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ProcessType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ProcessType_EndKeyword_9 extends KeywordToken  {
	
	public ProcessType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ProcessType_Group_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ProcessType_NameAssignment_1(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class ProcessType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public ProcessType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ProcessType_SemicolonKeyword_11 extends KeywordToken  {
	
	public ProcessType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProcessType ****************/


/************ begin Rule ThreadGroupType ****************
 *
 * ThreadGroupType returns aadl2::ThreadGroupType:
 * 	"thread" "group" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
 * 	ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "thread" "group" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
// ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class ThreadGroupType_Group extends GroupToken {
	
	public ThreadGroupType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_SemicolonKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThreadGroupTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "thread"
protected class ThreadGroupType_ThreadKeyword_0 extends KeywordToken  {
	
	public ThreadGroupType_ThreadKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getThreadKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "group"
protected class ThreadGroupType_GroupKeyword_1 extends KeywordToken  {
	
	public ThreadGroupType_GroupKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroupKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_ThreadKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ThreadGroupType_NameAssignment_2 extends AssignmentToken  {
	
	public ThreadGroupType_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_GroupKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThreadGroupTypeAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThreadGroupTypeAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ThreadGroupType_Group_3 extends GroupToken {
	
	public ThreadGroupType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class ThreadGroupType_OwnedExtensionAssignment_3_0 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedExtensionAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedExtensionAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ThreadGroupType_Group_3_1 extends GroupToken {
	
	public ThreadGroupType_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadGroupType_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public ThreadGroupType_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ThreadGroupType_Group_3_1_2 extends GroupToken {
	
	public ThreadGroupType_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadGroupType_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public ThreadGroupType_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadGroupType_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public ThreadGroupType_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class ThreadGroupType_Group_4 extends GroupToken {
	
	public ThreadGroupType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class ThreadGroupType_PrototypesKeyword_4_0 extends KeywordToken  {
	
	public ThreadGroupType_PrototypesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getPrototypesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class ThreadGroupType_Alternatives_4_1 extends AlternativesToken {

	public ThreadGroupType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_OwnedPrototypeAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class ThreadGroupType_Group_4_1_0 extends GroupToken {
	
	public ThreadGroupType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class ThreadGroupType_NoPrototypesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public ThreadGroupType_NoPrototypesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getNoPrototypesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_PrototypesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupTypeAccess().getNoPrototypesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public ThreadGroupType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_NoPrototypesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class ThreadGroupType_OwnedPrototypeAssignment_4_1_1 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedPrototypeAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedPrototypeAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedPrototypePrototypeParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_OwnedPrototypeAssignment_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_PrototypesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))?
protected class ThreadGroupType_Group_5 extends GroupToken {
	
	public ThreadGroupType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class ThreadGroupType_FeaturesKeyword_5_0 extends KeywordToken  {
	
	public ThreadGroupType_FeaturesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getFeaturesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ThreadGroupType_Alternatives_5_1 extends AlternativesToken {

	public ThreadGroupType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class ThreadGroupType_Group_5_1_0 extends GroupToken {
	
	public ThreadGroupType_Group_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_SemicolonKeyword_5_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class ThreadGroupType_NoFeaturesAssignment_5_1_0_0 extends AssignmentToken  {
	
	public ThreadGroupType_NoFeaturesAssignment_5_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getNoFeaturesAssignment_5_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupTypeAccess().getNoFeaturesNoneKeyword_5_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupType_SemicolonKeyword_5_1_0_1 extends KeywordToken  {
	
	public ThreadGroupType_SemicolonKeyword_5_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getSemicolonKeyword_5_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_NoFeaturesAssignment_5_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ThreadGroupType_Alternatives_5_1_1 extends AlternativesToken {

	public ThreadGroupType_Alternatives_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedDataPortAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_OwnedEventPortAssignment_5_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupType_OwnedEventDataPortAssignment_5_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupType_OwnedFeatureGroupAssignment_5_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupType_OwnedDataAccessAssignment_5_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadGroupType_OwnedSubprogramAccessAssignment_5_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadGroupType_OwnedSubprogramGroupAccessAssignment_5_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ThreadGroupType_OwnedAbstractFeatureAssignment_5_1_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class ThreadGroupType_OwnedDataPortAssignment_5_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedDataPortAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedDataPortAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedDataPortDataPortParserRuleCall_5_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class ThreadGroupType_OwnedEventPortAssignment_5_1_1_1 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedEventPortAssignment_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedEventPortAssignment_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedEventPortEventPortParserRuleCall_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class ThreadGroupType_OwnedEventDataPortAssignment_5_1_1_2 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedEventDataPortAssignment_5_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedEventDataPortAssignment_5_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_5_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class ThreadGroupType_OwnedFeatureGroupAssignment_5_1_1_3 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedFeatureGroupAssignment_5_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedFeatureGroupAssignment_5_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_5_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataAccess+=DataAccess
protected class ThreadGroupType_OwnedDataAccessAssignment_5_1_1_4 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedDataAccessAssignment_5_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedDataAccessAssignment_5_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedDataAccessDataAccessParserRuleCall_5_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class ThreadGroupType_OwnedSubprogramAccessAssignment_5_1_1_5 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedSubprogramAccessAssignment_5_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedSubprogramAccessAssignment_5_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_5_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class ThreadGroupType_OwnedSubprogramGroupAccessAssignment_5_1_1_6 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedSubprogramGroupAccessAssignment_5_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedSubprogramGroupAccessAssignment_5_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_5_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class ThreadGroupType_OwnedAbstractFeatureAssignment_5_1_1_7 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedAbstractFeatureAssignment_5_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedAbstractFeatureAssignment_5_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_5_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class ThreadGroupType_Group_6 extends GroupToken {
	
	public ThreadGroupType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ThreadGroupType_FlowsKeyword_6_0 extends KeywordToken  {
	
	public ThreadGroupType_FlowsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getFlowsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class ThreadGroupType_Alternatives_6_1 extends AlternativesToken {

	public ThreadGroupType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedFlowSpecificationAssignment_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class ThreadGroupType_OwnedFlowSpecificationAssignment_6_1_0 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedFlowSpecificationAssignment_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedFlowSpecificationAssignment_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_OwnedFlowSpecificationAssignment_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_FlowsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class ThreadGroupType_Group_6_1_1 extends GroupToken {
	
	public ThreadGroupType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ThreadGroupType_NoFlowsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupType_NoFlowsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getNoFlowsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_FlowsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupTypeAccess().getNoFlowsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ThreadGroupType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_NoFlowsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ThreadGroupType_Group_7 extends GroupToken {
	
	public ThreadGroupType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ThreadGroupType_ModesKeyword_7_0 extends KeywordToken  {
	
	public ThreadGroupType_ModesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getModesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ThreadGroupType_Alternatives_7_1 extends AlternativesToken {

	public ThreadGroupType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ThreadGroupType_Alternatives_7_1_0 extends AlternativesToken {

	public ThreadGroupType_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedModeAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_OwnedModeTransitionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ThreadGroupType_OwnedModeAssignment_7_1_0_0 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedModeAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedModeAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedModeModeParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_ModesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ThreadGroupType_OwnedModeTransitionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedModeTransitionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedModeTransitionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_ModesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ThreadGroupType_Group_7_1_1 extends GroupToken {
	
	public ThreadGroupType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ThreadGroupType_NoModesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupType_NoModesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getNoModesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_ModesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupTypeAccess().getNoModesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public ThreadGroupType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_NoModesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ThreadGroupType_Group_8 extends GroupToken {
	
	public ThreadGroupType_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ThreadGroupType_PropertiesKeyword_8_0 extends KeywordToken  {
	
	public ThreadGroupType_PropertiesKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getPropertiesKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupType_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupType_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupType_Group_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ThreadGroupType_Alternatives_8_1 extends AlternativesToken {

	public ThreadGroupType_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedPropertyAssociationAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ThreadGroupType_OwnedPropertyAssociationAssignment_8_1_0 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedPropertyAssociationAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedPropertyAssociationAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_8_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_OwnedPropertyAssociationAssignment_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_PropertiesKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ThreadGroupType_Group_8_1_1 extends GroupToken {
	
	public ThreadGroupType_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ThreadGroupType_NoPropertiesAssignment_8_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupType_NoPropertiesAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getNoPropertiesAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_PropertiesKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupTypeAccess().getNoPropertiesNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupType_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public ThreadGroupType_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_NoPropertiesAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ThreadGroupType_OwnedAnnexSubclauseAssignment_9 extends AssignmentToken  {
	
	public ThreadGroupType_OwnedAnnexSubclauseAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getOwnedAnnexSubclauseAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupType_OwnedAnnexSubclauseAssignment_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupType_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ThreadGroupType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ThreadGroupType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ThreadGroupType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ThreadGroupType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ThreadGroupType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ThreadGroupType_EndKeyword_10 extends KeywordToken  {
	
	public ThreadGroupType_EndKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getEndKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_OwnedAnnexSubclauseAssignment_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupType_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupType_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupType_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupType_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadGroupType_Group_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadGroupType_Group_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ThreadGroupType_NameAssignment_2(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class ThreadGroupType_IDTerminalRuleCall_11 extends UnassignedTextToken {

	public ThreadGroupType_IDTerminalRuleCall_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getIDTerminalRuleCall_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_EndKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ThreadGroupType_SemicolonKeyword_12 extends KeywordToken  {
	
	public ThreadGroupType_SemicolonKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupTypeAccess().getSemicolonKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupType_IDTerminalRuleCall_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThreadGroupType ****************/


/************ begin Rule ThreadType ****************
 *
 * ThreadType returns aadl2::ThreadType:
 * 	"thread" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
 * 	ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "thread" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
// ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class ThreadType_Group extends GroupToken {
	
	public ThreadType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThreadTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "thread"
protected class ThreadType_ThreadKeyword_0 extends KeywordToken  {
	
	public ThreadType_ThreadKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getThreadKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ThreadType_NameAssignment_1 extends AssignmentToken  {
	
	public ThreadType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_ThreadKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThreadTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThreadTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ThreadType_Group_2 extends GroupToken {
	
	public ThreadType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class ThreadType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public ThreadType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ThreadType_Group_2_1 extends GroupToken {
	
	public ThreadType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public ThreadType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public ThreadType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ThreadType_Group_2_1_2 extends GroupToken {
	
	public ThreadType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public ThreadType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public ThreadType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public ThreadType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class ThreadType_Group_3 extends GroupToken {
	
	public ThreadType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class ThreadType_PrototypesKeyword_3_0 extends KeywordToken  {
	
	public ThreadType_PrototypesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getPrototypesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class ThreadType_Alternatives_3_1 extends AlternativesToken {

	public ThreadType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class ThreadType_Group_3_1_0 extends GroupToken {
	
	public ThreadType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class ThreadType_NoPrototypesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public ThreadType_NoPrototypesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getNoPrototypesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_PrototypesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadTypeAccess().getNoPrototypesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public ThreadType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_NoPrototypesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class ThreadType_OwnedPrototypeAssignment_3_1_1 extends AssignmentToken  {
	
	public ThreadType_OwnedPrototypeAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedPrototypeAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedPrototypePrototypeParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_PrototypesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))?
protected class ThreadType_Group_4 extends GroupToken {
	
	public ThreadType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class ThreadType_FeaturesKeyword_4_0 extends KeywordToken  {
	
	public ThreadType_FeaturesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getFeaturesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ThreadType_Alternatives_4_1 extends AlternativesToken {

	public ThreadType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class ThreadType_Group_4_1_0 extends GroupToken {
	
	public ThreadType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class ThreadType_NoFeaturesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public ThreadType_NoFeaturesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getNoFeaturesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadTypeAccess().getNoFeaturesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public ThreadType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_NoFeaturesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ThreadType_Alternatives_4_1_1 extends AlternativesToken {

	public ThreadType_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedDataPortAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_OwnedEventPortAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadType_OwnedEventDataPortAssignment_4_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadType_OwnedFeatureGroupAssignment_4_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadType_OwnedDataAccessAssignment_4_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadType_OwnedSubprogramAccessAssignment_4_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadType_OwnedSubprogramGroupAccessAssignment_4_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ThreadType_OwnedAbstractFeatureAssignment_4_1_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class ThreadType_OwnedDataPortAssignment_4_1_1_0 extends AssignmentToken  {
	
	public ThreadType_OwnedDataPortAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedDataPortAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedDataPortDataPortParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class ThreadType_OwnedEventPortAssignment_4_1_1_1 extends AssignmentToken  {
	
	public ThreadType_OwnedEventPortAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedEventPortAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedEventPortEventPortParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class ThreadType_OwnedEventDataPortAssignment_4_1_1_2 extends AssignmentToken  {
	
	public ThreadType_OwnedEventDataPortAssignment_4_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedEventDataPortAssignment_4_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_4_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class ThreadType_OwnedFeatureGroupAssignment_4_1_1_3 extends AssignmentToken  {
	
	public ThreadType_OwnedFeatureGroupAssignment_4_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedFeatureGroupAssignment_4_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_4_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataAccess+=DataAccess
protected class ThreadType_OwnedDataAccessAssignment_4_1_1_4 extends AssignmentToken  {
	
	public ThreadType_OwnedDataAccessAssignment_4_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedDataAccessAssignment_4_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedDataAccessDataAccessParserRuleCall_4_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class ThreadType_OwnedSubprogramAccessAssignment_4_1_1_5 extends AssignmentToken  {
	
	public ThreadType_OwnedSubprogramAccessAssignment_4_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedSubprogramAccessAssignment_4_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_4_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class ThreadType_OwnedSubprogramGroupAccessAssignment_4_1_1_6 extends AssignmentToken  {
	
	public ThreadType_OwnedSubprogramGroupAccessAssignment_4_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedSubprogramGroupAccessAssignment_4_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_4_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class ThreadType_OwnedAbstractFeatureAssignment_4_1_1_7 extends AssignmentToken  {
	
	public ThreadType_OwnedAbstractFeatureAssignment_4_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedAbstractFeatureAssignment_4_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_4_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class ThreadType_Group_5 extends GroupToken {
	
	public ThreadType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ThreadType_FlowsKeyword_5_0 extends KeywordToken  {
	
	public ThreadType_FlowsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getFlowsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class ThreadType_Alternatives_5_1 extends AlternativesToken {

	public ThreadType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class ThreadType_OwnedFlowSpecificationAssignment_5_1_0 extends AssignmentToken  {
	
	public ThreadType_OwnedFlowSpecificationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedFlowSpecificationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_FlowsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class ThreadType_Group_5_1_1 extends GroupToken {
	
	public ThreadType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ThreadType_NoFlowsAssignment_5_1_1_0 extends AssignmentToken  {
	
	public ThreadType_NoFlowsAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getNoFlowsAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_FlowsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadTypeAccess().getNoFlowsNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public ThreadType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_NoFlowsAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ThreadType_Group_6 extends GroupToken {
	
	public ThreadType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ThreadType_ModesKeyword_6_0 extends KeywordToken  {
	
	public ThreadType_ModesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getModesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ThreadType_Alternatives_6_1 extends AlternativesToken {

	public ThreadType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ThreadType_Alternatives_6_1_0 extends AlternativesToken {

	public ThreadType_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedModeAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_OwnedModeTransitionAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ThreadType_OwnedModeAssignment_6_1_0_0 extends AssignmentToken  {
	
	public ThreadType_OwnedModeAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedModeAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedModeModeParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ThreadType_OwnedModeTransitionAssignment_6_1_0_1 extends AssignmentToken  {
	
	public ThreadType_OwnedModeTransitionAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedModeTransitionAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ThreadType_Group_6_1_1 extends GroupToken {
	
	public ThreadType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ThreadType_NoModesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ThreadType_NoModesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getNoModesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_ModesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadTypeAccess().getNoModesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ThreadType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_NoModesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ThreadType_Group_7 extends GroupToken {
	
	public ThreadType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ThreadType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public ThreadType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ThreadType_Alternatives_7_1 extends AlternativesToken {

	public ThreadType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ThreadType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public ThreadType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ThreadType_Group_7_1_1 extends GroupToken {
	
	public ThreadType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ThreadType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public ThreadType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public ThreadType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ThreadType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public ThreadType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ThreadType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ThreadType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ThreadType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ThreadType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ThreadType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ThreadType_EndKeyword_9 extends KeywordToken  {
	
	public ThreadType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadType_Group_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ThreadType_NameAssignment_1(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class ThreadType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public ThreadType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ThreadType_SemicolonKeyword_11 extends KeywordToken  {
	
	public ThreadType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThreadType ****************/


/************ begin Rule SubprogramType ****************
 *
 * SubprogramType returns aadl2::SubprogramType:
 * 	"subprogram" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
 * 	ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedParameter+=Parameter |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "subprogram" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
// ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedParameter+=Parameter |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class SubprogramType_Group extends GroupToken {
	
	public SubprogramType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "subprogram"
protected class SubprogramType_SubprogramKeyword_0 extends KeywordToken  {
	
	public SubprogramType_SubprogramKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSubprogramKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class SubprogramType_NameAssignment_1 extends AssignmentToken  {
	
	public SubprogramType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SubprogramKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SubprogramType_Group_2 extends GroupToken {
	
	public SubprogramType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class SubprogramType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public SubprogramType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SubprogramType_Group_2_1 extends GroupToken {
	
	public SubprogramType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public SubprogramType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public SubprogramType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SubprogramType_Group_2_1_2 extends GroupToken {
	
	public SubprogramType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public SubprogramType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public SubprogramType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public SubprogramType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class SubprogramType_Group_3 extends GroupToken {
	
	public SubprogramType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class SubprogramType_PrototypesKeyword_3_0 extends KeywordToken  {
	
	public SubprogramType_PrototypesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getPrototypesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class SubprogramType_Alternatives_3_1 extends AlternativesToken {

	public SubprogramType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class SubprogramType_Group_3_1_0 extends GroupToken {
	
	public SubprogramType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class SubprogramType_NoPrototypesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public SubprogramType_NoPrototypesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getNoPrototypesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_PrototypesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramTypeAccess().getNoPrototypesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public SubprogramType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_NoPrototypesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class SubprogramType_OwnedPrototypeAssignment_3_1_1 extends AssignmentToken  {
	
	public SubprogramType_OwnedPrototypeAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedPrototypeAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedPrototypePrototypeParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_OwnedPrototypeAssignment_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_PrototypesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" (noFeatures?="none" ";" | (ownedParameter+=Parameter | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))?
protected class SubprogramType_Group_4 extends GroupToken {
	
	public SubprogramType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class SubprogramType_FeaturesKeyword_4_0 extends KeywordToken  {
	
	public SubprogramType_FeaturesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getFeaturesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedParameter+=Parameter | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class SubprogramType_Alternatives_4_1 extends AlternativesToken {

	public SubprogramType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class SubprogramType_Group_4_1_0 extends GroupToken {
	
	public SubprogramType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class SubprogramType_NoFeaturesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public SubprogramType_NoFeaturesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getNoFeaturesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramTypeAccess().getNoFeaturesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public SubprogramType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_NoFeaturesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedParameter+=Parameter | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedDataAccess+=DataAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class SubprogramType_Alternatives_4_1_1 extends AlternativesToken {

	public SubprogramType_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedParameterAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_OwnedEventPortAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramType_OwnedEventDataPortAssignment_4_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramType_OwnedFeatureGroupAssignment_4_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramType_OwnedDataAccessAssignment_4_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramType_OwnedSubprogramAccessAssignment_4_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SubprogramType_OwnedSubprogramGroupAccessAssignment_4_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SubprogramType_OwnedAbstractFeatureAssignment_4_1_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ownedParameter+=Parameter
protected class SubprogramType_OwnedParameterAssignment_4_1_1_0 extends AssignmentToken  {
	
	public SubprogramType_OwnedParameterAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedParameterAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedParameter",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedParameter");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedParameterParameterParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class SubprogramType_OwnedEventPortAssignment_4_1_1_1 extends AssignmentToken  {
	
	public SubprogramType_OwnedEventPortAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedEventPortAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedEventPortEventPortParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class SubprogramType_OwnedEventDataPortAssignment_4_1_1_2 extends AssignmentToken  {
	
	public SubprogramType_OwnedEventDataPortAssignment_4_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedEventDataPortAssignment_4_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_4_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class SubprogramType_OwnedFeatureGroupAssignment_4_1_1_3 extends AssignmentToken  {
	
	public SubprogramType_OwnedFeatureGroupAssignment_4_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedFeatureGroupAssignment_4_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_4_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataAccess+=DataAccess
protected class SubprogramType_OwnedDataAccessAssignment_4_1_1_4 extends AssignmentToken  {
	
	public SubprogramType_OwnedDataAccessAssignment_4_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedDataAccessAssignment_4_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedDataAccessDataAccessParserRuleCall_4_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class SubprogramType_OwnedSubprogramAccessAssignment_4_1_1_5 extends AssignmentToken  {
	
	public SubprogramType_OwnedSubprogramAccessAssignment_4_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedSubprogramAccessAssignment_4_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_4_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class SubprogramType_OwnedSubprogramGroupAccessAssignment_4_1_1_6 extends AssignmentToken  {
	
	public SubprogramType_OwnedSubprogramGroupAccessAssignment_4_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedSubprogramGroupAccessAssignment_4_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_4_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class SubprogramType_OwnedAbstractFeatureAssignment_4_1_1_7 extends AssignmentToken  {
	
	public SubprogramType_OwnedAbstractFeatureAssignment_4_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedAbstractFeatureAssignment_4_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_4_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class SubprogramType_Group_5 extends GroupToken {
	
	public SubprogramType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class SubprogramType_FlowsKeyword_5_0 extends KeywordToken  {
	
	public SubprogramType_FlowsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getFlowsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class SubprogramType_Alternatives_5_1 extends AlternativesToken {

	public SubprogramType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class SubprogramType_OwnedFlowSpecificationAssignment_5_1_0 extends AssignmentToken  {
	
	public SubprogramType_OwnedFlowSpecificationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedFlowSpecificationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_FlowsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class SubprogramType_Group_5_1_1 extends GroupToken {
	
	public SubprogramType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class SubprogramType_NoFlowsAssignment_5_1_1_0 extends AssignmentToken  {
	
	public SubprogramType_NoFlowsAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getNoFlowsAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_FlowsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramTypeAccess().getNoFlowsNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public SubprogramType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_NoFlowsAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class SubprogramType_Group_6 extends GroupToken {
	
	public SubprogramType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class SubprogramType_ModesKeyword_6_0 extends KeywordToken  {
	
	public SubprogramType_ModesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getModesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class SubprogramType_Alternatives_6_1 extends AlternativesToken {

	public SubprogramType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class SubprogramType_Alternatives_6_1_0 extends AlternativesToken {

	public SubprogramType_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedModeAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_OwnedModeTransitionAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class SubprogramType_OwnedModeAssignment_6_1_0_0 extends AssignmentToken  {
	
	public SubprogramType_OwnedModeAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedModeAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedModeModeParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class SubprogramType_OwnedModeTransitionAssignment_6_1_0_1 extends AssignmentToken  {
	
	public SubprogramType_OwnedModeTransitionAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedModeTransitionAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class SubprogramType_Group_6_1_1 extends GroupToken {
	
	public SubprogramType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class SubprogramType_NoModesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public SubprogramType_NoModesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getNoModesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_ModesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramTypeAccess().getNoModesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public SubprogramType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_NoModesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class SubprogramType_Group_7 extends GroupToken {
	
	public SubprogramType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class SubprogramType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public SubprogramType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class SubprogramType_Alternatives_7_1 extends AlternativesToken {

	public SubprogramType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SubprogramType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public SubprogramType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class SubprogramType_Group_7_1_1 extends GroupToken {
	
	public SubprogramType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class SubprogramType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public SubprogramType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public SubprogramType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class SubprogramType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public SubprogramType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SubprogramType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SubprogramType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SubprogramType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SubprogramType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SubprogramType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class SubprogramType_EndKeyword_9 extends KeywordToken  {
	
	public SubprogramType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SubprogramType_Group_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SubprogramType_NameAssignment_1(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class SubprogramType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public SubprogramType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class SubprogramType_SemicolonKeyword_11 extends KeywordToken  {
	
	public SubprogramType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramType ****************/


/************ begin Rule SubprogramGroupType ****************
 *
 * SubprogramGroupType returns aadl2::SubprogramGroupType:
 * 	"subprogram" "group" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
 * 	ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedFeatureGroup+=FeatureGroup | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
 * 	ownedAbstractFeature+=AbstractFeature)+))? ("flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none"
 * 	";"))? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "subprogram" "group" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("prototypes" (noPrototypes?="none" ";" |
// ownedPrototype+=Prototype+))? ("features" (noFeatures?="none" ";" | (ownedSubprogramAccess+=SubprogramAccess |
// ownedFeatureGroup+=FeatureGroup | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))? ("flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none"
// ";"))? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class SubprogramGroupType_Group extends GroupToken {
	
	public SubprogramGroupType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramGroupTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "subprogram"
protected class SubprogramGroupType_SubprogramKeyword_0 extends KeywordToken  {
	
	public SubprogramGroupType_SubprogramKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getSubprogramKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "group"
protected class SubprogramGroupType_GroupKeyword_1 extends KeywordToken  {
	
	public SubprogramGroupType_GroupKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroupKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_SubprogramKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class SubprogramGroupType_NameAssignment_2 extends AssignmentToken  {
	
	public SubprogramGroupType_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_GroupKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramGroupTypeAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramGroupTypeAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SubprogramGroupType_Group_3 extends GroupToken {
	
	public SubprogramGroupType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class SubprogramGroupType_OwnedExtensionAssignment_3_0 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedExtensionAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedExtensionAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SubprogramGroupType_Group_3_1 extends GroupToken {
	
	public SubprogramGroupType_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramGroupType_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public SubprogramGroupType_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SubprogramGroupType_Group_3_1_2 extends GroupToken {
	
	public SubprogramGroupType_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramGroupType_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public SubprogramGroupType_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramGroupType_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public SubprogramGroupType_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class SubprogramGroupType_Group_4 extends GroupToken {
	
	public SubprogramGroupType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class SubprogramGroupType_PrototypesKeyword_4_0 extends KeywordToken  {
	
	public SubprogramGroupType_PrototypesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getPrototypesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class SubprogramGroupType_Alternatives_4_1 extends AlternativesToken {

	public SubprogramGroupType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_OwnedPrototypeAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class SubprogramGroupType_Group_4_1_0 extends GroupToken {
	
	public SubprogramGroupType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class SubprogramGroupType_NoPrototypesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public SubprogramGroupType_NoPrototypesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getNoPrototypesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_PrototypesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupTypeAccess().getNoPrototypesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public SubprogramGroupType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_NoPrototypesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class SubprogramGroupType_OwnedPrototypeAssignment_4_1_1 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedPrototypeAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedPrototypeAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedPrototypePrototypeParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedPrototypeAssignment_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_PrototypesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" (noFeatures?="none" ";" | (ownedSubprogramAccess+=SubprogramAccess | ownedFeatureGroup+=FeatureGroup |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))?
protected class SubprogramGroupType_Group_5 extends GroupToken {
	
	public SubprogramGroupType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class SubprogramGroupType_FeaturesKeyword_5_0 extends KeywordToken  {
	
	public SubprogramGroupType_FeaturesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getFeaturesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedSubprogramAccess+=SubprogramAccess | ownedFeatureGroup+=FeatureGroup |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class SubprogramGroupType_Alternatives_5_1 extends AlternativesToken {

	public SubprogramGroupType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Alternatives_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class SubprogramGroupType_Group_5_1_0 extends GroupToken {
	
	public SubprogramGroupType_Group_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_SemicolonKeyword_5_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class SubprogramGroupType_NoFeaturesAssignment_5_1_0_0 extends AssignmentToken  {
	
	public SubprogramGroupType_NoFeaturesAssignment_5_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getNoFeaturesAssignment_5_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupTypeAccess().getNoFeaturesNoneKeyword_5_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupType_SemicolonKeyword_5_1_0_1 extends KeywordToken  {
	
	public SubprogramGroupType_SemicolonKeyword_5_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getSemicolonKeyword_5_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_NoFeaturesAssignment_5_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedSubprogramAccess+=SubprogramAccess | ownedFeatureGroup+=FeatureGroup |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class SubprogramGroupType_Alternatives_5_1_1 extends AlternativesToken {

	public SubprogramGroupType_Alternatives_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getAlternatives_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedSubprogramAccessAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_OwnedFeatureGroupAssignment_5_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupType_OwnedSubprogramGroupAccessAssignment_5_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupType_OwnedAbstractFeatureAssignment_5_1_1_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedSubprogramAccess+=SubprogramAccess
protected class SubprogramGroupType_OwnedSubprogramAccessAssignment_5_1_1_0 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedSubprogramAccessAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedSubprogramAccessAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_5_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class SubprogramGroupType_OwnedFeatureGroupAssignment_5_1_1_1 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedFeatureGroupAssignment_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedFeatureGroupAssignment_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class SubprogramGroupType_OwnedSubprogramGroupAccessAssignment_5_1_1_2 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedSubprogramGroupAccessAssignment_5_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedSubprogramGroupAccessAssignment_5_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_5_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class SubprogramGroupType_OwnedAbstractFeatureAssignment_5_1_1_3 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedAbstractFeatureAssignment_5_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedAbstractFeatureAssignment_5_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_5_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class SubprogramGroupType_Group_6 extends GroupToken {
	
	public SubprogramGroupType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class SubprogramGroupType_FlowsKeyword_6_0 extends KeywordToken  {
	
	public SubprogramGroupType_FlowsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getFlowsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class SubprogramGroupType_Alternatives_6_1 extends AlternativesToken {

	public SubprogramGroupType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedFlowSpecificationAssignment_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class SubprogramGroupType_OwnedFlowSpecificationAssignment_6_1_0 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedFlowSpecificationAssignment_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedFlowSpecificationAssignment_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedFlowSpecificationAssignment_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_FlowsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class SubprogramGroupType_Group_6_1_1 extends GroupToken {
	
	public SubprogramGroupType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class SubprogramGroupType_NoFlowsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public SubprogramGroupType_NoFlowsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getNoFlowsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_FlowsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupTypeAccess().getNoFlowsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public SubprogramGroupType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_NoFlowsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class SubprogramGroupType_Group_7 extends GroupToken {
	
	public SubprogramGroupType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class SubprogramGroupType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public SubprogramGroupType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class SubprogramGroupType_Alternatives_7_1 extends AlternativesToken {

	public SubprogramGroupType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SubprogramGroupType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class SubprogramGroupType_Group_7_1_1 extends GroupToken {
	
	public SubprogramGroupType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class SubprogramGroupType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public SubprogramGroupType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public SubprogramGroupType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class SubprogramGroupType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public SubprogramGroupType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SubprogramGroupType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SubprogramGroupType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SubprogramGroupType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SubprogramGroupType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class SubprogramGroupType_EndKeyword_9 extends KeywordToken  {
	
	public SubprogramGroupType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramGroupType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramGroupType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SubprogramGroupType_NameAssignment_2(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class SubprogramGroupType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public SubprogramGroupType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class SubprogramGroupType_SemicolonKeyword_11 extends KeywordToken  {
	
	public SubprogramGroupType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramGroupType ****************/


/************ begin Rule ProcessorType ****************
 *
 * ProcessorType returns aadl2::ProcessorType:
 * 	"processor" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "processor" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess
// | ownedAbstractFeature+=AbstractFeature)+))? ("flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none"
// ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class ProcessorType_Group extends GroupToken {
	
	public ProcessorType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_SemicolonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessorTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "processor"
protected class ProcessorType_ProcessorKeyword_0 extends KeywordToken  {
	
	public ProcessorType_ProcessorKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getProcessorKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ProcessorType_NameAssignment_1 extends AssignmentToken  {
	
	public ProcessorType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_ProcessorKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessorTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getProcessorTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ProcessorType_Group_2 extends GroupToken {
	
	public ProcessorType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class ProcessorType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public ProcessorType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ProcessorType_Group_2_1 extends GroupToken {
	
	public ProcessorType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessorType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public ProcessorType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessorType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public ProcessorType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ProcessorType_Group_2_1_2 extends GroupToken {
	
	public ProcessorType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessorType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public ProcessorType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessorType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public ProcessorType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessorType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public ProcessorType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))?
protected class ProcessorType_Group_3 extends GroupToken {
	
	public ProcessorType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class ProcessorType_FeaturesKeyword_3_0 extends KeywordToken  {
	
	public ProcessorType_FeaturesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getFeaturesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ProcessorType_Alternatives_3_1 extends AlternativesToken {

	public ProcessorType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class ProcessorType_Group_3_1_0 extends GroupToken {
	
	public ProcessorType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class ProcessorType_NoFeaturesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public ProcessorType_NoFeaturesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getNoFeaturesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorTypeAccess().getNoFeaturesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public ProcessorType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_NoFeaturesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class ProcessorType_Alternatives_3_1_1 extends AlternativesToken {

	public ProcessorType_Alternatives_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getAlternatives_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedDataPortAssignment_3_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_OwnedEventPortAssignment_3_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorType_OwnedEventDataPortAssignment_3_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorType_OwnedFeatureGroupAssignment_3_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorType_OwnedBusAccessAssignment_3_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessorType_OwnedSubprogramAccessAssignment_3_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ProcessorType_OwnedSubprogramGroupAccessAssignment_3_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ProcessorType_OwnedAbstractFeatureAssignment_3_1_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class ProcessorType_OwnedDataPortAssignment_3_1_1_0 extends AssignmentToken  {
	
	public ProcessorType_OwnedDataPortAssignment_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedDataPortAssignment_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedDataPortDataPortParserRuleCall_3_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class ProcessorType_OwnedEventPortAssignment_3_1_1_1 extends AssignmentToken  {
	
	public ProcessorType_OwnedEventPortAssignment_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedEventPortAssignment_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedEventPortEventPortParserRuleCall_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class ProcessorType_OwnedEventDataPortAssignment_3_1_1_2 extends AssignmentToken  {
	
	public ProcessorType_OwnedEventDataPortAssignment_3_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedEventDataPortAssignment_3_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_3_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class ProcessorType_OwnedFeatureGroupAssignment_3_1_1_3 extends AssignmentToken  {
	
	public ProcessorType_OwnedFeatureGroupAssignment_3_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedFeatureGroupAssignment_3_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_3_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusAccess+=BusAccess
protected class ProcessorType_OwnedBusAccessAssignment_3_1_1_4 extends AssignmentToken  {
	
	public ProcessorType_OwnedBusAccessAssignment_3_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedBusAccessAssignment_3_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedBusAccessBusAccessParserRuleCall_3_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class ProcessorType_OwnedSubprogramAccessAssignment_3_1_1_5 extends AssignmentToken  {
	
	public ProcessorType_OwnedSubprogramAccessAssignment_3_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedSubprogramAccessAssignment_3_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_3_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class ProcessorType_OwnedSubprogramGroupAccessAssignment_3_1_1_6 extends AssignmentToken  {
	
	public ProcessorType_OwnedSubprogramGroupAccessAssignment_3_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedSubprogramGroupAccessAssignment_3_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_3_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class ProcessorType_OwnedAbstractFeatureAssignment_3_1_1_7 extends AssignmentToken  {
	
	public ProcessorType_OwnedAbstractFeatureAssignment_3_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedAbstractFeatureAssignment_3_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_3_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class ProcessorType_Group_4 extends GroupToken {
	
	public ProcessorType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ProcessorType_FlowsKeyword_4_0 extends KeywordToken  {
	
	public ProcessorType_FlowsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getFlowsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class ProcessorType_Alternatives_4_1 extends AlternativesToken {

	public ProcessorType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedFlowSpecificationAssignment_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class ProcessorType_OwnedFlowSpecificationAssignment_4_1_0 extends AssignmentToken  {
	
	public ProcessorType_OwnedFlowSpecificationAssignment_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedFlowSpecificationAssignment_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_OwnedFlowSpecificationAssignment_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_FlowsKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class ProcessorType_Group_4_1_1 extends GroupToken {
	
	public ProcessorType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ProcessorType_NoFlowsAssignment_4_1_1_0 extends AssignmentToken  {
	
	public ProcessorType_NoFlowsAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getNoFlowsAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_FlowsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorTypeAccess().getNoFlowsNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public ProcessorType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_NoFlowsAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ProcessorType_Group_5 extends GroupToken {
	
	public ProcessorType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ProcessorType_ModesKeyword_5_0 extends KeywordToken  {
	
	public ProcessorType_ModesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getModesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ProcessorType_Alternatives_5_1 extends AlternativesToken {

	public ProcessorType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Alternatives_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ProcessorType_Alternatives_5_1_0 extends AlternativesToken {

	public ProcessorType_Alternatives_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getAlternatives_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedModeAssignment_5_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_OwnedModeTransitionAssignment_5_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ProcessorType_OwnedModeAssignment_5_1_0_0 extends AssignmentToken  {
	
	public ProcessorType_OwnedModeAssignment_5_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedModeAssignment_5_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedModeModeParserRuleCall_5_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_ModesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ProcessorType_OwnedModeTransitionAssignment_5_1_0_1 extends AssignmentToken  {
	
	public ProcessorType_OwnedModeTransitionAssignment_5_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedModeTransitionAssignment_5_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_5_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_Alternatives_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_ModesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ProcessorType_Group_5_1_1 extends GroupToken {
	
	public ProcessorType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ProcessorType_NoModesAssignment_5_1_1_0 extends AssignmentToken  {
	
	public ProcessorType_NoModesAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getNoModesAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_ModesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorTypeAccess().getNoModesNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public ProcessorType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_NoModesAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ProcessorType_Group_6 extends GroupToken {
	
	public ProcessorType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ProcessorType_PropertiesKeyword_6_0 extends KeywordToken  {
	
	public ProcessorType_PropertiesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getPropertiesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ProcessorType_Alternatives_6_1 extends AlternativesToken {

	public ProcessorType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedPropertyAssociationAssignment_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ProcessorType_OwnedPropertyAssociationAssignment_6_1_0 extends AssignmentToken  {
	
	public ProcessorType_OwnedPropertyAssociationAssignment_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedPropertyAssociationAssignment_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_OwnedPropertyAssociationAssignment_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_PropertiesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ProcessorType_Group_6_1_1 extends GroupToken {
	
	public ProcessorType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ProcessorType_NoPropertiesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ProcessorType_NoPropertiesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getNoPropertiesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_PropertiesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorTypeAccess().getNoPropertiesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ProcessorType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_NoPropertiesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ProcessorType_OwnedAnnexSubclauseAssignment_7 extends AssignmentToken  {
	
	public ProcessorType_OwnedAnnexSubclauseAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getOwnedAnnexSubclauseAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorType_OwnedAnnexSubclauseAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ProcessorType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ProcessorType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ProcessorType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ProcessorType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ProcessorType_EndKeyword_8 extends KeywordToken  {
	
	public ProcessorType_EndKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getEndKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_OwnedAnnexSubclauseAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorType_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorType_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorType_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorType_Group_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessorType_Group_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ProcessorType_NameAssignment_1(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class ProcessorType_IDTerminalRuleCall_9 extends UnassignedTextToken {

	public ProcessorType_IDTerminalRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getIDTerminalRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_EndKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ProcessorType_SemicolonKeyword_10 extends KeywordToken  {
	
	public ProcessorType_SemicolonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorTypeAccess().getSemicolonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorType_IDTerminalRuleCall_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProcessorType ****************/


/************ begin Rule DeviceType ****************
 *
 * DeviceType returns aadl2::DeviceType:
 * 	"device" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "device" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess
// | ownedAbstractFeature+=AbstractFeature)+))? ("flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none"
// ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class DeviceType_Group extends GroupToken {
	
	public DeviceType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_SemicolonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDeviceTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "device"
protected class DeviceType_DeviceKeyword_0 extends KeywordToken  {
	
	public DeviceType_DeviceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getDeviceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class DeviceType_NameAssignment_1 extends AssignmentToken  {
	
	public DeviceType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_DeviceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDeviceTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDeviceTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class DeviceType_Group_2 extends GroupToken {
	
	public DeviceType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class DeviceType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public DeviceType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class DeviceType_Group_2_1 extends GroupToken {
	
	public DeviceType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DeviceType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public DeviceType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DeviceType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public DeviceType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class DeviceType_Group_2_1_2 extends GroupToken {
	
	public DeviceType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DeviceType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public DeviceType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DeviceType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public DeviceType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DeviceType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public DeviceType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedBusAccess+=BusAccess |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))?
protected class DeviceType_Group_3 extends GroupToken {
	
	public DeviceType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class DeviceType_FeaturesKeyword_3_0 extends KeywordToken  {
	
	public DeviceType_FeaturesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getFeaturesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class DeviceType_Alternatives_3_1 extends AlternativesToken {

	public DeviceType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class DeviceType_Group_3_1_0 extends GroupToken {
	
	public DeviceType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class DeviceType_NoFeaturesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public DeviceType_NoFeaturesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getNoFeaturesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceTypeAccess().getNoFeaturesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public DeviceType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_NoFeaturesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedBusAccess+=BusAccess | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class DeviceType_Alternatives_3_1_1 extends AlternativesToken {

	public DeviceType_Alternatives_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getAlternatives_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedDataPortAssignment_3_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_OwnedEventPortAssignment_3_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceType_OwnedEventDataPortAssignment_3_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceType_OwnedFeatureGroupAssignment_3_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceType_OwnedBusAccessAssignment_3_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DeviceType_OwnedSubprogramAccessAssignment_3_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new DeviceType_OwnedSubprogramGroupAccessAssignment_3_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new DeviceType_OwnedAbstractFeatureAssignment_3_1_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class DeviceType_OwnedDataPortAssignment_3_1_1_0 extends AssignmentToken  {
	
	public DeviceType_OwnedDataPortAssignment_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedDataPortAssignment_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedDataPortDataPortParserRuleCall_3_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class DeviceType_OwnedEventPortAssignment_3_1_1_1 extends AssignmentToken  {
	
	public DeviceType_OwnedEventPortAssignment_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedEventPortAssignment_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedEventPortEventPortParserRuleCall_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class DeviceType_OwnedEventDataPortAssignment_3_1_1_2 extends AssignmentToken  {
	
	public DeviceType_OwnedEventDataPortAssignment_3_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedEventDataPortAssignment_3_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_3_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class DeviceType_OwnedFeatureGroupAssignment_3_1_1_3 extends AssignmentToken  {
	
	public DeviceType_OwnedFeatureGroupAssignment_3_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedFeatureGroupAssignment_3_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_3_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusAccess+=BusAccess
protected class DeviceType_OwnedBusAccessAssignment_3_1_1_4 extends AssignmentToken  {
	
	public DeviceType_OwnedBusAccessAssignment_3_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedBusAccessAssignment_3_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedBusAccessBusAccessParserRuleCall_3_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class DeviceType_OwnedSubprogramAccessAssignment_3_1_1_5 extends AssignmentToken  {
	
	public DeviceType_OwnedSubprogramAccessAssignment_3_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedSubprogramAccessAssignment_3_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_3_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class DeviceType_OwnedSubprogramGroupAccessAssignment_3_1_1_6 extends AssignmentToken  {
	
	public DeviceType_OwnedSubprogramGroupAccessAssignment_3_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedSubprogramGroupAccessAssignment_3_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_3_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class DeviceType_OwnedAbstractFeatureAssignment_3_1_1_7 extends AssignmentToken  {
	
	public DeviceType_OwnedAbstractFeatureAssignment_3_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedAbstractFeatureAssignment_3_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_3_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class DeviceType_Group_4 extends GroupToken {
	
	public DeviceType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class DeviceType_FlowsKeyword_4_0 extends KeywordToken  {
	
	public DeviceType_FlowsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getFlowsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class DeviceType_Alternatives_4_1 extends AlternativesToken {

	public DeviceType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedFlowSpecificationAssignment_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class DeviceType_OwnedFlowSpecificationAssignment_4_1_0 extends AssignmentToken  {
	
	public DeviceType_OwnedFlowSpecificationAssignment_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedFlowSpecificationAssignment_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_OwnedFlowSpecificationAssignment_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_FlowsKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class DeviceType_Group_4_1_1 extends GroupToken {
	
	public DeviceType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class DeviceType_NoFlowsAssignment_4_1_1_0 extends AssignmentToken  {
	
	public DeviceType_NoFlowsAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getNoFlowsAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_FlowsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceTypeAccess().getNoFlowsNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public DeviceType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_NoFlowsAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class DeviceType_Group_5 extends GroupToken {
	
	public DeviceType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class DeviceType_ModesKeyword_5_0 extends KeywordToken  {
	
	public DeviceType_ModesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getModesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class DeviceType_Alternatives_5_1 extends AlternativesToken {

	public DeviceType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Alternatives_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class DeviceType_Alternatives_5_1_0 extends AlternativesToken {

	public DeviceType_Alternatives_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getAlternatives_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedModeAssignment_5_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_OwnedModeTransitionAssignment_5_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class DeviceType_OwnedModeAssignment_5_1_0_0 extends AssignmentToken  {
	
	public DeviceType_OwnedModeAssignment_5_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedModeAssignment_5_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedModeModeParserRuleCall_5_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_ModesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class DeviceType_OwnedModeTransitionAssignment_5_1_0_1 extends AssignmentToken  {
	
	public DeviceType_OwnedModeTransitionAssignment_5_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedModeTransitionAssignment_5_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_5_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_Alternatives_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_ModesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class DeviceType_Group_5_1_1 extends GroupToken {
	
	public DeviceType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class DeviceType_NoModesAssignment_5_1_1_0 extends AssignmentToken  {
	
	public DeviceType_NoModesAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getNoModesAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_ModesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceTypeAccess().getNoModesNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public DeviceType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_NoModesAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class DeviceType_Group_6 extends GroupToken {
	
	public DeviceType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class DeviceType_PropertiesKeyword_6_0 extends KeywordToken  {
	
	public DeviceType_PropertiesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getPropertiesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceType_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class DeviceType_Alternatives_6_1 extends AlternativesToken {

	public DeviceType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedPropertyAssociationAssignment_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class DeviceType_OwnedPropertyAssociationAssignment_6_1_0 extends AssignmentToken  {
	
	public DeviceType_OwnedPropertyAssociationAssignment_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedPropertyAssociationAssignment_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_OwnedPropertyAssociationAssignment_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_PropertiesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class DeviceType_Group_6_1_1 extends GroupToken {
	
	public DeviceType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class DeviceType_NoPropertiesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public DeviceType_NoPropertiesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getNoPropertiesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_PropertiesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceTypeAccess().getNoPropertiesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public DeviceType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_NoPropertiesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class DeviceType_OwnedAnnexSubclauseAssignment_7 extends AssignmentToken  {
	
	public DeviceType_OwnedAnnexSubclauseAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getOwnedAnnexSubclauseAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceType_OwnedAnnexSubclauseAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DeviceType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DeviceType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new DeviceType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new DeviceType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class DeviceType_EndKeyword_8 extends KeywordToken  {
	
	public DeviceType_EndKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getEndKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_OwnedAnnexSubclauseAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceType_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceType_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceType_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceType_Group_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DeviceType_Group_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new DeviceType_NameAssignment_1(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class DeviceType_IDTerminalRuleCall_9 extends UnassignedTextToken {

	public DeviceType_IDTerminalRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getIDTerminalRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_EndKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class DeviceType_SemicolonKeyword_10 extends KeywordToken  {
	
	public DeviceType_SemicolonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceTypeAccess().getSemicolonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceType_IDTerminalRuleCall_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DeviceType ****************/


/************ begin Rule MemoryType ****************
 *
 * MemoryType returns aadl2::MemoryType:
 * 	"memory" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" |
 * 	(ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
 * 	| ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "memory" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" |
// (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class MemoryType_Group extends GroupToken {
	
	public MemoryType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMemoryTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "memory"
protected class MemoryType_MemoryKeyword_0 extends KeywordToken  {
	
	public MemoryType_MemoryKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getMemoryKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class MemoryType_NameAssignment_1 extends AssignmentToken  {
	
	public MemoryType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_MemoryKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMemoryTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMemoryTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class MemoryType_Group_2 extends GroupToken {
	
	public MemoryType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class MemoryType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public MemoryType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class MemoryType_Group_2_1 extends GroupToken {
	
	public MemoryType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class MemoryType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public MemoryType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class MemoryType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public MemoryType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class MemoryType_Group_2_1_2 extends GroupToken {
	
	public MemoryType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MemoryType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public MemoryType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class MemoryType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public MemoryType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class MemoryType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public MemoryType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "features" (noFeatures?="none" ";" | (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+))?
protected class MemoryType_Group_3 extends GroupToken {
	
	public MemoryType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class MemoryType_FeaturesKeyword_3_0 extends KeywordToken  {
	
	public MemoryType_FeaturesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getFeaturesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+
protected class MemoryType_Alternatives_3_1 extends AlternativesToken {

	public MemoryType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_Alternatives_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class MemoryType_Group_3_1_0 extends GroupToken {
	
	public MemoryType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class MemoryType_NoFeaturesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public MemoryType_NoFeaturesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getNoFeaturesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_FeaturesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryTypeAccess().getNoFeaturesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public MemoryType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_NoFeaturesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+
protected class MemoryType_Alternatives_3_1_1 extends AlternativesToken {

	public MemoryType_Alternatives_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getAlternatives_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_OwnedFeatureGroupAssignment_3_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_OwnedBusAccessAssignment_3_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryType_OwnedAbstractFeatureAssignment_3_1_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedFeatureGroup+=FeatureGroup
protected class MemoryType_OwnedFeatureGroupAssignment_3_1_1_0 extends AssignmentToken  {
	
	public MemoryType_OwnedFeatureGroupAssignment_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedFeatureGroupAssignment_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_3_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusAccess+=BusAccess
protected class MemoryType_OwnedBusAccessAssignment_3_1_1_1 extends AssignmentToken  {
	
	public MemoryType_OwnedBusAccessAssignment_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedBusAccessAssignment_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedBusAccessBusAccessParserRuleCall_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class MemoryType_OwnedAbstractFeatureAssignment_3_1_1_2 extends AssignmentToken  {
	
	public MemoryType_OwnedAbstractFeatureAssignment_3_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedAbstractFeatureAssignment_3_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_3_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class MemoryType_Group_4 extends GroupToken {
	
	public MemoryType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class MemoryType_ModesKeyword_4_0 extends KeywordToken  {
	
	public MemoryType_ModesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getModesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class MemoryType_Alternatives_4_1 extends AlternativesToken {

	public MemoryType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Alternatives_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class MemoryType_Alternatives_4_1_0 extends AlternativesToken {

	public MemoryType_Alternatives_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getAlternatives_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_OwnedModeAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_OwnedModeTransitionAssignment_4_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class MemoryType_OwnedModeAssignment_4_1_0_0 extends AssignmentToken  {
	
	public MemoryType_OwnedModeAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedModeAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedModeModeParserRuleCall_4_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_ModesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class MemoryType_OwnedModeTransitionAssignment_4_1_0_1 extends AssignmentToken  {
	
	public MemoryType_OwnedModeTransitionAssignment_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedModeTransitionAssignment_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_4_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_ModesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class MemoryType_Group_4_1_1 extends GroupToken {
	
	public MemoryType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class MemoryType_NoModesAssignment_4_1_1_0 extends AssignmentToken  {
	
	public MemoryType_NoModesAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getNoModesAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_ModesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryTypeAccess().getNoModesNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public MemoryType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_NoModesAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class MemoryType_Group_5 extends GroupToken {
	
	public MemoryType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class MemoryType_PropertiesKeyword_5_0 extends KeywordToken  {
	
	public MemoryType_PropertiesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getPropertiesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemoryType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class MemoryType_Alternatives_5_1 extends AlternativesToken {

	public MemoryType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class MemoryType_OwnedPropertyAssociationAssignment_5_1_0 extends AssignmentToken  {
	
	public MemoryType_OwnedPropertyAssociationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedPropertyAssociationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_PropertiesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class MemoryType_Group_5_1_1 extends GroupToken {
	
	public MemoryType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class MemoryType_NoPropertiesAssignment_5_1_1_0 extends AssignmentToken  {
	
	public MemoryType_NoPropertiesAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getNoPropertiesAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_PropertiesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryTypeAccess().getNoPropertiesNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public MemoryType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_NoPropertiesAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class MemoryType_OwnedAnnexSubclauseAssignment_6 extends AssignmentToken  {
	
	public MemoryType_OwnedAnnexSubclauseAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getOwnedAnnexSubclauseAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new MemoryType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new MemoryType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new MemoryType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new MemoryType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class MemoryType_EndKeyword_7 extends KeywordToken  {
	
	public MemoryType_EndKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getEndKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemoryType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MemoryType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MemoryType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ID
protected class MemoryType_IDTerminalRuleCall_8 extends UnassignedTextToken {

	public MemoryType_IDTerminalRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getIDTerminalRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_EndKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class MemoryType_SemicolonKeyword_9 extends KeywordToken  {
	
	public MemoryType_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryTypeAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryType_IDTerminalRuleCall_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MemoryType ****************/


/************ begin Rule BusType ****************
 *
 * BusType returns aadl2::BusType:
 * 	"bus" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" |
 * 	(ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
 * 	| ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "bus" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" |
// (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class BusType_Group extends GroupToken {
	
	public BusType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBusTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bus"
protected class BusType_BusKeyword_0 extends KeywordToken  {
	
	public BusType_BusKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getBusKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class BusType_NameAssignment_1 extends AssignmentToken  {
	
	public BusType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_BusKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBusTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBusTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class BusType_Group_2 extends GroupToken {
	
	public BusType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class BusType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public BusType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class BusType_Group_2_1 extends GroupToken {
	
	public BusType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class BusType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public BusType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class BusType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public BusType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class BusType_Group_2_1_2 extends GroupToken {
	
	public BusType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class BusType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public BusType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class BusType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public BusType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class BusType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public BusType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "features" (noFeatures?="none" ";" | (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+))?
protected class BusType_Group_3 extends GroupToken {
	
	public BusType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class BusType_FeaturesKeyword_3_0 extends KeywordToken  {
	
	public BusType_FeaturesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getFeaturesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+
protected class BusType_Alternatives_3_1 extends AlternativesToken {

	public BusType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_Alternatives_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class BusType_Group_3_1_0 extends GroupToken {
	
	public BusType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class BusType_NoFeaturesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public BusType_NoFeaturesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getNoFeaturesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_FeaturesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusTypeAccess().getNoFeaturesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class BusType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public BusType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_NoFeaturesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedFeatureGroup+=FeatureGroup // to trigger mode transitions: ownedDataPort+=DataPort| ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort 
// | ownedBusAccess+=BusAccess | ownedAbstractFeature+=AbstractFeature)+
protected class BusType_Alternatives_3_1_1 extends AlternativesToken {

	public BusType_Alternatives_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getAlternatives_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_OwnedFeatureGroupAssignment_3_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_OwnedBusAccessAssignment_3_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusType_OwnedAbstractFeatureAssignment_3_1_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedFeatureGroup+=FeatureGroup
protected class BusType_OwnedFeatureGroupAssignment_3_1_1_0 extends AssignmentToken  {
	
	public BusType_OwnedFeatureGroupAssignment_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedFeatureGroupAssignment_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_3_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusAccess+=BusAccess
protected class BusType_OwnedBusAccessAssignment_3_1_1_1 extends AssignmentToken  {
	
	public BusType_OwnedBusAccessAssignment_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedBusAccessAssignment_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedBusAccessBusAccessParserRuleCall_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class BusType_OwnedAbstractFeatureAssignment_3_1_1_2 extends AssignmentToken  {
	
	public BusType_OwnedAbstractFeatureAssignment_3_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedAbstractFeatureAssignment_3_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_3_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class BusType_Group_4 extends GroupToken {
	
	public BusType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class BusType_ModesKeyword_4_0 extends KeywordToken  {
	
	public BusType_ModesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getModesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class BusType_Alternatives_4_1 extends AlternativesToken {

	public BusType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Alternatives_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class BusType_Alternatives_4_1_0 extends AlternativesToken {

	public BusType_Alternatives_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getAlternatives_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_OwnedModeAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_OwnedModeTransitionAssignment_4_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class BusType_OwnedModeAssignment_4_1_0_0 extends AssignmentToken  {
	
	public BusType_OwnedModeAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedModeAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedModeModeParserRuleCall_4_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_ModesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class BusType_OwnedModeTransitionAssignment_4_1_0_1 extends AssignmentToken  {
	
	public BusType_OwnedModeTransitionAssignment_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedModeTransitionAssignment_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_4_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_ModesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class BusType_Group_4_1_1 extends GroupToken {
	
	public BusType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class BusType_NoModesAssignment_4_1_1_0 extends AssignmentToken  {
	
	public BusType_NoModesAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getNoModesAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_ModesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusTypeAccess().getNoModesNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class BusType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public BusType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_NoModesAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class BusType_Group_5 extends GroupToken {
	
	public BusType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class BusType_PropertiesKeyword_5_0 extends KeywordToken  {
	
	public BusType_PropertiesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getPropertiesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class BusType_Alternatives_5_1 extends AlternativesToken {

	public BusType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class BusType_OwnedPropertyAssociationAssignment_5_1_0 extends AssignmentToken  {
	
	public BusType_OwnedPropertyAssociationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedPropertyAssociationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_PropertiesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class BusType_Group_5_1_1 extends GroupToken {
	
	public BusType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class BusType_NoPropertiesAssignment_5_1_1_0 extends AssignmentToken  {
	
	public BusType_NoPropertiesAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getNoPropertiesAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_PropertiesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusTypeAccess().getNoPropertiesNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class BusType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public BusType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_NoPropertiesAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class BusType_OwnedAnnexSubclauseAssignment_6 extends AssignmentToken  {
	
	public BusType_OwnedAnnexSubclauseAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getOwnedAnnexSubclauseAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new BusType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new BusType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new BusType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new BusType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class BusType_EndKeyword_7 extends KeywordToken  {
	
	public BusType_EndKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getEndKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new BusType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new BusType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ID
protected class BusType_IDTerminalRuleCall_8 extends UnassignedTextToken {

	public BusType_IDTerminalRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getIDTerminalRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_EndKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class BusType_SemicolonKeyword_9 extends KeywordToken  {
	
	public BusType_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusTypeAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusType_IDTerminalRuleCall_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule BusType ****************/


/************ begin Rule VirtualBusType ****************
 *
 * VirtualBusType returns aadl2::VirtualBusType:
 * 	"virtual" "bus" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "virtual" "bus" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class VirtualBusType_Group extends GroupToken {
	
	public VirtualBusType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVirtualBusTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "virtual"
protected class VirtualBusType_VirtualKeyword_0 extends KeywordToken  {
	
	public VirtualBusType_VirtualKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getVirtualKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "bus"
protected class VirtualBusType_BusKeyword_1 extends KeywordToken  {
	
	public VirtualBusType_BusKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getBusKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_VirtualKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class VirtualBusType_NameAssignment_2 extends AssignmentToken  {
	
	public VirtualBusType_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_BusKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVirtualBusTypeAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVirtualBusTypeAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class VirtualBusType_Group_3 extends GroupToken {
	
	public VirtualBusType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class VirtualBusType_OwnedExtensionAssignment_3_0 extends AssignmentToken  {
	
	public VirtualBusType_OwnedExtensionAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedExtensionAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class VirtualBusType_Group_3_1 extends GroupToken {
	
	public VirtualBusType_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualBusType_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public VirtualBusType_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualBusType_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public VirtualBusType_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class VirtualBusType_Group_3_1_2 extends GroupToken {
	
	public VirtualBusType_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualBusType_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public VirtualBusType_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualBusType_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public VirtualBusType_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualBusType_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public VirtualBusType_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class VirtualBusType_Group_4 extends GroupToken {
	
	public VirtualBusType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class VirtualBusType_ModesKeyword_4_0 extends KeywordToken  {
	
	public VirtualBusType_ModesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getModesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class VirtualBusType_Alternatives_4_1 extends AlternativesToken {

	public VirtualBusType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Alternatives_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class VirtualBusType_Alternatives_4_1_0 extends AlternativesToken {

	public VirtualBusType_Alternatives_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getAlternatives_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_OwnedModeAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_OwnedModeTransitionAssignment_4_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class VirtualBusType_OwnedModeAssignment_4_1_0_0 extends AssignmentToken  {
	
	public VirtualBusType_OwnedModeAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedModeAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedModeModeParserRuleCall_4_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusType_ModesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class VirtualBusType_OwnedModeTransitionAssignment_4_1_0_1 extends AssignmentToken  {
	
	public VirtualBusType_OwnedModeTransitionAssignment_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedModeTransitionAssignment_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_4_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_Alternatives_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusType_ModesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class VirtualBusType_Group_4_1_1 extends GroupToken {
	
	public VirtualBusType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class VirtualBusType_NoModesAssignment_4_1_1_0 extends AssignmentToken  {
	
	public VirtualBusType_NoModesAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getNoModesAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_ModesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualBusTypeAccess().getNoModesNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualBusType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public VirtualBusType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_NoModesAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class VirtualBusType_Group_5 extends GroupToken {
	
	public VirtualBusType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class VirtualBusType_PropertiesKeyword_5_0 extends KeywordToken  {
	
	public VirtualBusType_PropertiesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getPropertiesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusType_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class VirtualBusType_Alternatives_5_1 extends AlternativesToken {

	public VirtualBusType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class VirtualBusType_OwnedPropertyAssociationAssignment_5_1_0 extends AssignmentToken  {
	
	public VirtualBusType_OwnedPropertyAssociationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedPropertyAssociationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusType_PropertiesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class VirtualBusType_Group_5_1_1 extends GroupToken {
	
	public VirtualBusType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class VirtualBusType_NoPropertiesAssignment_5_1_1_0 extends AssignmentToken  {
	
	public VirtualBusType_NoPropertiesAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getNoPropertiesAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_PropertiesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualBusTypeAccess().getNoPropertiesNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualBusType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public VirtualBusType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_NoPropertiesAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class VirtualBusType_OwnedAnnexSubclauseAssignment_6 extends AssignmentToken  {
	
	public VirtualBusType_OwnedAnnexSubclauseAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getOwnedAnnexSubclauseAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new VirtualBusType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new VirtualBusType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new VirtualBusType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class VirtualBusType_EndKeyword_7 extends KeywordToken  {
	
	public VirtualBusType_EndKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getEndKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualBusType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualBusType_NameAssignment_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ID
protected class VirtualBusType_IDTerminalRuleCall_8 extends UnassignedTextToken {

	public VirtualBusType_IDTerminalRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getIDTerminalRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_EndKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class VirtualBusType_SemicolonKeyword_9 extends KeywordToken  {
	
	public VirtualBusType_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusTypeAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusType_IDTerminalRuleCall_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule VirtualBusType ****************/


/************ begin Rule VirtualProcessorType ****************
 *
 * VirtualProcessorType returns aadl2::VirtualProcessorType:
 * 	"virtual" "processor" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
 * 	ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
 * 	ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
 * 	ownedAbstractFeature+=AbstractFeature)+))? ("flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none"
 * 	";"))? //	(=> requiresModes?='requires' 'modes'
 * 	//	((ownedMode+=Mode)+))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "virtual" "processor" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort |
// ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup |
// ownedSubprogramAccess+=SubprogramAccess | ownedSubprogramGroupAccess+=SubprogramGroupAccess |
// ownedAbstractFeature+=AbstractFeature)+))? ("flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none"
// ";"))? //	(=> requiresModes?='requires' 'modes'
// //	((ownedMode+=Mode)+))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class VirtualProcessorType_Group extends GroupToken {
	
	public VirtualProcessorType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVirtualProcessorTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "virtual"
protected class VirtualProcessorType_VirtualKeyword_0 extends KeywordToken  {
	
	public VirtualProcessorType_VirtualKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getVirtualKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "processor"
protected class VirtualProcessorType_ProcessorKeyword_1 extends KeywordToken  {
	
	public VirtualProcessorType_ProcessorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getProcessorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_VirtualKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class VirtualProcessorType_NameAssignment_2 extends AssignmentToken  {
	
	public VirtualProcessorType_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_ProcessorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVirtualProcessorTypeAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVirtualProcessorTypeAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class VirtualProcessorType_Group_3 extends GroupToken {
	
	public VirtualProcessorType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class VirtualProcessorType_OwnedExtensionAssignment_3_0 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedExtensionAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedExtensionAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class VirtualProcessorType_Group_3_1 extends GroupToken {
	
	public VirtualProcessorType_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualProcessorType_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public VirtualProcessorType_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedExtensionAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class VirtualProcessorType_Group_3_1_2 extends GroupToken {
	
	public VirtualProcessorType_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualProcessorType_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public VirtualProcessorType_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualProcessorType_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public VirtualProcessorType_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "features" (noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort |
// ownedEventDataPort+=EventDataPort | ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))?
protected class VirtualProcessorType_Group_4 extends GroupToken {
	
	public VirtualProcessorType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class VirtualProcessorType_FeaturesKeyword_4_0 extends KeywordToken  {
	
	public VirtualProcessorType_FeaturesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getFeaturesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class VirtualProcessorType_Alternatives_4_1 extends AlternativesToken {

	public VirtualProcessorType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class VirtualProcessorType_Group_4_1_0 extends GroupToken {
	
	public VirtualProcessorType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class VirtualProcessorType_NoFeaturesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public VirtualProcessorType_NoFeaturesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getNoFeaturesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorTypeAccess().getNoFeaturesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public VirtualProcessorType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_NoFeaturesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort |
// ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class VirtualProcessorType_Alternatives_4_1_1 extends AlternativesToken {

	public VirtualProcessorType_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedDataPortAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_OwnedEventPortAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorType_OwnedEventDataPortAssignment_4_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorType_OwnedFeatureGroupAssignment_4_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualProcessorType_OwnedSubprogramAccessAssignment_4_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new VirtualProcessorType_OwnedSubprogramGroupAccessAssignment_4_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new VirtualProcessorType_OwnedAbstractFeatureAssignment_4_1_1_6(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class VirtualProcessorType_OwnedDataPortAssignment_4_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedDataPortAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedDataPortAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedDataPortDataPortParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class VirtualProcessorType_OwnedEventPortAssignment_4_1_1_1 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedEventPortAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedEventPortAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedEventPortEventPortParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class VirtualProcessorType_OwnedEventDataPortAssignment_4_1_1_2 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedEventDataPortAssignment_4_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedEventDataPortAssignment_4_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_4_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroup+=FeatureGroup
protected class VirtualProcessorType_OwnedFeatureGroupAssignment_4_1_1_3 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedFeatureGroupAssignment_4_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedFeatureGroupAssignment_4_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_4_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class VirtualProcessorType_OwnedSubprogramAccessAssignment_4_1_1_4 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedSubprogramAccessAssignment_4_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedSubprogramAccessAssignment_4_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_4_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class VirtualProcessorType_OwnedSubprogramGroupAccessAssignment_4_1_1_5 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedSubprogramGroupAccessAssignment_4_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedSubprogramGroupAccessAssignment_4_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_4_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class VirtualProcessorType_OwnedAbstractFeatureAssignment_4_1_1_6 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedAbstractFeatureAssignment_4_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedAbstractFeatureAssignment_4_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_4_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FeaturesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class VirtualProcessorType_Group_5 extends GroupToken {
	
	public VirtualProcessorType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class VirtualProcessorType_FlowsKeyword_5_0 extends KeywordToken  {
	
	public VirtualProcessorType_FlowsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getFlowsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class VirtualProcessorType_Alternatives_5_1 extends AlternativesToken {

	public VirtualProcessorType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class VirtualProcessorType_OwnedFlowSpecificationAssignment_5_1_0 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedFlowSpecificationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedFlowSpecificationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedFlowSpecificationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_FlowsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class VirtualProcessorType_Group_5_1_1 extends GroupToken {
	
	public VirtualProcessorType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class VirtualProcessorType_NoFlowsAssignment_5_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorType_NoFlowsAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getNoFlowsAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_FlowsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorTypeAccess().getNoFlowsNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public VirtualProcessorType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_NoFlowsAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class VirtualProcessorType_Group_6 extends GroupToken {
	
	public VirtualProcessorType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class VirtualProcessorType_ModesKeyword_6_0 extends KeywordToken  {
	
	public VirtualProcessorType_ModesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getModesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class VirtualProcessorType_Alternatives_6_1 extends AlternativesToken {

	public VirtualProcessorType_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class VirtualProcessorType_Alternatives_6_1_0 extends AlternativesToken {

	public VirtualProcessorType_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedModeAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_OwnedModeTransitionAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class VirtualProcessorType_OwnedModeAssignment_6_1_0_0 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedModeAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedModeAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedModeModeParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class VirtualProcessorType_OwnedModeTransitionAssignment_6_1_0_1 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedModeTransitionAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedModeTransitionAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedModeTransitionModeTransitionParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_ModesKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class VirtualProcessorType_Group_6_1_1 extends GroupToken {
	
	public VirtualProcessorType_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class VirtualProcessorType_NoModesAssignment_6_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorType_NoModesAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getNoModesAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_ModesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorTypeAccess().getNoModesNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorType_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public VirtualProcessorType_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_NoModesAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class VirtualProcessorType_Group_7 extends GroupToken {
	
	public VirtualProcessorType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class VirtualProcessorType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public VirtualProcessorType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class VirtualProcessorType_Alternatives_7_1 extends AlternativesToken {

	public VirtualProcessorType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class VirtualProcessorType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class VirtualProcessorType_Group_7_1_1 extends GroupToken {
	
	public VirtualProcessorType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class VirtualProcessorType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public VirtualProcessorType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class VirtualProcessorType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public VirtualProcessorType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new VirtualProcessorType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new VirtualProcessorType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new VirtualProcessorType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new VirtualProcessorType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class VirtualProcessorType_EndKeyword_9 extends KeywordToken  {
	
	public VirtualProcessorType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualProcessorType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new VirtualProcessorType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new VirtualProcessorType_NameAssignment_2(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class VirtualProcessorType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public VirtualProcessorType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class VirtualProcessorType_SemicolonKeyword_11 extends KeywordToken  {
	
	public VirtualProcessorType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule VirtualProcessorType ****************/


/************ begin Rule DataType ****************
 *
 * DataType returns aadl2::DataType:
 * 	"data" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" |
 * 	(ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
 * 	ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
 * 	(ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "data" name=ID (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("features" (noFeatures?="none" ";" |
// (ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))? ("flows"
// (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class DataType_Group extends GroupToken {
	
	public DataType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDataTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "data"
protected class DataType_DataKeyword_0 extends KeywordToken  {
	
	public DataType_DataKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getDataKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class DataType_NameAssignment_1 extends AssignmentToken  {
	
	public DataType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_DataKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=TypeExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class DataType_Group_2 extends GroupToken {
	
	public DataType_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=TypeExtension
protected class DataType_OwnedExtensionAssignment_2_0 extends AssignmentToken  {
	
	public DataType_OwnedExtensionAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedExtensionAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedExtensionTypeExtensionParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class DataType_Group_2_1 extends GroupToken {
	
	public DataType_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DataType_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public DataType_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_OwnedExtensionAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DataType_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public DataType_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class DataType_Group_2_1_2 extends GroupToken {
	
	public DataType_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DataType_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public DataType_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DataType_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public DataType_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DataType_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public DataType_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "features" (noFeatures?="none" ";" | (ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+))?
protected class DataType_Group_3 extends GroupToken {
	
	public DataType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Alternatives_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class DataType_FeaturesKeyword_3_0 extends KeywordToken  {
	
	public DataType_FeaturesKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getFeaturesKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";" | (ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class DataType_Alternatives_3_1 extends AlternativesToken {

	public DataType_Alternatives_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getAlternatives_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_Alternatives_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none" ";"
protected class DataType_Group_3_1_0 extends GroupToken {
	
	public DataType_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_SemicolonKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFeatures?="none"
protected class DataType_NoFeaturesAssignment_3_1_0_0 extends AssignmentToken  {
	
	public DataType_NoFeaturesAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getNoFeaturesAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_FeaturesKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFeatures");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataTypeAccess().getNoFeaturesNoneKeyword_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataType_SemicolonKeyword_3_1_0_1 extends KeywordToken  {
	
	public DataType_SemicolonKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getSemicolonKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_NoFeaturesAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (ownedFeatureGroup+=FeatureGroup | ownedSubprogramAccess+=SubprogramAccess |
// ownedSubprogramGroupAccess+=SubprogramGroupAccess | ownedAbstractFeature+=AbstractFeature)+
protected class DataType_Alternatives_3_1_1 extends AlternativesToken {

	public DataType_Alternatives_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getAlternatives_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_OwnedFeatureGroupAssignment_3_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_OwnedSubprogramAccessAssignment_3_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataType_OwnedSubprogramGroupAccessAssignment_3_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataType_OwnedAbstractFeatureAssignment_3_1_1_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedFeatureGroup+=FeatureGroup
protected class DataType_OwnedFeatureGroupAssignment_3_1_1_0 extends AssignmentToken  {
	
	public DataType_OwnedFeatureGroupAssignment_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedFeatureGroupAssignment_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroup",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroup");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedFeatureGroupFeatureGroupParserRuleCall_3_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramAccess+=SubprogramAccess
protected class DataType_OwnedSubprogramAccessAssignment_3_1_1_1 extends AssignmentToken  {
	
	public DataType_OwnedSubprogramAccessAssignment_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedSubprogramAccessAssignment_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedSubprogramAccessSubprogramAccessParserRuleCall_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupAccess+=SubprogramGroupAccess
protected class DataType_OwnedSubprogramGroupAccessAssignment_3_1_1_2 extends AssignmentToken  {
	
	public DataType_OwnedSubprogramGroupAccessAssignment_3_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedSubprogramGroupAccessAssignment_3_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupAccess",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupAccess");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedSubprogramGroupAccessSubprogramGroupAccessParserRuleCall_3_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractFeature+=AbstractFeature
protected class DataType_OwnedAbstractFeatureAssignment_3_1_1_3 extends AssignmentToken  {
	
	public DataType_OwnedAbstractFeatureAssignment_3_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedAbstractFeatureAssignment_3_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedAbstractFeatureAbstractFeatureParserRuleCall_3_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_Alternatives_3_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_FeaturesKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// (=> "flows" (ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"))?
protected class DataType_Group_4 extends GroupToken {
	
	public DataType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class DataType_FlowsKeyword_4_0 extends KeywordToken  {
	
	public DataType_FlowsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getFlowsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataType_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+ | noFlows?="none" ";"
protected class DataType_Alternatives_4_1 extends AlternativesToken {

	public DataType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_OwnedFlowSpecificationAssignment_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_Group_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedFlowSpecification+=FlowSpecification+
protected class DataType_OwnedFlowSpecificationAssignment_4_1_0 extends AssignmentToken  {
	
	public DataType_OwnedFlowSpecificationAssignment_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedFlowSpecificationAssignment_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFlowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFlowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedFlowSpecificationFlowSpecificationParserRuleCall_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_OwnedFlowSpecificationAssignment_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_FlowsKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noFlows?="none" ";"
protected class DataType_Group_4_1_1 extends GroupToken {
	
	public DataType_Group_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_SemicolonKeyword_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class DataType_NoFlowsAssignment_4_1_1_0 extends AssignmentToken  {
	
	public DataType_NoFlowsAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getNoFlowsAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_FlowsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataTypeAccess().getNoFlowsNoneKeyword_4_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataType_SemicolonKeyword_4_1_1_1 extends KeywordToken  {
	
	public DataType_SemicolonKeyword_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getSemicolonKeyword_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_NoFlowsAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class DataType_Group_5 extends GroupToken {
	
	public DataType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class DataType_PropertiesKeyword_5_0 extends KeywordToken  {
	
	public DataType_PropertiesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getPropertiesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataType_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataType_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class DataType_Alternatives_5_1 extends AlternativesToken {

	public DataType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_Group_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class DataType_OwnedPropertyAssociationAssignment_5_1_0 extends AssignmentToken  {
	
	public DataType_OwnedPropertyAssociationAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedPropertyAssociationAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_OwnedPropertyAssociationAssignment_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_PropertiesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class DataType_Group_5_1_1 extends GroupToken {
	
	public DataType_Group_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getGroup_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_SemicolonKeyword_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class DataType_NoPropertiesAssignment_5_1_1_0 extends AssignmentToken  {
	
	public DataType_NoPropertiesAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getNoPropertiesAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_PropertiesKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataTypeAccess().getNoPropertiesNoneKeyword_5_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataType_SemicolonKeyword_5_1_1_1 extends KeywordToken  {
	
	public DataType_SemicolonKeyword_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getSemicolonKeyword_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_NoPropertiesAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class DataType_OwnedAnnexSubclauseAssignment_6 extends AssignmentToken  {
	
	public DataType_OwnedAnnexSubclauseAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getOwnedAnnexSubclauseAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DataType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DataType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new DataType_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new DataType_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class DataType_EndKeyword_7 extends KeywordToken  {
	
	public DataType_EndKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getEndKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_OwnedAnnexSubclauseAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DataType_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DataType_NameAssignment_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ID
protected class DataType_IDTerminalRuleCall_8 extends UnassignedTextToken {

	public DataType_IDTerminalRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getIDTerminalRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_EndKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class DataType_SemicolonKeyword_9 extends KeywordToken  {
	
	public DataType_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataTypeAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataType_IDTerminalRuleCall_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DataType ****************/


/************ begin Rule Realization ****************
 *
 * // Component Implementations: add calls for threads and subprograms
 * Realization returns aadl2::Realization:
 * 	implemented=[aadl2::SystemType];
 *
 **/

// implemented=[aadl2::SystemType]
protected class Realization_ImplementedAssignment extends AssignmentToken  {
	
	public Realization_ImplementedAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRealizationAccess().getImplementedAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRealizationRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("implemented",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implemented");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationAccess().getImplementedSystemTypeCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRealizationAccess().getImplementedSystemTypeCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule Realization ****************/


/************ begin Rule AbstractImplementation ****************
 *
 * AbstractImplementation returns aadl2::AbstractImplementation:
 * 	"abstract" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
 * 	ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
 * 	ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
 * 	ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
 * 	ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
 * 	ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
 * 	ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
 * 	";"))? ("calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ //	| noSequences?=NONE
 * )? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
 * 	ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection |
 * 	ownedParameterConnection+=ParameterConnection)+ | noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))?
 * 	("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "abstract" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))? ("calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ //	| noSequences?=NONE
// )? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection |
// ownedParameterConnection+=ParameterConnection)+ | noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))?
// ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class AbstractImplementation_Group extends GroupToken {
	
	public AbstractImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SemicolonKeyword_17(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "abstract"
protected class AbstractImplementation_AbstractKeyword_0 extends KeywordToken  {
	
	public AbstractImplementation_AbstractKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAbstractKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class AbstractImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public AbstractImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_AbstractKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class AbstractImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class AbstractImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public AbstractImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class AbstractImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public AbstractImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAbstractImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class AbstractImplementation_Group_5 extends GroupToken {
	
	public AbstractImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class AbstractImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class AbstractImplementation_Group_5_1 extends GroupToken {
	
	public AbstractImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class AbstractImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public AbstractImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class AbstractImplementation_Group_5_1_2 extends GroupToken {
	
	public AbstractImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AbstractImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public AbstractImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class AbstractImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public AbstractImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent
// | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))?
protected class AbstractImplementation_Group_6 extends GroupToken {
	
	public AbstractImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class AbstractImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public AbstractImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"
protected class AbstractImplementation_Alternatives_6_1 extends AlternativesToken {

	public AbstractImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+
protected class AbstractImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public AbstractImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedSystemSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_OwnedThreadSubcomponentAssignment_6_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractImplementation_OwnedThreadGroupSubcomponentAssignment_6_1_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractImplementation_OwnedProcessSubcomponentAssignment_6_1_0_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new AbstractImplementation_OwnedProcessorSubcomponentAssignment_6_1_0_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new AbstractImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new AbstractImplementation_OwnedMemorySubcomponentAssignment_6_1_0_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new AbstractImplementation_OwnedDeviceSubcomponentAssignment_6_1_0_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new AbstractImplementation_OwnedBusSubcomponentAssignment_6_1_0_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new AbstractImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new AbstractImplementation_OwnedDataSubcomponentAssignment_6_1_0_12(lastRuleCallOrigin, this, 12, inst);
			case 13: return new AbstractImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_13(lastRuleCallOrigin, this, 13, inst);
			default: return null;
		}	
	}

}

// ownedSystemSubcomponent+=SystemSubcomponent
protected class AbstractImplementation_OwnedSystemSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedSystemSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedSystemSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSystemSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSystemSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedSystemSubcomponentSystemSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class AbstractImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedSubprogramSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
protected class AbstractImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_2 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedSubprogramGroupSubcomponentAssignment_6_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedSubprogramGroupSubcomponentSubprogramGroupSubcomponentParserRuleCall_6_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadSubcomponent+=ThreadSubcomponent
protected class AbstractImplementation_OwnedThreadSubcomponentAssignment_6_1_0_3 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedThreadSubcomponentAssignment_6_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedThreadSubcomponentAssignment_6_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedThreadSubcomponentThreadSubcomponentParserRuleCall_6_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent
protected class AbstractImplementation_OwnedThreadGroupSubcomponentAssignment_6_1_0_4 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedThreadGroupSubcomponentAssignment_6_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedThreadGroupSubcomponentAssignment_6_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedThreadGroupSubcomponentThreadGroupSubcomponentParserRuleCall_6_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessSubcomponent+=ProcessSubcomponent
protected class AbstractImplementation_OwnedProcessSubcomponentAssignment_6_1_0_5 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedProcessSubcomponentAssignment_6_1_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedProcessSubcomponentAssignment_6_1_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedProcessSubcomponentProcessSubcomponentParserRuleCall_6_1_0_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessorSubcomponent+=ProcessorSubcomponent
protected class AbstractImplementation_OwnedProcessorSubcomponentAssignment_6_1_0_6 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedProcessorSubcomponentAssignment_6_1_0_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedProcessorSubcomponentAssignment_6_1_0_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessorSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessorSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedProcessorSubcomponentProcessorSubcomponentParserRuleCall_6_1_0_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent
protected class AbstractImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_7 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedVirtualProcessorSubcomponentAssignment_6_1_0_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedVirtualProcessorSubcomponentVirtualProcessorSubcomponentParserRuleCall_6_1_0_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemorySubcomponent+=MemorySubcomponent
protected class AbstractImplementation_OwnedMemorySubcomponentAssignment_6_1_0_8 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedMemorySubcomponentAssignment_6_1_0_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedMemorySubcomponentAssignment_6_1_0_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemorySubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemorySubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemorySubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedMemorySubcomponentMemorySubcomponentParserRuleCall_6_1_0_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDeviceSubcomponent+=DeviceSubcomponent
protected class AbstractImplementation_OwnedDeviceSubcomponentAssignment_6_1_0_9 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedDeviceSubcomponentAssignment_6_1_0_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedDeviceSubcomponentAssignment_6_1_0_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDeviceSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDeviceSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedDeviceSubcomponentDeviceSubcomponentParserRuleCall_6_1_0_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusSubcomponent+=BusSubcomponent
protected class AbstractImplementation_OwnedBusSubcomponentAssignment_6_1_0_10 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedBusSubcomponentAssignment_6_1_0_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedBusSubcomponentAssignment_6_1_0_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedBusSubcomponentBusSubcomponentParserRuleCall_6_1_0_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
protected class AbstractImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_11 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedVirtualBusSubcomponentAssignment_6_1_0_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedVirtualBusSubcomponentVirtualBusSubcomponentParserRuleCall_6_1_0_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class AbstractImplementation_OwnedDataSubcomponentAssignment_6_1_0_12 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedDataSubcomponentAssignment_6_1_0_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedDataSubcomponentAssignment_6_1_0_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_6_1_0_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class AbstractImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_13 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_13_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class AbstractImplementation_Group_6_1_1 extends GroupToken {
	
	public AbstractImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class AbstractImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public AbstractImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public AbstractImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ //	| noSequences?=NONE
// )?
protected class AbstractImplementation_Group_7 extends GroupToken {
	
	public AbstractImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedSubprogramCallSequenceAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "calls"
protected class AbstractImplementation_CallsKeyword_7_0 extends KeywordToken  {
	
	public AbstractImplementation_CallsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getCallsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedSubprogramCallSequence+=SubprogramCallSequence+
protected class AbstractImplementation_OwnedSubprogramCallSequenceAssignment_7_1 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedSubprogramCallSequenceAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedSubprogramCallSequenceAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramCallSequence",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramCallSequence");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramCallSequenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedSubprogramCallSequenceSubprogramCallSequenceParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_OwnedSubprogramCallSequenceAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_CallsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (=> "connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection |
// ownedParameterConnection+=ParameterConnection)+ | noConnections?="none" ";"))?
protected class AbstractImplementation_Group_8 extends GroupToken {
	
	public AbstractImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class AbstractImplementation_ConnectionsKeyword_8_0 extends KeywordToken  {
	
	public AbstractImplementation_ConnectionsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getConnectionsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection |
// ownedParameterConnection+=ParameterConnection)+ | noConnections?="none" ";"
protected class AbstractImplementation_Alternatives_8_1 extends AlternativesToken {

	public AbstractImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection |
// ownedParameterConnection+=ParameterConnection)+
protected class AbstractImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public AbstractImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedPortConnectionAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_OwnedAccessConnectionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_OwnedFeatureConnectionAssignment_8_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractImplementation_OwnedParameterConnectionAssignment_8_1_0_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPortConnection+=PortConnection
protected class AbstractImplementation_OwnedPortConnectionAssignment_8_1_0_0 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedPortConnectionAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedPortConnectionAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPortConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPortConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAccessConnection+=AccessConnection
protected class AbstractImplementation_OwnedAccessConnectionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedAccessConnectionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedAccessConnectionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class AbstractImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedFeatureGroupConnectionAssignment_8_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_8_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class AbstractImplementation_OwnedFeatureConnectionAssignment_8_1_0_3 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedFeatureConnectionAssignment_8_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedFeatureConnectionAssignment_8_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_8_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedParameterConnection+=ParameterConnection
protected class AbstractImplementation_OwnedParameterConnectionAssignment_8_1_0_4 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedParameterConnectionAssignment_8_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedParameterConnectionAssignment_8_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedParameterConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedParameterConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedParameterConnectionParameterConnectionParserRuleCall_8_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class AbstractImplementation_Group_8_1_1 extends GroupToken {
	
	public AbstractImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class AbstractImplementation_NoConnectionsAssignment_8_1_1_0 extends AssignmentToken  {
	
	public AbstractImplementation_NoConnectionsAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getNoConnectionsAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractImplementationAccess().getNoConnectionsNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public AbstractImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_NoConnectionsAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class AbstractImplementation_Group_9 extends GroupToken {
	
	public AbstractImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class AbstractImplementation_FlowsKeyword_9_0 extends KeywordToken  {
	
	public AbstractImplementation_FlowsKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getFlowsKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class AbstractImplementation_Group_9_1 extends GroupToken {
	
	public AbstractImplementation_Group_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SemicolonKeyword_9_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class AbstractImplementation_NoFlowsAssignment_9_1_0 extends AssignmentToken  {
	
	public AbstractImplementation_NoFlowsAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getNoFlowsAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_FlowsKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractImplementationAccess().getNoFlowsNoneKeyword_9_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractImplementation_SemicolonKeyword_9_1_1 extends KeywordToken  {
	
	public AbstractImplementation_SemicolonKeyword_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSemicolonKeyword_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_NoFlowsAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class AbstractImplementation_Group_10 extends GroupToken {
	
	public AbstractImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class AbstractImplementation_ModesKeyword_10_0 extends KeywordToken  {
	
	public AbstractImplementation_ModesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getModesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class AbstractImplementation_Alternatives_10_1 extends AlternativesToken {

	public AbstractImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class AbstractImplementation_Alternatives_10_1_0 extends AlternativesToken {

	public AbstractImplementation_Alternatives_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedModeAssignment_10_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_OwnedModeTransitionAssignment_10_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class AbstractImplementation_OwnedModeAssignment_10_1_0_0 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedModeAssignment_10_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedModeAssignment_10_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedModeModeParserRuleCall_10_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class AbstractImplementation_OwnedModeTransitionAssignment_10_1_0_1 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedModeTransitionAssignment_10_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedModeTransitionAssignment_10_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_10_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class AbstractImplementation_Group_10_1_1 extends GroupToken {
	
	public AbstractImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class AbstractImplementation_NoModesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public AbstractImplementation_NoModesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getNoModesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_ModesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractImplementationAccess().getNoModesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public AbstractImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_NoModesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class AbstractImplementation_Group_11 extends GroupToken {
	
	public AbstractImplementation_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Alternatives_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class AbstractImplementation_PropertiesKeyword_11_0 extends KeywordToken  {
	
	public AbstractImplementation_PropertiesKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getPropertiesKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class AbstractImplementation_Alternatives_11_1 extends AlternativesToken {

	public AbstractImplementation_Alternatives_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getAlternatives_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_11_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class AbstractImplementation_OwnedPropertyAssociationAssignment_11_1_0 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedPropertyAssociationAssignment_11_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedPropertyAssociationAssignment_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_11_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class AbstractImplementation_Group_11_1_1 extends GroupToken {
	
	public AbstractImplementation_Group_11_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getGroup_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_SemicolonKeyword_11_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class AbstractImplementation_NoPropertiesAssignment_11_1_1_0 extends AssignmentToken  {
	
	public AbstractImplementation_NoPropertiesAssignment_11_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getNoPropertiesAssignment_11_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractImplementationAccess().getNoPropertiesNoneKeyword_11_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class AbstractImplementation_SemicolonKeyword_11_1_1_1 extends KeywordToken  {
	
	public AbstractImplementation_SemicolonKeyword_11_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSemicolonKeyword_11_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_NoPropertiesAssignment_11_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class AbstractImplementation_OwnedAnnexSubclauseAssignment_12 extends AssignmentToken  {
	
	public AbstractImplementation_OwnedAnnexSubclauseAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getOwnedAnnexSubclauseAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractImplementation_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new AbstractImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new AbstractImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new AbstractImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new AbstractImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new AbstractImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new AbstractImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 8: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class AbstractImplementation_EndKeyword_13 extends KeywordToken  {
	
	public AbstractImplementation_EndKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getEndKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractImplementation_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractImplementation_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractImplementation_Group_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractImplementation_Group_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new AbstractImplementation_Group_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new AbstractImplementation_Group_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new AbstractImplementation_Group_5(lastRuleCallOrigin, this, 7, inst);
			case 8: return new AbstractImplementation_NameAssignment_4(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// ID
protected class AbstractImplementation_IDTerminalRuleCall_14 extends UnassignedTextToken {

	public AbstractImplementation_IDTerminalRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getIDTerminalRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_EndKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class AbstractImplementation_FullStopKeyword_15 extends KeywordToken  {
	
	public AbstractImplementation_FullStopKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getFullStopKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_IDTerminalRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class AbstractImplementation_INAMEParserRuleCall_16 extends UnassignedTextToken {

	public AbstractImplementation_INAMEParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getINAMEParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_FullStopKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class AbstractImplementation_SemicolonKeyword_17 extends KeywordToken  {
	
	public AbstractImplementation_SemicolonKeyword_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractImplementationAccess().getSemicolonKeyword_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractImplementation_INAMEParserRuleCall_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AbstractImplementation ****************/


/************ begin Rule SystemImplementation ****************
 *
 * SystemImplementation returns aadl2::SystemImplementation:
 * 	"system" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
 * 	ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
 * 	ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
 * 	ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
 * 	ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
 * 	ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
 * 	";"))? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
 * 	ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "system" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class SystemImplementation_Group extends GroupToken {
	
	public SystemImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SemicolonKeyword_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSystemImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "system"
protected class SystemImplementation_SystemKeyword_0 extends KeywordToken  {
	
	public SystemImplementation_SystemKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSystemKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class SystemImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public SystemImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SystemKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class SystemImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public SystemImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class SystemImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public SystemImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class SystemImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public SystemImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSystemImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSystemImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SystemImplementation_Group_5 extends GroupToken {
	
	public SystemImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class SystemImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public SystemImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SystemImplementation_Group_5_1 extends GroupToken {
	
	public SystemImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SystemImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public SystemImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SystemImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public SystemImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SystemImplementation_Group_5_1_2 extends GroupToken {
	
	public SystemImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SystemImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public SystemImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SystemImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public SystemImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SystemImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public SystemImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("subcomponents" ((ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))?
protected class SystemImplementation_Group_6 extends GroupToken {
	
	public SystemImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "subcomponents"
protected class SystemImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public SystemImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"
protected class SystemImplementation_Alternatives_6_1 extends AlternativesToken {

	public SystemImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSystemSubcomponent+=SystemSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedProcessSubcomponent+=ProcessSubcomponent |
// ownedProcessorSubcomponent+=ProcessorSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent |
// ownedMemorySubcomponent+=MemorySubcomponent | ownedDeviceSubcomponent+=DeviceSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+
protected class SystemImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public SystemImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedSystemSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemImplementation_OwnedProcessSubcomponentAssignment_6_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemImplementation_OwnedProcessorSubcomponentAssignment_6_1_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SystemImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SystemImplementation_OwnedMemorySubcomponentAssignment_6_1_0_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SystemImplementation_OwnedDeviceSubcomponentAssignment_6_1_0_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new SystemImplementation_OwnedBusSubcomponentAssignment_6_1_0_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new SystemImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new SystemImplementation_OwnedDataSubcomponentAssignment_6_1_0_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new SystemImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_11(lastRuleCallOrigin, this, 11, inst);
			default: return null;
		}	
	}

}

// ownedSystemSubcomponent+=SystemSubcomponent
protected class SystemImplementation_OwnedSystemSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public SystemImplementation_OwnedSystemSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedSystemSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSystemSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSystemSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedSystemSubcomponentSystemSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class SystemImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public SystemImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedSubprogramSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
protected class SystemImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_2 extends AssignmentToken  {
	
	public SystemImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedSubprogramGroupSubcomponentAssignment_6_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedSubprogramGroupSubcomponentSubprogramGroupSubcomponentParserRuleCall_6_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessSubcomponent+=ProcessSubcomponent
protected class SystemImplementation_OwnedProcessSubcomponentAssignment_6_1_0_3 extends AssignmentToken  {
	
	public SystemImplementation_OwnedProcessSubcomponentAssignment_6_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedProcessSubcomponentAssignment_6_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedProcessSubcomponentProcessSubcomponentParserRuleCall_6_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedProcessorSubcomponent+=ProcessorSubcomponent
protected class SystemImplementation_OwnedProcessorSubcomponentAssignment_6_1_0_4 extends AssignmentToken  {
	
	public SystemImplementation_OwnedProcessorSubcomponentAssignment_6_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedProcessorSubcomponentAssignment_6_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedProcessorSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedProcessorSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedProcessorSubcomponentProcessorSubcomponentParserRuleCall_6_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent
protected class SystemImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_5 extends AssignmentToken  {
	
	public SystemImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedVirtualProcessorSubcomponentAssignment_6_1_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedVirtualProcessorSubcomponentVirtualProcessorSubcomponentParserRuleCall_6_1_0_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemorySubcomponent+=MemorySubcomponent
protected class SystemImplementation_OwnedMemorySubcomponentAssignment_6_1_0_6 extends AssignmentToken  {
	
	public SystemImplementation_OwnedMemorySubcomponentAssignment_6_1_0_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedMemorySubcomponentAssignment_6_1_0_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemorySubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemorySubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemorySubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedMemorySubcomponentMemorySubcomponentParserRuleCall_6_1_0_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDeviceSubcomponent+=DeviceSubcomponent
protected class SystemImplementation_OwnedDeviceSubcomponentAssignment_6_1_0_7 extends AssignmentToken  {
	
	public SystemImplementation_OwnedDeviceSubcomponentAssignment_6_1_0_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedDeviceSubcomponentAssignment_6_1_0_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDeviceSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDeviceSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedDeviceSubcomponentDeviceSubcomponentParserRuleCall_6_1_0_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusSubcomponent+=BusSubcomponent
protected class SystemImplementation_OwnedBusSubcomponentAssignment_6_1_0_8 extends AssignmentToken  {
	
	public SystemImplementation_OwnedBusSubcomponentAssignment_6_1_0_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedBusSubcomponentAssignment_6_1_0_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedBusSubcomponentBusSubcomponentParserRuleCall_6_1_0_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
protected class SystemImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_9 extends AssignmentToken  {
	
	public SystemImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedVirtualBusSubcomponentAssignment_6_1_0_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedVirtualBusSubcomponentVirtualBusSubcomponentParserRuleCall_6_1_0_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class SystemImplementation_OwnedDataSubcomponentAssignment_6_1_0_10 extends AssignmentToken  {
	
	public SystemImplementation_OwnedDataSubcomponentAssignment_6_1_0_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedDataSubcomponentAssignment_6_1_0_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_6_1_0_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class SystemImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_11 extends AssignmentToken  {
	
	public SystemImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class SystemImplementation_Group_6_1_1 extends GroupToken {
	
	public SystemImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class SystemImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public SystemImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public SystemImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))?
protected class SystemImplementation_Group_7 extends GroupToken {
	
	public SystemImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class SystemImplementation_ConnectionsKeyword_7_0 extends KeywordToken  {
	
	public SystemImplementation_ConnectionsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getConnectionsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"
protected class SystemImplementation_Alternatives_7_1 extends AlternativesToken {

	public SystemImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+
protected class SystemImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public SystemImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedPortConnectionAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_OwnedAccessConnectionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemImplementation_OwnedFeatureConnectionAssignment_7_1_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPortConnection+=PortConnection
protected class SystemImplementation_OwnedPortConnectionAssignment_7_1_0_0 extends AssignmentToken  {
	
	public SystemImplementation_OwnedPortConnectionAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedPortConnectionAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPortConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPortConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAccessConnection+=AccessConnection
protected class SystemImplementation_OwnedAccessConnectionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public SystemImplementation_OwnedAccessConnectionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedAccessConnectionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class SystemImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_2 extends AssignmentToken  {
	
	public SystemImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedFeatureGroupConnectionAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class SystemImplementation_OwnedFeatureConnectionAssignment_7_1_0_3 extends AssignmentToken  {
	
	public SystemImplementation_OwnedFeatureConnectionAssignment_7_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedFeatureConnectionAssignment_7_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_7_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class SystemImplementation_Group_7_1_1 extends GroupToken {
	
	public SystemImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class SystemImplementation_NoConnectionsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public SystemImplementation_NoConnectionsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getNoConnectionsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemImplementationAccess().getNoConnectionsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public SystemImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_NoConnectionsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class SystemImplementation_Group_8 extends GroupToken {
	
	public SystemImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class SystemImplementation_FlowsKeyword_8_0 extends KeywordToken  {
	
	public SystemImplementation_FlowsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getFlowsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class SystemImplementation_Group_8_1 extends GroupToken {
	
	public SystemImplementation_Group_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SemicolonKeyword_8_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class SystemImplementation_NoFlowsAssignment_8_1_0 extends AssignmentToken  {
	
	public SystemImplementation_NoFlowsAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getNoFlowsAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_FlowsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemImplementationAccess().getNoFlowsNoneKeyword_8_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemImplementation_SemicolonKeyword_8_1_1 extends KeywordToken  {
	
	public SystemImplementation_SemicolonKeyword_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSemicolonKeyword_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_NoFlowsAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class SystemImplementation_Group_9 extends GroupToken {
	
	public SystemImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class SystemImplementation_ModesKeyword_9_0 extends KeywordToken  {
	
	public SystemImplementation_ModesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getModesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class SystemImplementation_Alternatives_9_1 extends AlternativesToken {

	public SystemImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class SystemImplementation_Alternatives_9_1_0 extends AlternativesToken {

	public SystemImplementation_Alternatives_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedModeAssignment_9_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_OwnedModeTransitionAssignment_9_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class SystemImplementation_OwnedModeAssignment_9_1_0_0 extends AssignmentToken  {
	
	public SystemImplementation_OwnedModeAssignment_9_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedModeAssignment_9_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedModeModeParserRuleCall_9_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class SystemImplementation_OwnedModeTransitionAssignment_9_1_0_1 extends AssignmentToken  {
	
	public SystemImplementation_OwnedModeTransitionAssignment_9_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedModeTransitionAssignment_9_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_9_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class SystemImplementation_Group_9_1_1 extends GroupToken {
	
	public SystemImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class SystemImplementation_NoModesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public SystemImplementation_NoModesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getNoModesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_ModesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemImplementationAccess().getNoModesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public SystemImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_NoModesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class SystemImplementation_Group_10 extends GroupToken {
	
	public SystemImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class SystemImplementation_PropertiesKeyword_10_0 extends KeywordToken  {
	
	public SystemImplementation_PropertiesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getPropertiesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class SystemImplementation_Alternatives_10_1 extends AlternativesToken {

	public SystemImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SystemImplementation_OwnedPropertyAssociationAssignment_10_1_0 extends AssignmentToken  {
	
	public SystemImplementation_OwnedPropertyAssociationAssignment_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedPropertyAssociationAssignment_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_10_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class SystemImplementation_Group_10_1_1 extends GroupToken {
	
	public SystemImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class SystemImplementation_NoPropertiesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public SystemImplementation_NoPropertiesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getNoPropertiesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemImplementationAccess().getNoPropertiesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SystemImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public SystemImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_NoPropertiesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class SystemImplementation_OwnedAnnexSubclauseAssignment_11 extends AssignmentToken  {
	
	public SystemImplementation_OwnedAnnexSubclauseAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getOwnedAnnexSubclauseAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SystemImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SystemImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SystemImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SystemImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SystemImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class SystemImplementation_EndKeyword_12 extends KeywordToken  {
	
	public SystemImplementation_EndKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getEndKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemImplementation_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemImplementation_Group_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemImplementation_Group_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemImplementation_Group_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SystemImplementation_Group_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SystemImplementation_Group_5(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SystemImplementation_NameAssignment_4(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class SystemImplementation_IDTerminalRuleCall_13 extends UnassignedTextToken {

	public SystemImplementation_IDTerminalRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getIDTerminalRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_EndKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class SystemImplementation_FullStopKeyword_14 extends KeywordToken  {
	
	public SystemImplementation_FullStopKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getFullStopKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_IDTerminalRuleCall_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class SystemImplementation_INAMEParserRuleCall_15 extends UnassignedTextToken {

	public SystemImplementation_INAMEParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getINAMEParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_FullStopKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class SystemImplementation_SemicolonKeyword_16 extends KeywordToken  {
	
	public SystemImplementation_SemicolonKeyword_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemImplementationAccess().getSemicolonKeyword_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemImplementation_INAMEParserRuleCall_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule SystemImplementation ****************/


/************ begin Rule ProcessImplementation ****************
 *
 * ProcessImplementation returns aadl2::ProcessImplementation:
 * 	"process" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
 * 	ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
 * 	ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
 * 	";"))? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
 * 	ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "process" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class ProcessImplementation_Group extends GroupToken {
	
	public ProcessImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SemicolonKeyword_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "process"
protected class ProcessImplementation_ProcessKeyword_0 extends KeywordToken  {
	
	public ProcessImplementation_ProcessKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getProcessKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class ProcessImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public ProcessImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_ProcessKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class ProcessImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class ProcessImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public ProcessImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class ProcessImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public ProcessImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getProcessImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ProcessImplementation_Group_5 extends GroupToken {
	
	public ProcessImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class ProcessImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ProcessImplementation_Group_5_1 extends GroupToken {
	
	public ProcessImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public ProcessImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ProcessImplementation_Group_5_1_2 extends GroupToken {
	
	public ProcessImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public ProcessImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public ProcessImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent |
// ownedThreadSubcomponent+=ThreadSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedDataSubcomponent+=DataSubcomponent |
// ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class ProcessImplementation_Group_6 extends GroupToken {
	
	public ProcessImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class ProcessImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public ProcessImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"
protected class ProcessImplementation_Alternatives_6_1 extends AlternativesToken {

	public ProcessImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+
protected class ProcessImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public ProcessImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedThreadGroupSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_OwnedThreadSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessImplementation_OwnedDataSubcomponentAssignment_6_1_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent
protected class ProcessImplementation_OwnedThreadGroupSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedThreadGroupSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedThreadGroupSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedThreadGroupSubcomponentThreadGroupSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadSubcomponent+=ThreadSubcomponent
protected class ProcessImplementation_OwnedThreadSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedThreadSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedThreadSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedThreadSubcomponentThreadSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class ProcessImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_2 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedSubprogramSubcomponentAssignment_6_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_6_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
protected class ProcessImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_3 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedSubprogramGroupSubcomponentAssignment_6_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedSubprogramGroupSubcomponentSubprogramGroupSubcomponentParserRuleCall_6_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class ProcessImplementation_OwnedDataSubcomponentAssignment_6_1_0_4 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedDataSubcomponentAssignment_6_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedDataSubcomponentAssignment_6_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_6_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class ProcessImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_5 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class ProcessImplementation_Group_6_1_1 extends GroupToken {
	
	public ProcessImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class ProcessImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ProcessImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ProcessImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))?
protected class ProcessImplementation_Group_7 extends GroupToken {
	
	public ProcessImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class ProcessImplementation_ConnectionsKeyword_7_0 extends KeywordToken  {
	
	public ProcessImplementation_ConnectionsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getConnectionsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"
protected class ProcessImplementation_Alternatives_7_1 extends AlternativesToken {

	public ProcessImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+
protected class ProcessImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public ProcessImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedPortConnectionAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_OwnedAccessConnectionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessImplementation_OwnedFeatureConnectionAssignment_7_1_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPortConnection+=PortConnection
protected class ProcessImplementation_OwnedPortConnectionAssignment_7_1_0_0 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedPortConnectionAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedPortConnectionAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPortConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPortConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAccessConnection+=AccessConnection
protected class ProcessImplementation_OwnedAccessConnectionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedAccessConnectionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedAccessConnectionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class ProcessImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_2 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedFeatureGroupConnectionAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class ProcessImplementation_OwnedFeatureConnectionAssignment_7_1_0_3 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedFeatureConnectionAssignment_7_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedFeatureConnectionAssignment_7_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_7_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class ProcessImplementation_Group_7_1_1 extends GroupToken {
	
	public ProcessImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class ProcessImplementation_NoConnectionsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public ProcessImplementation_NoConnectionsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getNoConnectionsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessImplementationAccess().getNoConnectionsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public ProcessImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_NoConnectionsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class ProcessImplementation_Group_8 extends GroupToken {
	
	public ProcessImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ProcessImplementation_FlowsKeyword_8_0 extends KeywordToken  {
	
	public ProcessImplementation_FlowsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getFlowsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class ProcessImplementation_Group_8_1 extends GroupToken {
	
	public ProcessImplementation_Group_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SemicolonKeyword_8_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ProcessImplementation_NoFlowsAssignment_8_1_0 extends AssignmentToken  {
	
	public ProcessImplementation_NoFlowsAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getNoFlowsAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_FlowsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessImplementationAccess().getNoFlowsNoneKeyword_8_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessImplementation_SemicolonKeyword_8_1_1 extends KeywordToken  {
	
	public ProcessImplementation_SemicolonKeyword_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSemicolonKeyword_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_NoFlowsAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ProcessImplementation_Group_9 extends GroupToken {
	
	public ProcessImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ProcessImplementation_ModesKeyword_9_0 extends KeywordToken  {
	
	public ProcessImplementation_ModesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getModesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ProcessImplementation_Alternatives_9_1 extends AlternativesToken {

	public ProcessImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ProcessImplementation_Alternatives_9_1_0 extends AlternativesToken {

	public ProcessImplementation_Alternatives_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedModeAssignment_9_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_OwnedModeTransitionAssignment_9_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ProcessImplementation_OwnedModeAssignment_9_1_0_0 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedModeAssignment_9_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedModeAssignment_9_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedModeModeParserRuleCall_9_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ProcessImplementation_OwnedModeTransitionAssignment_9_1_0_1 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedModeTransitionAssignment_9_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedModeTransitionAssignment_9_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_9_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ProcessImplementation_Group_9_1_1 extends GroupToken {
	
	public ProcessImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ProcessImplementation_NoModesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public ProcessImplementation_NoModesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getNoModesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_ModesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessImplementationAccess().getNoModesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public ProcessImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_NoModesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ProcessImplementation_Group_10 extends GroupToken {
	
	public ProcessImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ProcessImplementation_PropertiesKeyword_10_0 extends KeywordToken  {
	
	public ProcessImplementation_PropertiesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getPropertiesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ProcessImplementation_Alternatives_10_1 extends AlternativesToken {

	public ProcessImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ProcessImplementation_OwnedPropertyAssociationAssignment_10_1_0 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedPropertyAssociationAssignment_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedPropertyAssociationAssignment_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_10_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ProcessImplementation_Group_10_1_1 extends GroupToken {
	
	public ProcessImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ProcessImplementation_NoPropertiesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public ProcessImplementation_NoPropertiesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getNoPropertiesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessImplementationAccess().getNoPropertiesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public ProcessImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_NoPropertiesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ProcessImplementation_OwnedAnnexSubclauseAssignment_11 extends AssignmentToken  {
	
	public ProcessImplementation_OwnedAnnexSubclauseAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getOwnedAnnexSubclauseAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ProcessImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ProcessImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ProcessImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ProcessImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ProcessImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ProcessImplementation_EndKeyword_12 extends KeywordToken  {
	
	public ProcessImplementation_EndKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getEndKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessImplementation_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessImplementation_Group_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessImplementation_Group_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessImplementation_Group_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessImplementation_Group_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ProcessImplementation_Group_5(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ProcessImplementation_NameAssignment_4(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class ProcessImplementation_IDTerminalRuleCall_13 extends UnassignedTextToken {

	public ProcessImplementation_IDTerminalRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getIDTerminalRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_EndKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class ProcessImplementation_FullStopKeyword_14 extends KeywordToken  {
	
	public ProcessImplementation_FullStopKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getFullStopKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_IDTerminalRuleCall_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class ProcessImplementation_INAMEParserRuleCall_15 extends UnassignedTextToken {

	public ProcessImplementation_INAMEParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getINAMEParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_FullStopKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ProcessImplementation_SemicolonKeyword_16 extends KeywordToken  {
	
	public ProcessImplementation_SemicolonKeyword_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessImplementationAccess().getSemicolonKeyword_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessImplementation_INAMEParserRuleCall_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProcessImplementation ****************/


/************ begin Rule ThreadGroupImplementation ****************
 *
 * ThreadGroupImplementation returns aadl2::ThreadGroupImplementation:
 * 	"thread" "group" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension
 * 	("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
 * 	ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
 * 	ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
 * 	";"))? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
 * 	ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "thread" "group" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension
// ("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class ThreadGroupImplementation_Group extends GroupToken {
	
	public ThreadGroupImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SemicolonKeyword_17(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThreadGroupImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "thread"
protected class ThreadGroupImplementation_ThreadKeyword_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_ThreadKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getThreadKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "group"
protected class ThreadGroupImplementation_GroupKeyword_1 extends KeywordToken  {
	
	public ThreadGroupImplementation_GroupKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroupKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_ThreadKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "implementation"
protected class ThreadGroupImplementation_ImplementationKeyword_2 extends KeywordToken  {
	
	public ThreadGroupImplementation_ImplementationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getImplementationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_GroupKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class ThreadGroupImplementation_OwnedRealizationAssignment_3 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedRealizationAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedRealizationAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedRealizationRealizationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_ImplementationKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class ThreadGroupImplementation_FullStopKeyword_4 extends KeywordToken  {
	
	public ThreadGroupImplementation_FullStopKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getFullStopKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedRealizationAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class ThreadGroupImplementation_NameAssignment_5 extends AssignmentToken  {
	
	public ThreadGroupImplementation_NameAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getNameAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_FullStopKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThreadGroupImplementationAccess().getNameINAMEParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getThreadGroupImplementationAccess().getNameINAMEParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ThreadGroupImplementation_Group_6 extends GroupToken {
	
	public ThreadGroupImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class ThreadGroupImplementation_OwnedExtensionAssignment_6_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedExtensionAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedExtensionAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ThreadGroupImplementation_Group_6_1 extends GroupToken {
	
	public ThreadGroupImplementation_Group_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_RightParenthesisKeyword_6_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadGroupImplementation_LeftParenthesisKeyword_6_1_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_LeftParenthesisKeyword_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getLeftParenthesisKeyword_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_LeftParenthesisKeyword_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ThreadGroupImplementation_Group_6_1_2 extends GroupToken {
	
	public ThreadGroupImplementation_Group_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadGroupImplementation_CommaKeyword_6_1_2_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_CommaKeyword_6_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getCommaKeyword_6_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_2_1 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_CommaKeyword_6_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadGroupImplementation_RightParenthesisKeyword_6_1_3 extends KeywordToken  {
	
	public ThreadGroupImplementation_RightParenthesisKeyword_6_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getRightParenthesisKeyword_6_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent |
// ownedThreadSubcomponent+=ThreadSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedDataSubcomponent+=DataSubcomponent |
// ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class ThreadGroupImplementation_Group_7 extends GroupToken {
	
	public ThreadGroupImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class ThreadGroupImplementation_SubcomponentsKeyword_7_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_SubcomponentsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSubcomponentsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"
protected class ThreadGroupImplementation_Alternatives_7_1 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent | ownedThreadSubcomponent+=ThreadSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+
protected class ThreadGroupImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedThreadGroupSubcomponentAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_OwnedThreadSubcomponentAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupImplementation_OwnedSubprogramGroupSubcomponentAssignment_7_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupImplementation_OwnedDataSubcomponentAssignment_7_1_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadGroupImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedThreadGroupSubcomponent+=ThreadGroupSubcomponent
protected class ThreadGroupImplementation_OwnedThreadGroupSubcomponentAssignment_7_1_0_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedThreadGroupSubcomponentAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedThreadGroupSubcomponentAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedThreadGroupSubcomponentThreadGroupSubcomponentParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedThreadSubcomponent+=ThreadSubcomponent
protected class ThreadGroupImplementation_OwnedThreadSubcomponentAssignment_7_1_0_1 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedThreadSubcomponentAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedThreadSubcomponentAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedThreadSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedThreadSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedThreadSubcomponentThreadSubcomponentParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class ThreadGroupImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_2 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedSubprogramSubcomponentAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
protected class ThreadGroupImplementation_OwnedSubprogramGroupSubcomponentAssignment_7_1_0_3 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedSubprogramGroupSubcomponentAssignment_7_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedSubprogramGroupSubcomponentAssignment_7_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedSubprogramGroupSubcomponentSubprogramGroupSubcomponentParserRuleCall_7_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class ThreadGroupImplementation_OwnedDataSubcomponentAssignment_7_1_0_4 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedDataSubcomponentAssignment_7_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedDataSubcomponentAssignment_7_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_7_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class ThreadGroupImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_5 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedAbstractSubcomponentAssignment_7_1_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_7_1_0_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class ThreadGroupImplementation_Group_7_1_1 extends GroupToken {
	
	public ThreadGroupImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class ThreadGroupImplementation_NoSubcomponentsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_NoSubcomponentsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getNoSubcomponentsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupImplementationAccess().getNoSubcomponentsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public ThreadGroupImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_NoSubcomponentsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))?
protected class ThreadGroupImplementation_Group_8 extends GroupToken {
	
	public ThreadGroupImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class ThreadGroupImplementation_ConnectionsKeyword_8_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_ConnectionsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getConnectionsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"
protected class ThreadGroupImplementation_Alternatives_8_1 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+
protected class ThreadGroupImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedPortConnectionAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_OwnedAccessConnectionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupImplementation_OwnedFeatureConnectionAssignment_8_1_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPortConnection+=PortConnection
protected class ThreadGroupImplementation_OwnedPortConnectionAssignment_8_1_0_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedPortConnectionAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedPortConnectionAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPortConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPortConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAccessConnection+=AccessConnection
protected class ThreadGroupImplementation_OwnedAccessConnectionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedAccessConnectionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedAccessConnectionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class ThreadGroupImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedFeatureGroupConnectionAssignment_8_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_8_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class ThreadGroupImplementation_OwnedFeatureConnectionAssignment_8_1_0_3 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedFeatureConnectionAssignment_8_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedFeatureConnectionAssignment_8_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_8_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class ThreadGroupImplementation_Group_8_1_1 extends GroupToken {
	
	public ThreadGroupImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class ThreadGroupImplementation_NoConnectionsAssignment_8_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_NoConnectionsAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getNoConnectionsAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupImplementationAccess().getNoConnectionsNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public ThreadGroupImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_NoConnectionsAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class ThreadGroupImplementation_Group_9 extends GroupToken {
	
	public ThreadGroupImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ThreadGroupImplementation_FlowsKeyword_9_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_FlowsKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getFlowsKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class ThreadGroupImplementation_Group_9_1 extends GroupToken {
	
	public ThreadGroupImplementation_Group_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SemicolonKeyword_9_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ThreadGroupImplementation_NoFlowsAssignment_9_1_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_NoFlowsAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getNoFlowsAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_FlowsKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupImplementationAccess().getNoFlowsNoneKeyword_9_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupImplementation_SemicolonKeyword_9_1_1 extends KeywordToken  {
	
	public ThreadGroupImplementation_SemicolonKeyword_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSemicolonKeyword_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_NoFlowsAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ThreadGroupImplementation_Group_10 extends GroupToken {
	
	public ThreadGroupImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ThreadGroupImplementation_ModesKeyword_10_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_ModesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getModesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ThreadGroupImplementation_Alternatives_10_1 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ThreadGroupImplementation_Alternatives_10_1_0 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedModeAssignment_10_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_OwnedModeTransitionAssignment_10_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ThreadGroupImplementation_OwnedModeAssignment_10_1_0_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedModeAssignment_10_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedModeAssignment_10_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedModeModeParserRuleCall_10_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ThreadGroupImplementation_OwnedModeTransitionAssignment_10_1_0_1 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedModeTransitionAssignment_10_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedModeTransitionAssignment_10_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_10_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ThreadGroupImplementation_Group_10_1_1 extends GroupToken {
	
	public ThreadGroupImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ThreadGroupImplementation_NoModesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_NoModesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getNoModesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_ModesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupImplementationAccess().getNoModesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public ThreadGroupImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_NoModesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ThreadGroupImplementation_Group_11 extends GroupToken {
	
	public ThreadGroupImplementation_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Alternatives_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ThreadGroupImplementation_PropertiesKeyword_11_0 extends KeywordToken  {
	
	public ThreadGroupImplementation_PropertiesKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getPropertiesKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ThreadGroupImplementation_Alternatives_11_1 extends AlternativesToken {

	public ThreadGroupImplementation_Alternatives_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getAlternatives_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_11_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ThreadGroupImplementation_OwnedPropertyAssociationAssignment_11_1_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedPropertyAssociationAssignment_11_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedPropertyAssociationAssignment_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_11_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ThreadGroupImplementation_Group_11_1_1 extends GroupToken {
	
	public ThreadGroupImplementation_Group_11_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getGroup_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_SemicolonKeyword_11_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ThreadGroupImplementation_NoPropertiesAssignment_11_1_1_0 extends AssignmentToken  {
	
	public ThreadGroupImplementation_NoPropertiesAssignment_11_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getNoPropertiesAssignment_11_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupImplementationAccess().getNoPropertiesNoneKeyword_11_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadGroupImplementation_SemicolonKeyword_11_1_1_1 extends KeywordToken  {
	
	public ThreadGroupImplementation_SemicolonKeyword_11_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSemicolonKeyword_11_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_NoPropertiesAssignment_11_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ThreadGroupImplementation_OwnedAnnexSubclauseAssignment_12 extends AssignmentToken  {
	
	public ThreadGroupImplementation_OwnedAnnexSubclauseAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getOwnedAnnexSubclauseAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupImplementation_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ThreadGroupImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ThreadGroupImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ThreadGroupImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ThreadGroupImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ThreadGroupImplementation_EndKeyword_13 extends KeywordToken  {
	
	public ThreadGroupImplementation_EndKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getEndKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupImplementation_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupImplementation_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupImplementation_Group_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupImplementation_Group_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadGroupImplementation_Group_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadGroupImplementation_Group_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ThreadGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class ThreadGroupImplementation_IDTerminalRuleCall_14 extends UnassignedTextToken {

	public ThreadGroupImplementation_IDTerminalRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getIDTerminalRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_EndKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class ThreadGroupImplementation_FullStopKeyword_15 extends KeywordToken  {
	
	public ThreadGroupImplementation_FullStopKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getFullStopKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_IDTerminalRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class ThreadGroupImplementation_INAMEParserRuleCall_16 extends UnassignedTextToken {

	public ThreadGroupImplementation_INAMEParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getINAMEParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_FullStopKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ThreadGroupImplementation_SemicolonKeyword_17 extends KeywordToken  {
	
	public ThreadGroupImplementation_SemicolonKeyword_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupImplementationAccess().getSemicolonKeyword_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupImplementation_INAMEParserRuleCall_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThreadGroupImplementation ****************/


/************ begin Rule ThreadImplementation ****************
 *
 * ThreadImplementation returns aadl2::ThreadImplementation:
 * 	"thread" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
 * 	| ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ |
 * 	noSubcomponents?="none" ";"))? ("calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ // | noSequences?=NONE
 * )? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
 * 	ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "thread" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"))? ("calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ // | noSequences?=NONE
// )? ("connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class ThreadImplementation_Group extends GroupToken {
	
	public ThreadImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SemicolonKeyword_17(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThreadImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "thread"
protected class ThreadImplementation_ThreadKeyword_0 extends KeywordToken  {
	
	public ThreadImplementation_ThreadKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getThreadKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class ThreadImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public ThreadImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_ThreadKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class ThreadImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class ThreadImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public ThreadImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class ThreadImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public ThreadImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThreadImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getThreadImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ThreadImplementation_Group_5 extends GroupToken {
	
	public ThreadImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class ThreadImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ThreadImplementation_Group_5_1 extends GroupToken {
	
	public ThreadImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public ThreadImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ThreadImplementation_Group_5_1_2 extends GroupToken {
	
	public ThreadImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public ThreadImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public ThreadImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedSubprogramSubcomponent+=SubprogramSubcomponent |
// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent | ownedDataSubcomponent+=DataSubcomponent |
// ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class ThreadImplementation_Group_6 extends GroupToken {
	
	public ThreadImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class ThreadImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public ThreadImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none"
// ";"
protected class ThreadImplementation_Alternatives_6_1 extends AlternativesToken {

	public ThreadImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSubprogramSubcomponent+=SubprogramSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent)+
protected class ThreadImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public ThreadImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_OwnedDataSubcomponentAssignment_6_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class ThreadImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedSubprogramSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedSubprogramSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
protected class ThreadImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedSubprogramGroupSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedSubprogramGroupSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramGroupSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramGroupSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedSubprogramGroupSubcomponentSubprogramGroupSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class ThreadImplementation_OwnedDataSubcomponentAssignment_6_1_0_2 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedDataSubcomponentAssignment_6_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedDataSubcomponentAssignment_6_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_6_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class ThreadImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_3 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class ThreadImplementation_Group_6_1_1 extends GroupToken {
	
	public ThreadImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class ThreadImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ThreadImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ThreadImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ // | noSequences?=NONE
// )?
protected class ThreadImplementation_Group_7 extends GroupToken {
	
	public ThreadImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedSubprogramCallSequenceAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "calls"
protected class ThreadImplementation_CallsKeyword_7_0 extends KeywordToken  {
	
	public ThreadImplementation_CallsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getCallsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedSubprogramCallSequence+=SubprogramCallSequence+
protected class ThreadImplementation_OwnedSubprogramCallSequenceAssignment_7_1 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedSubprogramCallSequenceAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedSubprogramCallSequenceAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramCallSequence",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramCallSequence");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramCallSequenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedSubprogramCallSequenceSubprogramCallSequenceParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_OwnedSubprogramCallSequenceAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_CallsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (=> "connections" ((ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))?
protected class ThreadImplementation_Group_8 extends GroupToken {
	
	public ThreadImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class ThreadImplementation_ConnectionsKeyword_8_0 extends KeywordToken  {
	
	public ThreadImplementation_ConnectionsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getConnectionsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"
protected class ThreadImplementation_Alternatives_8_1 extends AlternativesToken {

	public ThreadImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+
protected class ThreadImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public ThreadImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedPortConnectionAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_OwnedAccessConnectionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_OwnedFeatureConnectionAssignment_8_1_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPortConnection+=PortConnection
protected class ThreadImplementation_OwnedPortConnectionAssignment_8_1_0_0 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedPortConnectionAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedPortConnectionAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPortConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPortConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAccessConnection+=AccessConnection
protected class ThreadImplementation_OwnedAccessConnectionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedAccessConnectionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedAccessConnectionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class ThreadImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedFeatureGroupConnectionAssignment_8_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_8_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class ThreadImplementation_OwnedFeatureConnectionAssignment_8_1_0_3 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedFeatureConnectionAssignment_8_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedFeatureConnectionAssignment_8_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_8_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class ThreadImplementation_Group_8_1_1 extends GroupToken {
	
	public ThreadImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class ThreadImplementation_NoConnectionsAssignment_8_1_1_0 extends AssignmentToken  {
	
	public ThreadImplementation_NoConnectionsAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getNoConnectionsAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadImplementationAccess().getNoConnectionsNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public ThreadImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_NoConnectionsAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class ThreadImplementation_Group_9 extends GroupToken {
	
	public ThreadImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ThreadImplementation_FlowsKeyword_9_0 extends KeywordToken  {
	
	public ThreadImplementation_FlowsKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getFlowsKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class ThreadImplementation_Group_9_1 extends GroupToken {
	
	public ThreadImplementation_Group_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SemicolonKeyword_9_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ThreadImplementation_NoFlowsAssignment_9_1_0 extends AssignmentToken  {
	
	public ThreadImplementation_NoFlowsAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getNoFlowsAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_FlowsKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadImplementationAccess().getNoFlowsNoneKeyword_9_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadImplementation_SemicolonKeyword_9_1_1 extends KeywordToken  {
	
	public ThreadImplementation_SemicolonKeyword_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSemicolonKeyword_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_NoFlowsAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ThreadImplementation_Group_10 extends GroupToken {
	
	public ThreadImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ThreadImplementation_ModesKeyword_10_0 extends KeywordToken  {
	
	public ThreadImplementation_ModesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getModesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ThreadImplementation_Alternatives_10_1 extends AlternativesToken {

	public ThreadImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ThreadImplementation_Alternatives_10_1_0 extends AlternativesToken {

	public ThreadImplementation_Alternatives_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedModeAssignment_10_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_OwnedModeTransitionAssignment_10_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ThreadImplementation_OwnedModeAssignment_10_1_0_0 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedModeAssignment_10_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedModeAssignment_10_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedModeModeParserRuleCall_10_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ThreadImplementation_OwnedModeTransitionAssignment_10_1_0_1 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedModeTransitionAssignment_10_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedModeTransitionAssignment_10_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_10_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ThreadImplementation_Group_10_1_1 extends GroupToken {
	
	public ThreadImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ThreadImplementation_NoModesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public ThreadImplementation_NoModesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getNoModesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_ModesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadImplementationAccess().getNoModesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public ThreadImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_NoModesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ThreadImplementation_Group_11 extends GroupToken {
	
	public ThreadImplementation_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Alternatives_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ThreadImplementation_PropertiesKeyword_11_0 extends KeywordToken  {
	
	public ThreadImplementation_PropertiesKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getPropertiesKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ThreadImplementation_Alternatives_11_1 extends AlternativesToken {

	public ThreadImplementation_Alternatives_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getAlternatives_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_11_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ThreadImplementation_OwnedPropertyAssociationAssignment_11_1_0 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedPropertyAssociationAssignment_11_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedPropertyAssociationAssignment_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_11_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ThreadImplementation_Group_11_1_1 extends GroupToken {
	
	public ThreadImplementation_Group_11_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getGroup_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_SemicolonKeyword_11_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ThreadImplementation_NoPropertiesAssignment_11_1_1_0 extends AssignmentToken  {
	
	public ThreadImplementation_NoPropertiesAssignment_11_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getNoPropertiesAssignment_11_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadImplementationAccess().getNoPropertiesNoneKeyword_11_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ThreadImplementation_SemicolonKeyword_11_1_1_1 extends KeywordToken  {
	
	public ThreadImplementation_SemicolonKeyword_11_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSemicolonKeyword_11_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_NoPropertiesAssignment_11_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ThreadImplementation_OwnedAnnexSubclauseAssignment_12 extends AssignmentToken  {
	
	public ThreadImplementation_OwnedAnnexSubclauseAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getOwnedAnnexSubclauseAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadImplementation_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ThreadImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ThreadImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ThreadImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ThreadImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ThreadImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ThreadImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 8: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ThreadImplementation_EndKeyword_13 extends KeywordToken  {
	
	public ThreadImplementation_EndKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getEndKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadImplementation_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadImplementation_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadImplementation_Group_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadImplementation_Group_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ThreadImplementation_Group_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ThreadImplementation_Group_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ThreadImplementation_Group_5(lastRuleCallOrigin, this, 7, inst);
			case 8: return new ThreadImplementation_NameAssignment_4(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// ID
protected class ThreadImplementation_IDTerminalRuleCall_14 extends UnassignedTextToken {

	public ThreadImplementation_IDTerminalRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getIDTerminalRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_EndKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class ThreadImplementation_FullStopKeyword_15 extends KeywordToken  {
	
	public ThreadImplementation_FullStopKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getFullStopKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_IDTerminalRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class ThreadImplementation_INAMEParserRuleCall_16 extends UnassignedTextToken {

	public ThreadImplementation_INAMEParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getINAMEParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_FullStopKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ThreadImplementation_SemicolonKeyword_17 extends KeywordToken  {
	
	public ThreadImplementation_SemicolonKeyword_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadImplementationAccess().getSemicolonKeyword_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadImplementation_INAMEParserRuleCall_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThreadImplementation ****************/


/************ begin Rule SubprogramImplementation ****************
 *
 * SubprogramImplementation returns aadl2::SubprogramImplementation:
 * 	"subprogram" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent)+ |
 * 	noSubcomponents?="none" ";"))? ("calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ //	| noSequences?=NONE
 * )? ("connections" ((ownedPortConnection+=PortConnection | ownedParameterConnection+=ParameterConnection |
 * 	ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
 * 	ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes"
 * 	((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "subprogram" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent)+ | noSubcomponents?="none"
// ";"))? ("calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ //	| noSequences?=NONE
// )? ("connections" ((ownedPortConnection+=PortConnection | ownedParameterConnection+=ParameterConnection |
// ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes"
// ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class SubprogramImplementation_Group extends GroupToken {
	
	public SubprogramImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SemicolonKeyword_17(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "subprogram"
protected class SubprogramImplementation_SubprogramKeyword_0 extends KeywordToken  {
	
	public SubprogramImplementation_SubprogramKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSubprogramKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class SubprogramImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public SubprogramImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SubprogramKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class SubprogramImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class SubprogramImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public SubprogramImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class SubprogramImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public SubprogramImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSubprogramImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SubprogramImplementation_Group_5 extends GroupToken {
	
	public SubprogramImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class SubprogramImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SubprogramImplementation_Group_5_1 extends GroupToken {
	
	public SubprogramImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public SubprogramImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SubprogramImplementation_Group_5_1_2 extends GroupToken {
	
	public SubprogramImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public SubprogramImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public SubprogramImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent)+ |
// noSubcomponents?="none" ";"))?
protected class SubprogramImplementation_Group_6 extends GroupToken {
	
	public SubprogramImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class SubprogramImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public SubprogramImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent)+ | noSubcomponents?="none"
// ";"
protected class SubprogramImplementation_Alternatives_6_1 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent)+
protected class SubprogramImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_OwnedDataSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class SubprogramImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class SubprogramImplementation_OwnedDataSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedDataSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedDataSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class SubprogramImplementation_Group_6_1_1 extends GroupToken {
	
	public SubprogramImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class SubprogramImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public SubprogramImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public SubprogramImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "calls" ownedSubprogramCallSequence+=SubprogramCallSequence+ //	| noSequences?=NONE
// )?
protected class SubprogramImplementation_Group_7 extends GroupToken {
	
	public SubprogramImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedSubprogramCallSequenceAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "calls"
protected class SubprogramImplementation_CallsKeyword_7_0 extends KeywordToken  {
	
	public SubprogramImplementation_CallsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getCallsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedSubprogramCallSequence+=SubprogramCallSequence+
protected class SubprogramImplementation_OwnedSubprogramCallSequenceAssignment_7_1 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedSubprogramCallSequenceAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedSubprogramCallSequenceAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramCallSequence",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramCallSequence");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramCallSequenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedSubprogramCallSequenceSubprogramCallSequenceParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedSubprogramCallSequenceAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_CallsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (=> "connections" ((ownedPortConnection+=PortConnection | ownedParameterConnection+=ParameterConnection |
// ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))?
protected class SubprogramImplementation_Group_8 extends GroupToken {
	
	public SubprogramImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class SubprogramImplementation_ConnectionsKeyword_8_0 extends KeywordToken  {
	
	public SubprogramImplementation_ConnectionsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getConnectionsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedParameterConnection+=ParameterConnection |
// ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"
protected class SubprogramImplementation_Alternatives_8_1 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedPortConnection+=PortConnection | ownedParameterConnection+=ParameterConnection |
// ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+
protected class SubprogramImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedPortConnectionAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_OwnedParameterConnectionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_OwnedAccessConnectionAssignment_8_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramImplementation_OwnedFeatureConnectionAssignment_8_1_0_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPortConnection+=PortConnection
protected class SubprogramImplementation_OwnedPortConnectionAssignment_8_1_0_0 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedPortConnectionAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedPortConnectionAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPortConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPortConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedPortConnectionPortConnectionParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedParameterConnection+=ParameterConnection
protected class SubprogramImplementation_OwnedParameterConnectionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedParameterConnectionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedParameterConnectionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedParameterConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedParameterConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedParameterConnectionParameterConnectionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAccessConnection+=AccessConnection
protected class SubprogramImplementation_OwnedAccessConnectionAssignment_8_1_0_2 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedAccessConnectionAssignment_8_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedAccessConnectionAssignment_8_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_8_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class SubprogramImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_3 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedFeatureGroupConnectionAssignment_8_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_8_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class SubprogramImplementation_OwnedFeatureConnectionAssignment_8_1_0_4 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedFeatureConnectionAssignment_8_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedFeatureConnectionAssignment_8_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_8_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class SubprogramImplementation_Group_8_1_1 extends GroupToken {
	
	public SubprogramImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class SubprogramImplementation_NoConnectionsAssignment_8_1_1_0 extends AssignmentToken  {
	
	public SubprogramImplementation_NoConnectionsAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getNoConnectionsAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramImplementationAccess().getNoConnectionsNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public SubprogramImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_NoConnectionsAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class SubprogramImplementation_Group_9 extends GroupToken {
	
	public SubprogramImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class SubprogramImplementation_FlowsKeyword_9_0 extends KeywordToken  {
	
	public SubprogramImplementation_FlowsKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getFlowsKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class SubprogramImplementation_Group_9_1 extends GroupToken {
	
	public SubprogramImplementation_Group_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SemicolonKeyword_9_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class SubprogramImplementation_NoFlowsAssignment_9_1_0 extends AssignmentToken  {
	
	public SubprogramImplementation_NoFlowsAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getNoFlowsAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_FlowsKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramImplementationAccess().getNoFlowsNoneKeyword_9_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramImplementation_SemicolonKeyword_9_1_1 extends KeywordToken  {
	
	public SubprogramImplementation_SemicolonKeyword_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSemicolonKeyword_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_NoFlowsAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class SubprogramImplementation_Group_10 extends GroupToken {
	
	public SubprogramImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class SubprogramImplementation_ModesKeyword_10_0 extends KeywordToken  {
	
	public SubprogramImplementation_ModesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getModesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class SubprogramImplementation_Alternatives_10_1 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class SubprogramImplementation_Alternatives_10_1_0 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedModeAssignment_10_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_OwnedModeTransitionAssignment_10_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class SubprogramImplementation_OwnedModeAssignment_10_1_0_0 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedModeAssignment_10_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedModeAssignment_10_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedModeModeParserRuleCall_10_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class SubprogramImplementation_OwnedModeTransitionAssignment_10_1_0_1 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedModeTransitionAssignment_10_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedModeTransitionAssignment_10_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_10_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class SubprogramImplementation_Group_10_1_1 extends GroupToken {
	
	public SubprogramImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class SubprogramImplementation_NoModesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public SubprogramImplementation_NoModesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getNoModesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_ModesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramImplementationAccess().getNoModesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public SubprogramImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_NoModesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class SubprogramImplementation_Group_11 extends GroupToken {
	
	public SubprogramImplementation_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Alternatives_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class SubprogramImplementation_PropertiesKeyword_11_0 extends KeywordToken  {
	
	public SubprogramImplementation_PropertiesKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getPropertiesKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class SubprogramImplementation_Alternatives_11_1 extends AlternativesToken {

	public SubprogramImplementation_Alternatives_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getAlternatives_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_11_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SubprogramImplementation_OwnedPropertyAssociationAssignment_11_1_0 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedPropertyAssociationAssignment_11_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedPropertyAssociationAssignment_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_11_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class SubprogramImplementation_Group_11_1_1 extends GroupToken {
	
	public SubprogramImplementation_Group_11_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getGroup_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_SemicolonKeyword_11_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class SubprogramImplementation_NoPropertiesAssignment_11_1_1_0 extends AssignmentToken  {
	
	public SubprogramImplementation_NoPropertiesAssignment_11_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getNoPropertiesAssignment_11_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramImplementationAccess().getNoPropertiesNoneKeyword_11_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramImplementation_SemicolonKeyword_11_1_1_1 extends KeywordToken  {
	
	public SubprogramImplementation_SemicolonKeyword_11_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSemicolonKeyword_11_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_NoPropertiesAssignment_11_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class SubprogramImplementation_OwnedAnnexSubclauseAssignment_12 extends AssignmentToken  {
	
	public SubprogramImplementation_OwnedAnnexSubclauseAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getOwnedAnnexSubclauseAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramImplementation_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SubprogramImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SubprogramImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SubprogramImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SubprogramImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 8: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class SubprogramImplementation_EndKeyword_13 extends KeywordToken  {
	
	public SubprogramImplementation_EndKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getEndKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramImplementation_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramImplementation_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramImplementation_Group_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramImplementation_Group_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramImplementation_Group_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SubprogramImplementation_Group_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SubprogramImplementation_Group_5(lastRuleCallOrigin, this, 7, inst);
			case 8: return new SubprogramImplementation_NameAssignment_4(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// ID
protected class SubprogramImplementation_IDTerminalRuleCall_14 extends UnassignedTextToken {

	public SubprogramImplementation_IDTerminalRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getIDTerminalRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_EndKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class SubprogramImplementation_FullStopKeyword_15 extends KeywordToken  {
	
	public SubprogramImplementation_FullStopKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getFullStopKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_IDTerminalRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class SubprogramImplementation_INAMEParserRuleCall_16 extends UnassignedTextToken {

	public SubprogramImplementation_INAMEParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getINAMEParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_FullStopKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class SubprogramImplementation_SemicolonKeyword_17 extends KeywordToken  {
	
	public SubprogramImplementation_SemicolonKeyword_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramImplementationAccess().getSemicolonKeyword_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramImplementation_INAMEParserRuleCall_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramImplementation ****************/


/************ begin Rule SubprogramGroupImplementation ****************
 *
 * SubprogramGroupImplementation returns aadl2::SubprogramGroupImplementation:
 * 	"subprogram" "group" "implementation" ownedRealization=Realization "." name=INAME
 * 	(ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedSubprogramSubcomponent+=SubprogramSubcomponent // allow-errata:  |ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
 * 	| ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
 * 	((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
 * 	ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "subprogram" "group" "implementation" ownedRealization=Realization "." name=INAME
// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedSubprogramSubcomponent+=SubprogramSubcomponent // allow-errata:  |ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
// | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
// ((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class SubprogramGroupImplementation_Group extends GroupToken {
	
	public SubprogramGroupImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_SemicolonKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramGroupImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "subprogram"
protected class SubprogramGroupImplementation_SubprogramKeyword_0 extends KeywordToken  {
	
	public SubprogramGroupImplementation_SubprogramKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getSubprogramKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "group"
protected class SubprogramGroupImplementation_GroupKeyword_1 extends KeywordToken  {
	
	public SubprogramGroupImplementation_GroupKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroupKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_SubprogramKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "implementation"
protected class SubprogramGroupImplementation_ImplementationKeyword_2 extends KeywordToken  {
	
	public SubprogramGroupImplementation_ImplementationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getImplementationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_GroupKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class SubprogramGroupImplementation_OwnedRealizationAssignment_3 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedRealizationAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedRealizationAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedRealizationRealizationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_ImplementationKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class SubprogramGroupImplementation_FullStopKeyword_4 extends KeywordToken  {
	
	public SubprogramGroupImplementation_FullStopKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getFullStopKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedRealizationAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class SubprogramGroupImplementation_NameAssignment_5 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_NameAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getNameAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_FullStopKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramGroupImplementationAccess().getNameINAMEParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSubprogramGroupImplementationAccess().getNameINAMEParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SubprogramGroupImplementation_Group_6 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class SubprogramGroupImplementation_OwnedExtensionAssignment_6_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedExtensionAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedExtensionAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SubprogramGroupImplementation_Group_6_1 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_RightParenthesisKeyword_6_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramGroupImplementation_LeftParenthesisKeyword_6_1_0 extends KeywordToken  {
	
	public SubprogramGroupImplementation_LeftParenthesisKeyword_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getLeftParenthesisKeyword_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_LeftParenthesisKeyword_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SubprogramGroupImplementation_Group_6_1_2 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramGroupImplementation_CommaKeyword_6_1_2_0 extends KeywordToken  {
	
	public SubprogramGroupImplementation_CommaKeyword_6_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getCommaKeyword_6_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_2_1 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_CommaKeyword_6_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramGroupImplementation_RightParenthesisKeyword_6_1_3 extends KeywordToken  {
	
	public SubprogramGroupImplementation_RightParenthesisKeyword_6_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getRightParenthesisKeyword_6_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedSubprogramSubcomponent+=SubprogramSubcomponent // allow-errata:  |ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
// | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class SubprogramGroupImplementation_Group_7 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class SubprogramGroupImplementation_SubcomponentsKeyword_7_0 extends KeywordToken  {
	
	public SubprogramGroupImplementation_SubcomponentsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getSubcomponentsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSubprogramSubcomponent+=SubprogramSubcomponent // allow-errata:  |ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
// | ownedAbstractSubcomponent+=AbstractSubcomponent)+ | noSubcomponents?="none" ";"
protected class SubprogramGroupImplementation_Alternatives_7_1 extends AlternativesToken {

	public SubprogramGroupImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedSubprogramSubcomponent+=SubprogramSubcomponent // allow-errata:  |ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramGroupSubcomponent+=SubprogramGroupSubcomponent
// | ownedAbstractSubcomponent+=AbstractSubcomponent)+
protected class SubprogramGroupImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public SubprogramGroupImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class SubprogramGroupImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedSubprogramSubcomponentAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class SubprogramGroupImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_1 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedAbstractSubcomponentAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class SubprogramGroupImplementation_Group_7_1_1 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class SubprogramGroupImplementation_NoSubcomponentsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_NoSubcomponentsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getNoSubcomponentsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupImplementationAccess().getNoSubcomponentsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public SubprogramGroupImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_NoSubcomponentsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))?
protected class SubprogramGroupImplementation_Group_8 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class SubprogramGroupImplementation_ConnectionsKeyword_8_0 extends KeywordToken  {
	
	public SubprogramGroupImplementation_ConnectionsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getConnectionsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"
protected class SubprogramGroupImplementation_Alternatives_8_1 extends AlternativesToken {

	public SubprogramGroupImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+
protected class SubprogramGroupImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public SubprogramGroupImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedAccessConnectionAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupImplementation_OwnedFeatureConnectionAssignment_8_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAccessConnection+=AccessConnection
protected class SubprogramGroupImplementation_OwnedAccessConnectionAssignment_8_1_0_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedAccessConnectionAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedAccessConnectionAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class SubprogramGroupImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedFeatureGroupConnectionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class SubprogramGroupImplementation_OwnedFeatureConnectionAssignment_8_1_0_2 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedFeatureConnectionAssignment_8_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedFeatureConnectionAssignment_8_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_8_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class SubprogramGroupImplementation_Group_8_1_1 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class SubprogramGroupImplementation_NoConnectionsAssignment_8_1_1_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_NoConnectionsAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getNoConnectionsAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupImplementationAccess().getNoConnectionsNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public SubprogramGroupImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_NoConnectionsAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class SubprogramGroupImplementation_Group_9 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class SubprogramGroupImplementation_PropertiesKeyword_9_0 extends KeywordToken  {
	
	public SubprogramGroupImplementation_PropertiesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getPropertiesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class SubprogramGroupImplementation_Alternatives_9_1 extends AlternativesToken {

	public SubprogramGroupImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedPropertyAssociationAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SubprogramGroupImplementation_OwnedPropertyAssociationAssignment_9_1_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedPropertyAssociationAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedPropertyAssociationAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_9_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedPropertyAssociationAssignment_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_PropertiesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class SubprogramGroupImplementation_Group_9_1_1 extends GroupToken {
	
	public SubprogramGroupImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class SubprogramGroupImplementation_NoPropertiesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_NoPropertiesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getNoPropertiesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_PropertiesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupImplementationAccess().getNoPropertiesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class SubprogramGroupImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public SubprogramGroupImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_NoPropertiesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class SubprogramGroupImplementation_OwnedAnnexSubclauseAssignment_10 extends AssignmentToken  {
	
	public SubprogramGroupImplementation_OwnedAnnexSubclauseAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getOwnedAnnexSubclauseAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedAnnexSubclauseAssignment_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SubprogramGroupImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SubprogramGroupImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SubprogramGroupImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SubprogramGroupImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class SubprogramGroupImplementation_EndKeyword_11 extends KeywordToken  {
	
	public SubprogramGroupImplementation_EndKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getEndKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_OwnedAnnexSubclauseAssignment_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramGroupImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SubprogramGroupImplementation_NameAssignment_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ID
protected class SubprogramGroupImplementation_IDTerminalRuleCall_12 extends UnassignedTextToken {

	public SubprogramGroupImplementation_IDTerminalRuleCall_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getIDTerminalRuleCall_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_EndKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class SubprogramGroupImplementation_FullStopKeyword_13 extends KeywordToken  {
	
	public SubprogramGroupImplementation_FullStopKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getFullStopKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_IDTerminalRuleCall_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class SubprogramGroupImplementation_INAMEParserRuleCall_14 extends UnassignedTextToken {

	public SubprogramGroupImplementation_INAMEParserRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getINAMEParserRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_FullStopKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class SubprogramGroupImplementation_SemicolonKeyword_15 extends KeywordToken  {
	
	public SubprogramGroupImplementation_SemicolonKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupImplementationAccess().getSemicolonKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupImplementation_INAMEParserRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramGroupImplementation ****************/


/************ begin Rule ProcessorImplementation ****************
 *
 * ProcessorImplementation returns aadl2::ProcessorImplementation:
 * 	"processor" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedMemorySubcomponent+=MemorySubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent |
 * 	ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
 * 	ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
 * 	((ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection | 
 * 	| ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "processor" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedMemorySubcomponent+=MemorySubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
// ((ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection | 
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class ProcessorImplementation_Group extends GroupToken {
	
	public ProcessorImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SemicolonKeyword_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessorImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "processor"
protected class ProcessorImplementation_ProcessorKeyword_0 extends KeywordToken  {
	
	public ProcessorImplementation_ProcessorKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getProcessorKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class ProcessorImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public ProcessorImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_ProcessorKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class ProcessorImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class ProcessorImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public ProcessorImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class ProcessorImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public ProcessorImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessorImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getProcessorImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ProcessorImplementation_Group_5 extends GroupToken {
	
	public ProcessorImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class ProcessorImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ProcessorImplementation_Group_5_1 extends GroupToken {
	
	public ProcessorImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessorImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public ProcessorImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ProcessorImplementation_Group_5_1_2 extends GroupToken {
	
	public ProcessorImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessorImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public ProcessorImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessorImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public ProcessorImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedMemorySubcomponent+=MemorySubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class ProcessorImplementation_Group_6 extends GroupToken {
	
	public ProcessorImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class ProcessorImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public ProcessorImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMemorySubcomponent+=MemorySubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+ | noSubcomponents?="none" ";"
protected class ProcessorImplementation_Alternatives_6_1 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMemorySubcomponent+=MemorySubcomponent | ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedBusSubcomponent+=BusSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+
protected class ProcessorImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedMemorySubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_OwnedBusSubcomponentAssignment_6_1_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedMemorySubcomponent+=MemorySubcomponent
protected class ProcessorImplementation_OwnedMemorySubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedMemorySubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedMemorySubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemorySubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemorySubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemorySubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedMemorySubcomponentMemorySubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class ProcessorImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusSubcomponent+=BusSubcomponent
protected class ProcessorImplementation_OwnedBusSubcomponentAssignment_6_1_0_2 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedBusSubcomponentAssignment_6_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedBusSubcomponentAssignment_6_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedBusSubcomponentBusSubcomponentParserRuleCall_6_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
protected class ProcessorImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_3 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedVirtualBusSubcomponentAssignment_6_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedVirtualBusSubcomponentVirtualBusSubcomponentParserRuleCall_6_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent
protected class ProcessorImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_4 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedVirtualProcessorSubcomponentAssignment_6_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedVirtualProcessorSubcomponentAssignment_6_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedVirtualProcessorSubcomponentVirtualProcessorSubcomponentParserRuleCall_6_1_0_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class ProcessorImplementation_Group_6_1_1 extends GroupToken {
	
	public ProcessorImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class ProcessorImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public ProcessorImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public ProcessorImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection | 
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))?
protected class ProcessorImplementation_Group_7 extends GroupToken {
	
	public ProcessorImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class ProcessorImplementation_ConnectionsKeyword_7_0 extends KeywordToken  {
	
	public ProcessorImplementation_ConnectionsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getConnectionsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection | 
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"
protected class ProcessorImplementation_Alternatives_7_1 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection | 
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+
protected class ProcessorImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedAccessConnectionAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_OwnedFeatureConnectionAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAccessConnection+=AccessConnection
protected class ProcessorImplementation_OwnedAccessConnectionAssignment_7_1_0_0 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedAccessConnectionAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedAccessConnectionAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class ProcessorImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedFeatureGroupConnectionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class ProcessorImplementation_OwnedFeatureConnectionAssignment_7_1_0_2 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedFeatureConnectionAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedFeatureConnectionAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class ProcessorImplementation_Group_7_1_1 extends GroupToken {
	
	public ProcessorImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class ProcessorImplementation_NoConnectionsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public ProcessorImplementation_NoConnectionsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getNoConnectionsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorImplementationAccess().getNoConnectionsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public ProcessorImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_NoConnectionsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class ProcessorImplementation_Group_8 extends GroupToken {
	
	public ProcessorImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class ProcessorImplementation_FlowsKeyword_8_0 extends KeywordToken  {
	
	public ProcessorImplementation_FlowsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getFlowsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class ProcessorImplementation_Group_8_1 extends GroupToken {
	
	public ProcessorImplementation_Group_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SemicolonKeyword_8_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class ProcessorImplementation_NoFlowsAssignment_8_1_0 extends AssignmentToken  {
	
	public ProcessorImplementation_NoFlowsAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getNoFlowsAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_FlowsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorImplementationAccess().getNoFlowsNoneKeyword_8_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorImplementation_SemicolonKeyword_8_1_1 extends KeywordToken  {
	
	public ProcessorImplementation_SemicolonKeyword_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSemicolonKeyword_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_NoFlowsAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class ProcessorImplementation_Group_9 extends GroupToken {
	
	public ProcessorImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class ProcessorImplementation_ModesKeyword_9_0 extends KeywordToken  {
	
	public ProcessorImplementation_ModesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getModesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class ProcessorImplementation_Alternatives_9_1 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class ProcessorImplementation_Alternatives_9_1_0 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedModeAssignment_9_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_OwnedModeTransitionAssignment_9_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class ProcessorImplementation_OwnedModeAssignment_9_1_0_0 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedModeAssignment_9_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedModeAssignment_9_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedModeModeParserRuleCall_9_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class ProcessorImplementation_OwnedModeTransitionAssignment_9_1_0_1 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedModeTransitionAssignment_9_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedModeTransitionAssignment_9_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_9_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class ProcessorImplementation_Group_9_1_1 extends GroupToken {
	
	public ProcessorImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class ProcessorImplementation_NoModesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public ProcessorImplementation_NoModesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getNoModesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_ModesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorImplementationAccess().getNoModesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public ProcessorImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_NoModesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class ProcessorImplementation_Group_10 extends GroupToken {
	
	public ProcessorImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class ProcessorImplementation_PropertiesKeyword_10_0 extends KeywordToken  {
	
	public ProcessorImplementation_PropertiesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getPropertiesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class ProcessorImplementation_Alternatives_10_1 extends AlternativesToken {

	public ProcessorImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class ProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedPropertyAssociationAssignment_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_10_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class ProcessorImplementation_Group_10_1_1 extends GroupToken {
	
	public ProcessorImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class ProcessorImplementation_NoPropertiesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public ProcessorImplementation_NoPropertiesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getNoPropertiesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorImplementationAccess().getNoPropertiesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ProcessorImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public ProcessorImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_NoPropertiesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class ProcessorImplementation_OwnedAnnexSubclauseAssignment_11 extends AssignmentToken  {
	
	public ProcessorImplementation_OwnedAnnexSubclauseAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getOwnedAnnexSubclauseAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ProcessorImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ProcessorImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new ProcessorImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new ProcessorImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class ProcessorImplementation_EndKeyword_12 extends KeywordToken  {
	
	public ProcessorImplementation_EndKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getEndKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorImplementation_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorImplementation_Group_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorImplementation_Group_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorImplementation_Group_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ProcessorImplementation_Group_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ProcessorImplementation_Group_5(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ProcessorImplementation_NameAssignment_4(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class ProcessorImplementation_IDTerminalRuleCall_13 extends UnassignedTextToken {

	public ProcessorImplementation_IDTerminalRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getIDTerminalRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_EndKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class ProcessorImplementation_FullStopKeyword_14 extends KeywordToken  {
	
	public ProcessorImplementation_FullStopKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getFullStopKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_IDTerminalRuleCall_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class ProcessorImplementation_INAMEParserRuleCall_15 extends UnassignedTextToken {

	public ProcessorImplementation_INAMEParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getINAMEParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_FullStopKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class ProcessorImplementation_SemicolonKeyword_16 extends KeywordToken  {
	
	public ProcessorImplementation_SemicolonKeyword_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorImplementationAccess().getSemicolonKeyword_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorImplementation_INAMEParserRuleCall_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProcessorImplementation ****************/


/************ begin Rule VirtualProcessorImplementation ****************
 *
 * VirtualProcessorImplementation returns aadl2::VirtualProcessorImplementation:
 * 	"virtual" "processor" "implementation" ownedRealization=Realization "." name=INAME
 * 	(ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
 * 	ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
 * 	ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+ | noSubcomponents?="none" ";"))? ("flows"
 * 	(noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
 * 	("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "virtual" "processor" "implementation" ownedRealization=Realization "." name=INAME
// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+
// | noSubcomponents?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class VirtualProcessorImplementation_Group extends GroupToken {
	
	public VirtualProcessorImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_SemicolonKeyword_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVirtualProcessorImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "virtual"
protected class VirtualProcessorImplementation_VirtualKeyword_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_VirtualKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getVirtualKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "processor"
protected class VirtualProcessorImplementation_ProcessorKeyword_1 extends KeywordToken  {
	
	public VirtualProcessorImplementation_ProcessorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getProcessorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_VirtualKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "implementation"
protected class VirtualProcessorImplementation_ImplementationKeyword_2 extends KeywordToken  {
	
	public VirtualProcessorImplementation_ImplementationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getImplementationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_ProcessorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class VirtualProcessorImplementation_OwnedRealizationAssignment_3 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedRealizationAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedRealizationAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedRealizationRealizationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_ImplementationKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class VirtualProcessorImplementation_FullStopKeyword_4 extends KeywordToken  {
	
	public VirtualProcessorImplementation_FullStopKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getFullStopKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedRealizationAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class VirtualProcessorImplementation_NameAssignment_5 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_NameAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getNameAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_FullStopKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVirtualProcessorImplementationAccess().getNameINAMEParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVirtualProcessorImplementationAccess().getNameINAMEParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class VirtualProcessorImplementation_Group_6 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class VirtualProcessorImplementation_OwnedExtensionAssignment_6_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedExtensionAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedExtensionAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class VirtualProcessorImplementation_Group_6_1 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_RightParenthesisKeyword_6_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualProcessorImplementation_LeftParenthesisKeyword_6_1_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_LeftParenthesisKeyword_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getLeftParenthesisKeyword_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_1 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_LeftParenthesisKeyword_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class VirtualProcessorImplementation_Group_6_1_2 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualProcessorImplementation_CommaKeyword_6_1_2_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_CommaKeyword_6_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getCommaKeyword_6_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_2_1 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_CommaKeyword_6_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualProcessorImplementation_RightParenthesisKeyword_6_1_3 extends KeywordToken  {
	
	public VirtualProcessorImplementation_RightParenthesisKeyword_6_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getRightParenthesisKeyword_6_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent | ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+
// | noSubcomponents?="none" ";"))?
protected class VirtualProcessorImplementation_Group_7 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class VirtualProcessorImplementation_SubcomponentsKeyword_7_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_SubcomponentsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getSubcomponentsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+ | noSubcomponents?="none" ";"
protected class VirtualProcessorImplementation_Alternatives_7_1 extends AlternativesToken {

	public VirtualProcessorImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent |
// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent)+
protected class VirtualProcessorImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public VirtualProcessorImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_OwnedVirtualBusSubcomponentAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorImplementation_OwnedVirtualProcessorSubcomponentAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class VirtualProcessorImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedAbstractSubcomponentAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
protected class VirtualProcessorImplementation_OwnedVirtualBusSubcomponentAssignment_7_1_0_1 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedVirtualBusSubcomponentAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedVirtualBusSubcomponentAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedVirtualBusSubcomponentVirtualBusSubcomponentParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualProcessorSubcomponent+=VirtualProcessorSubcomponent
protected class VirtualProcessorImplementation_OwnedVirtualProcessorSubcomponentAssignment_7_1_0_2 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedVirtualProcessorSubcomponentAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedVirtualProcessorSubcomponentAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualProcessorSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualProcessorSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedVirtualProcessorSubcomponentVirtualProcessorSubcomponentParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class VirtualProcessorImplementation_Group_7_1_1 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class VirtualProcessorImplementation_NoSubcomponentsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_NoSubcomponentsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getNoSubcomponentsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorImplementationAccess().getNoSubcomponentsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public VirtualProcessorImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_NoSubcomponentsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class VirtualProcessorImplementation_Group_8 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class VirtualProcessorImplementation_FlowsKeyword_8_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_FlowsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getFlowsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class VirtualProcessorImplementation_Group_8_1 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_SemicolonKeyword_8_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class VirtualProcessorImplementation_NoFlowsAssignment_8_1_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_NoFlowsAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getNoFlowsAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_FlowsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorImplementationAccess().getNoFlowsNoneKeyword_8_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorImplementation_SemicolonKeyword_8_1_1 extends KeywordToken  {
	
	public VirtualProcessorImplementation_SemicolonKeyword_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getSemicolonKeyword_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_NoFlowsAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class VirtualProcessorImplementation_Group_9 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class VirtualProcessorImplementation_ModesKeyword_9_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_ModesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getModesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class VirtualProcessorImplementation_Alternatives_9_1 extends AlternativesToken {

	public VirtualProcessorImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class VirtualProcessorImplementation_Alternatives_9_1_0 extends AlternativesToken {

	public VirtualProcessorImplementation_Alternatives_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getAlternatives_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedModeAssignment_9_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_OwnedModeTransitionAssignment_9_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class VirtualProcessorImplementation_OwnedModeAssignment_9_1_0_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedModeAssignment_9_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedModeAssignment_9_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedModeModeParserRuleCall_9_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class VirtualProcessorImplementation_OwnedModeTransitionAssignment_9_1_0_1 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedModeTransitionAssignment_9_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedModeTransitionAssignment_9_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_9_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class VirtualProcessorImplementation_Group_9_1_1 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class VirtualProcessorImplementation_NoModesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_NoModesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getNoModesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_ModesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorImplementationAccess().getNoModesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public VirtualProcessorImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_NoModesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class VirtualProcessorImplementation_Group_10 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class VirtualProcessorImplementation_PropertiesKeyword_10_0 extends KeywordToken  {
	
	public VirtualProcessorImplementation_PropertiesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getPropertiesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class VirtualProcessorImplementation_Alternatives_10_1 extends AlternativesToken {

	public VirtualProcessorImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class VirtualProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedPropertyAssociationAssignment_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_10_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class VirtualProcessorImplementation_Group_10_1_1 extends GroupToken {
	
	public VirtualProcessorImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class VirtualProcessorImplementation_NoPropertiesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_NoPropertiesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getNoPropertiesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorImplementationAccess().getNoPropertiesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualProcessorImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public VirtualProcessorImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_NoPropertiesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class VirtualProcessorImplementation_OwnedAnnexSubclauseAssignment_11 extends AssignmentToken  {
	
	public VirtualProcessorImplementation_OwnedAnnexSubclauseAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getOwnedAnnexSubclauseAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new VirtualProcessorImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new VirtualProcessorImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new VirtualProcessorImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new VirtualProcessorImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class VirtualProcessorImplementation_EndKeyword_12 extends KeywordToken  {
	
	public VirtualProcessorImplementation_EndKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getEndKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorImplementation_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorImplementation_Group_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorImplementation_Group_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualProcessorImplementation_Group_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new VirtualProcessorImplementation_Group_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new VirtualProcessorImplementation_NameAssignment_5(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class VirtualProcessorImplementation_IDTerminalRuleCall_13 extends UnassignedTextToken {

	public VirtualProcessorImplementation_IDTerminalRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getIDTerminalRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_EndKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class VirtualProcessorImplementation_FullStopKeyword_14 extends KeywordToken  {
	
	public VirtualProcessorImplementation_FullStopKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getFullStopKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_IDTerminalRuleCall_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class VirtualProcessorImplementation_INAMEParserRuleCall_15 extends UnassignedTextToken {

	public VirtualProcessorImplementation_INAMEParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getINAMEParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_FullStopKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class VirtualProcessorImplementation_SemicolonKeyword_16 extends KeywordToken  {
	
	public VirtualProcessorImplementation_SemicolonKeyword_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorImplementationAccess().getSemicolonKeyword_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorImplementation_INAMEParserRuleCall_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule VirtualProcessorImplementation ****************/


/************ begin Rule DeviceImplementation ****************
 *
 * DeviceImplementation returns aadl2::DeviceImplementation:
 * 	"device" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedAbstractSubcomponent+=AbstractSubcomponent // missing in meta model:  | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
 * 	| ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
 * 	((ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection |
 * 	| ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "device" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedAbstractSubcomponent+=AbstractSubcomponent // missing in meta model:  | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
// | ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
// ((ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection |
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class DeviceImplementation_Group extends GroupToken {
	
	public DeviceImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SemicolonKeyword_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDeviceImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "device"
protected class DeviceImplementation_DeviceKeyword_0 extends KeywordToken  {
	
	public DeviceImplementation_DeviceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getDeviceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class DeviceImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public DeviceImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_DeviceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class DeviceImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class DeviceImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public DeviceImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class DeviceImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public DeviceImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDeviceImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDeviceImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class DeviceImplementation_Group_5 extends GroupToken {
	
	public DeviceImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class DeviceImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class DeviceImplementation_Group_5_1 extends GroupToken {
	
	public DeviceImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DeviceImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public DeviceImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class DeviceImplementation_Group_5_1_2 extends GroupToken {
	
	public DeviceImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DeviceImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public DeviceImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DeviceImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public DeviceImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent // missing in meta model:  | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
// | ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class DeviceImplementation_Group_6 extends GroupToken {
	
	public DeviceImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class DeviceImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public DeviceImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent // missing in meta model:  | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
// | ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"
protected class DeviceImplementation_Alternatives_6_1 extends AlternativesToken {

	public DeviceImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent // missing in meta model:  | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
// | ownedBusSubcomponent+=BusSubcomponent)+
protected class DeviceImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public DeviceImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_OwnedBusSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class DeviceImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusSubcomponent+=BusSubcomponent
protected class DeviceImplementation_OwnedBusSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedBusSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedBusSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedBusSubcomponentBusSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class DeviceImplementation_Group_6_1_1 extends GroupToken {
	
	public DeviceImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class DeviceImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public DeviceImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public DeviceImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection |
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))?
protected class DeviceImplementation_Group_7 extends GroupToken {
	
	public DeviceImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class DeviceImplementation_ConnectionsKeyword_7_0 extends KeywordToken  {
	
	public DeviceImplementation_ConnectionsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getConnectionsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection |
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"
protected class DeviceImplementation_Alternatives_7_1 extends AlternativesToken {

	public DeviceImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection // not in std: ownedPortConnection+=PortConnection |
// | ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+
protected class DeviceImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public DeviceImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedAccessConnectionAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceImplementation_OwnedFeatureConnectionAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAccessConnection+=AccessConnection
protected class DeviceImplementation_OwnedAccessConnectionAssignment_7_1_0_0 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedAccessConnectionAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedAccessConnectionAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class DeviceImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedFeatureGroupConnectionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class DeviceImplementation_OwnedFeatureConnectionAssignment_7_1_0_2 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedFeatureConnectionAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedFeatureConnectionAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class DeviceImplementation_Group_7_1_1 extends GroupToken {
	
	public DeviceImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class DeviceImplementation_NoConnectionsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public DeviceImplementation_NoConnectionsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getNoConnectionsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceImplementationAccess().getNoConnectionsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public DeviceImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_NoConnectionsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class DeviceImplementation_Group_8 extends GroupToken {
	
	public DeviceImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class DeviceImplementation_FlowsKeyword_8_0 extends KeywordToken  {
	
	public DeviceImplementation_FlowsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getFlowsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class DeviceImplementation_Group_8_1 extends GroupToken {
	
	public DeviceImplementation_Group_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SemicolonKeyword_8_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class DeviceImplementation_NoFlowsAssignment_8_1_0 extends AssignmentToken  {
	
	public DeviceImplementation_NoFlowsAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getNoFlowsAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_FlowsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceImplementationAccess().getNoFlowsNoneKeyword_8_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceImplementation_SemicolonKeyword_8_1_1 extends KeywordToken  {
	
	public DeviceImplementation_SemicolonKeyword_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSemicolonKeyword_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_NoFlowsAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class DeviceImplementation_Group_9 extends GroupToken {
	
	public DeviceImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class DeviceImplementation_ModesKeyword_9_0 extends KeywordToken  {
	
	public DeviceImplementation_ModesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getModesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class DeviceImplementation_Alternatives_9_1 extends AlternativesToken {

	public DeviceImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class DeviceImplementation_Alternatives_9_1_0 extends AlternativesToken {

	public DeviceImplementation_Alternatives_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedModeAssignment_9_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_OwnedModeTransitionAssignment_9_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class DeviceImplementation_OwnedModeAssignment_9_1_0_0 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedModeAssignment_9_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedModeAssignment_9_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedModeModeParserRuleCall_9_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class DeviceImplementation_OwnedModeTransitionAssignment_9_1_0_1 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedModeTransitionAssignment_9_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedModeTransitionAssignment_9_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_9_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_ModesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class DeviceImplementation_Group_9_1_1 extends GroupToken {
	
	public DeviceImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class DeviceImplementation_NoModesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public DeviceImplementation_NoModesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getNoModesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_ModesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceImplementationAccess().getNoModesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public DeviceImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_NoModesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class DeviceImplementation_Group_10 extends GroupToken {
	
	public DeviceImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class DeviceImplementation_PropertiesKeyword_10_0 extends KeywordToken  {
	
	public DeviceImplementation_PropertiesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getPropertiesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class DeviceImplementation_Alternatives_10_1 extends AlternativesToken {

	public DeviceImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class DeviceImplementation_OwnedPropertyAssociationAssignment_10_1_0 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedPropertyAssociationAssignment_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedPropertyAssociationAssignment_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_10_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_OwnedPropertyAssociationAssignment_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class DeviceImplementation_Group_10_1_1 extends GroupToken {
	
	public DeviceImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class DeviceImplementation_NoPropertiesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public DeviceImplementation_NoPropertiesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getNoPropertiesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_PropertiesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceImplementationAccess().getNoPropertiesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DeviceImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public DeviceImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_NoPropertiesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class DeviceImplementation_OwnedAnnexSubclauseAssignment_11 extends AssignmentToken  {
	
	public DeviceImplementation_OwnedAnnexSubclauseAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getOwnedAnnexSubclauseAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DeviceImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DeviceImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new DeviceImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new DeviceImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new DeviceImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class DeviceImplementation_EndKeyword_12 extends KeywordToken  {
	
	public DeviceImplementation_EndKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getEndKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_OwnedAnnexSubclauseAssignment_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceImplementation_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceImplementation_Group_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceImplementation_Group_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceImplementation_Group_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DeviceImplementation_Group_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new DeviceImplementation_Group_5(lastRuleCallOrigin, this, 6, inst);
			case 7: return new DeviceImplementation_NameAssignment_4(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class DeviceImplementation_IDTerminalRuleCall_13 extends UnassignedTextToken {

	public DeviceImplementation_IDTerminalRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getIDTerminalRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_EndKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class DeviceImplementation_FullStopKeyword_14 extends KeywordToken  {
	
	public DeviceImplementation_FullStopKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getFullStopKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_IDTerminalRuleCall_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class DeviceImplementation_INAMEParserRuleCall_15 extends UnassignedTextToken {

	public DeviceImplementation_INAMEParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getINAMEParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_FullStopKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class DeviceImplementation_SemicolonKeyword_16 extends KeywordToken  {
	
	public DeviceImplementation_SemicolonKeyword_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceImplementationAccess().getSemicolonKeyword_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceImplementation_INAMEParserRuleCall_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DeviceImplementation ****************/


/************ begin Rule MemoryImplementation ****************
 *
 * MemoryImplementation returns aadl2::MemoryImplementation:
 * 	"memory" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedMemorySubcomponent+=MemorySubcomponent |
 * 	ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
 * 	((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
 * 	ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "memory" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedMemorySubcomponent+=MemorySubcomponent |
// ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"))? ("connections"
// ((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class MemoryImplementation_Group extends GroupToken {
	
	public MemoryImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_SemicolonKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMemoryImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "memory"
protected class MemoryImplementation_MemoryKeyword_0 extends KeywordToken  {
	
	public MemoryImplementation_MemoryKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getMemoryKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class MemoryImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public MemoryImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_MemoryKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class MemoryImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class MemoryImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public MemoryImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class MemoryImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public MemoryImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMemoryImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMemoryImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class MemoryImplementation_Group_5 extends GroupToken {
	
	public MemoryImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class MemoryImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class MemoryImplementation_Group_5_1 extends GroupToken {
	
	public MemoryImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class MemoryImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public MemoryImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class MemoryImplementation_Group_5_1_2 extends GroupToken {
	
	public MemoryImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MemoryImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public MemoryImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class MemoryImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public MemoryImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedMemorySubcomponent+=MemorySubcomponent |
// ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class MemoryImplementation_Group_6 extends GroupToken {
	
	public MemoryImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class MemoryImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public MemoryImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedMemorySubcomponent+=MemorySubcomponent |
// ownedBusSubcomponent+=BusSubcomponent)+ | noSubcomponents?="none" ";"
protected class MemoryImplementation_Alternatives_6_1 extends AlternativesToken {

	public MemoryImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedMemorySubcomponent+=MemorySubcomponent |
// ownedBusSubcomponent+=BusSubcomponent)+
protected class MemoryImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public MemoryImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_OwnedMemorySubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryImplementation_OwnedBusSubcomponentAssignment_6_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class MemoryImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedMemorySubcomponent+=MemorySubcomponent
protected class MemoryImplementation_OwnedMemorySubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedMemorySubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedMemorySubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMemorySubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMemorySubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemorySubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedMemorySubcomponentMemorySubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedBusSubcomponent+=BusSubcomponent
protected class MemoryImplementation_OwnedBusSubcomponentAssignment_6_1_0_2 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedBusSubcomponentAssignment_6_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedBusSubcomponentAssignment_6_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedBusSubcomponentBusSubcomponentParserRuleCall_6_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class MemoryImplementation_Group_6_1_1 extends GroupToken {
	
	public MemoryImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class MemoryImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public MemoryImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public MemoryImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))?
protected class MemoryImplementation_Group_7 extends GroupToken {
	
	public MemoryImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class MemoryImplementation_ConnectionsKeyword_7_0 extends KeywordToken  {
	
	public MemoryImplementation_ConnectionsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getConnectionsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"
protected class MemoryImplementation_Alternatives_7_1 extends AlternativesToken {

	public MemoryImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+
protected class MemoryImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public MemoryImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedAccessConnectionAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryImplementation_OwnedFeatureConnectionAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAccessConnection+=AccessConnection
protected class MemoryImplementation_OwnedAccessConnectionAssignment_7_1_0_0 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedAccessConnectionAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedAccessConnectionAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class MemoryImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedFeatureGroupConnectionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedFeatureGroupConnectionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class MemoryImplementation_OwnedFeatureConnectionAssignment_7_1_0_2 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedFeatureConnectionAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedFeatureConnectionAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class MemoryImplementation_Group_7_1_1 extends GroupToken {
	
	public MemoryImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class MemoryImplementation_NoConnectionsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public MemoryImplementation_NoConnectionsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getNoConnectionsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_ConnectionsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryImplementationAccess().getNoConnectionsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public MemoryImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_NoConnectionsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class MemoryImplementation_Group_8 extends GroupToken {
	
	public MemoryImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class MemoryImplementation_ModesKeyword_8_0 extends KeywordToken  {
	
	public MemoryImplementation_ModesKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getModesKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class MemoryImplementation_Alternatives_8_1 extends AlternativesToken {

	public MemoryImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class MemoryImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public MemoryImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedModeAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_OwnedModeTransitionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class MemoryImplementation_OwnedModeAssignment_8_1_0_0 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedModeAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedModeAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedModeModeParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_ModesKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class MemoryImplementation_OwnedModeTransitionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedModeTransitionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedModeTransitionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_ModesKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class MemoryImplementation_Group_8_1_1 extends GroupToken {
	
	public MemoryImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class MemoryImplementation_NoModesAssignment_8_1_1_0 extends AssignmentToken  {
	
	public MemoryImplementation_NoModesAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getNoModesAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_ModesKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryImplementationAccess().getNoModesNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public MemoryImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_NoModesAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class MemoryImplementation_Group_9 extends GroupToken {
	
	public MemoryImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class MemoryImplementation_PropertiesKeyword_9_0 extends KeywordToken  {
	
	public MemoryImplementation_PropertiesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getPropertiesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemoryImplementation_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class MemoryImplementation_Alternatives_9_1 extends AlternativesToken {

	public MemoryImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedPropertyAssociationAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class MemoryImplementation_OwnedPropertyAssociationAssignment_9_1_0 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedPropertyAssociationAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedPropertyAssociationAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_9_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_OwnedPropertyAssociationAssignment_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_PropertiesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class MemoryImplementation_Group_9_1_1 extends GroupToken {
	
	public MemoryImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class MemoryImplementation_NoPropertiesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public MemoryImplementation_NoPropertiesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getNoPropertiesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_PropertiesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemoryImplementationAccess().getNoPropertiesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class MemoryImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public MemoryImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_NoPropertiesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class MemoryImplementation_OwnedAnnexSubclauseAssignment_10 extends AssignmentToken  {
	
	public MemoryImplementation_OwnedAnnexSubclauseAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getOwnedAnnexSubclauseAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemoryImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemoryImplementation_OwnedAnnexSubclauseAssignment_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemoryImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new MemoryImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new MemoryImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new MemoryImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new MemoryImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class MemoryImplementation_EndKeyword_11 extends KeywordToken  {
	
	public MemoryImplementation_EndKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getEndKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_OwnedAnnexSubclauseAssignment_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemoryImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemoryImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemoryImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MemoryImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MemoryImplementation_Group_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MemoryImplementation_NameAssignment_4(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class MemoryImplementation_IDTerminalRuleCall_12 extends UnassignedTextToken {

	public MemoryImplementation_IDTerminalRuleCall_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getIDTerminalRuleCall_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_EndKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class MemoryImplementation_FullStopKeyword_13 extends KeywordToken  {
	
	public MemoryImplementation_FullStopKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getFullStopKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_IDTerminalRuleCall_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class MemoryImplementation_INAMEParserRuleCall_14 extends UnassignedTextToken {

	public MemoryImplementation_INAMEParserRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getINAMEParserRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_FullStopKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class MemoryImplementation_SemicolonKeyword_15 extends KeywordToken  {
	
	public MemoryImplementation_SemicolonKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemoryImplementationAccess().getSemicolonKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemoryImplementation_INAMEParserRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MemoryImplementation ****************/


/************ begin Rule BusImplementation ****************
 *
 * BusImplementation returns aadl2::BusImplementation:
 * 	"bus" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
 * 	ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ |
 * 	noSubcomponents?="none" ";"))? ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none"
 * 	";"))? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "bus" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension ("("
// ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ |
// noSubcomponents?="none" ";"))? ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none"
// ";"))? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class BusImplementation_Group extends GroupToken {
	
	public BusImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_SemicolonKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBusImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bus"
protected class BusImplementation_BusKeyword_0 extends KeywordToken  {
	
	public BusImplementation_BusKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getBusKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "implementation"
protected class BusImplementation_ImplementationKeyword_1 extends KeywordToken  {
	
	public BusImplementation_ImplementationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getImplementationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_BusKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class BusImplementation_OwnedRealizationAssignment_2 extends AssignmentToken  {
	
	public BusImplementation_OwnedRealizationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedRealizationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedRealizationRealizationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_ImplementationKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class BusImplementation_FullStopKeyword_3 extends KeywordToken  {
	
	public BusImplementation_FullStopKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getFullStopKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedRealizationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class BusImplementation_NameAssignment_4 extends AssignmentToken  {
	
	public BusImplementation_NameAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getNameAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_FullStopKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBusImplementationAccess().getNameINAMEParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBusImplementationAccess().getNameINAMEParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class BusImplementation_Group_5 extends GroupToken {
	
	public BusImplementation_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class BusImplementation_OwnedExtensionAssignment_5_0 extends AssignmentToken  {
	
	public BusImplementation_OwnedExtensionAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedExtensionAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class BusImplementation_Group_5_1 extends GroupToken {
	
	public BusImplementation_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_RightParenthesisKeyword_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class BusImplementation_LeftParenthesisKeyword_5_1_0 extends KeywordToken  {
	
	public BusImplementation_LeftParenthesisKeyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getLeftParenthesisKeyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedExtensionAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class BusImplementation_OwnedPrototypeBindingAssignment_5_1_1 extends AssignmentToken  {
	
	public BusImplementation_OwnedPrototypeBindingAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_LeftParenthesisKeyword_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class BusImplementation_Group_5_1_2 extends GroupToken {
	
	public BusImplementation_Group_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class BusImplementation_CommaKeyword_5_1_2_0 extends KeywordToken  {
	
	public BusImplementation_CommaKeyword_5_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getCommaKeyword_5_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class BusImplementation_OwnedPrototypeBindingAssignment_5_1_2_1 extends AssignmentToken  {
	
	public BusImplementation_OwnedPrototypeBindingAssignment_5_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedPrototypeBindingAssignment_5_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_5_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_CommaKeyword_5_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class BusImplementation_RightParenthesisKeyword_5_1_3 extends KeywordToken  {
	
	public BusImplementation_RightParenthesisKeyword_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getRightParenthesisKeyword_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group_5_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_OwnedPrototypeBindingAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class BusImplementation_Group_6 extends GroupToken {
	
	public BusImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Alternatives_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class BusImplementation_SubcomponentsKeyword_6_0 extends KeywordToken  {
	
	public BusImplementation_SubcomponentsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getSubcomponentsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_NameAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ |
// noSubcomponents?="none" ";"
protected class BusImplementation_Alternatives_6_1 extends AlternativesToken {

	public BusImplementation_Alternatives_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getAlternatives_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Alternatives_6_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_Group_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+
protected class BusImplementation_Alternatives_6_1_0 extends AlternativesToken {

	public BusImplementation_Alternatives_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getAlternatives_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class BusImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0 extends AssignmentToken  {
	
	public BusImplementation_OwnedAbstractSubcomponentAssignment_6_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedAbstractSubcomponentAssignment_6_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_6_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
protected class BusImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_1 extends AssignmentToken  {
	
	public BusImplementation_OwnedVirtualBusSubcomponentAssignment_6_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedVirtualBusSubcomponentAssignment_6_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedVirtualBusSubcomponentVirtualBusSubcomponentParserRuleCall_6_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_Alternatives_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class BusImplementation_Group_6_1_1 extends GroupToken {
	
	public BusImplementation_Group_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_SemicolonKeyword_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class BusImplementation_NoSubcomponentsAssignment_6_1_1_0 extends AssignmentToken  {
	
	public BusImplementation_NoSubcomponentsAssignment_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getNoSubcomponentsAssignment_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_SubcomponentsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusImplementationAccess().getNoSubcomponentsNoneKeyword_6_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class BusImplementation_SemicolonKeyword_6_1_1_1 extends KeywordToken  {
	
	public BusImplementation_SemicolonKeyword_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getSemicolonKeyword_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_NoSubcomponentsAssignment_6_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class BusImplementation_Group_7 extends GroupToken {
	
	public BusImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class BusImplementation_ModesKeyword_7_0 extends KeywordToken  {
	
	public BusImplementation_ModesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getModesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusImplementation_NameAssignment_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class BusImplementation_Alternatives_7_1 extends AlternativesToken {

	public BusImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class BusImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public BusImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedModeAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_OwnedModeTransitionAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class BusImplementation_OwnedModeAssignment_7_1_0_0 extends AssignmentToken  {
	
	public BusImplementation_OwnedModeAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedModeAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedModeModeParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusImplementation_ModesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class BusImplementation_OwnedModeTransitionAssignment_7_1_0_1 extends AssignmentToken  {
	
	public BusImplementation_OwnedModeTransitionAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedModeTransitionAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusImplementation_ModesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class BusImplementation_Group_7_1_1 extends GroupToken {
	
	public BusImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class BusImplementation_NoModesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public BusImplementation_NoModesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getNoModesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_ModesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusImplementationAccess().getNoModesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class BusImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public BusImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_NoModesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class BusImplementation_Group_8 extends GroupToken {
	
	public BusImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class BusImplementation_PropertiesKeyword_8_0 extends KeywordToken  {
	
	public BusImplementation_PropertiesKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getPropertiesKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusImplementation_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusImplementation_NameAssignment_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class BusImplementation_Alternatives_8_1 extends AlternativesToken {

	public BusImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedPropertyAssociationAssignment_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class BusImplementation_OwnedPropertyAssociationAssignment_8_1_0 extends AssignmentToken  {
	
	public BusImplementation_OwnedPropertyAssociationAssignment_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedPropertyAssociationAssignment_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_8_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_OwnedPropertyAssociationAssignment_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusImplementation_PropertiesKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class BusImplementation_Group_8_1_1 extends GroupToken {
	
	public BusImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class BusImplementation_NoPropertiesAssignment_8_1_1_0 extends AssignmentToken  {
	
	public BusImplementation_NoPropertiesAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getNoPropertiesAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_PropertiesKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusImplementationAccess().getNoPropertiesNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class BusImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public BusImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_NoPropertiesAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class BusImplementation_OwnedAnnexSubclauseAssignment_9 extends AssignmentToken  {
	
	public BusImplementation_OwnedAnnexSubclauseAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getOwnedAnnexSubclauseAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusImplementation_OwnedAnnexSubclauseAssignment_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new BusImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new BusImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new BusImplementation_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new BusImplementation_NameAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class BusImplementation_EndKeyword_10 extends KeywordToken  {
	
	public BusImplementation_EndKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getEndKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_OwnedAnnexSubclauseAssignment_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new BusImplementation_Group_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new BusImplementation_NameAssignment_4(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ID
protected class BusImplementation_IDTerminalRuleCall_11 extends UnassignedTextToken {

	public BusImplementation_IDTerminalRuleCall_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getIDTerminalRuleCall_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_EndKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class BusImplementation_FullStopKeyword_12 extends KeywordToken  {
	
	public BusImplementation_FullStopKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getFullStopKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_IDTerminalRuleCall_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class BusImplementation_INAMEParserRuleCall_13 extends UnassignedTextToken {

	public BusImplementation_INAMEParserRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getINAMEParserRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_FullStopKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class BusImplementation_SemicolonKeyword_14 extends KeywordToken  {
	
	public BusImplementation_SemicolonKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusImplementationAccess().getSemicolonKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusImplementation_INAMEParserRuleCall_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule BusImplementation ****************/


/************ begin Rule VirtualBusImplementation ****************
 *
 * VirtualBusImplementation returns aadl2::VirtualBusImplementation:
 * 	"virtual" "bus" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension
 * 	("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
 * 	((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ |
 * 	noSubcomponents?="none" ";"))? ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none"
 * 	";"))? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// "virtual" "bus" "implementation" ownedRealization=Realization "." name=INAME (ownedExtension=ImplementationExtension
// ("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents"
// ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ |
// noSubcomponents?="none" ";"))? ("modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none"
// ";"))? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class VirtualBusImplementation_Group extends GroupToken {
	
	public VirtualBusImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_SemicolonKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVirtualBusImplementationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "virtual"
protected class VirtualBusImplementation_VirtualKeyword_0 extends KeywordToken  {
	
	public VirtualBusImplementation_VirtualKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getVirtualKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "bus"
protected class VirtualBusImplementation_BusKeyword_1 extends KeywordToken  {
	
	public VirtualBusImplementation_BusKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getBusKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_VirtualKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "implementation"
protected class VirtualBusImplementation_ImplementationKeyword_2 extends KeywordToken  {
	
	public VirtualBusImplementation_ImplementationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getImplementationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_BusKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class VirtualBusImplementation_OwnedRealizationAssignment_3 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedRealizationAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedRealizationAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedRealizationRealizationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_ImplementationKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class VirtualBusImplementation_FullStopKeyword_4 extends KeywordToken  {
	
	public VirtualBusImplementation_FullStopKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getFullStopKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedRealizationAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class VirtualBusImplementation_NameAssignment_5 extends AssignmentToken  {
	
	public VirtualBusImplementation_NameAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getNameAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_FullStopKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVirtualBusImplementationAccess().getNameINAMEParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVirtualBusImplementationAccess().getNameINAMEParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class VirtualBusImplementation_Group_6 extends GroupToken {
	
	public VirtualBusImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class VirtualBusImplementation_OwnedExtensionAssignment_6_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedExtensionAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedExtensionAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class VirtualBusImplementation_Group_6_1 extends GroupToken {
	
	public VirtualBusImplementation_Group_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_RightParenthesisKeyword_6_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualBusImplementation_LeftParenthesisKeyword_6_1_0 extends KeywordToken  {
	
	public VirtualBusImplementation_LeftParenthesisKeyword_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getLeftParenthesisKeyword_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_1 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_LeftParenthesisKeyword_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class VirtualBusImplementation_Group_6_1_2 extends GroupToken {
	
	public VirtualBusImplementation_Group_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualBusImplementation_CommaKeyword_6_1_2_0 extends KeywordToken  {
	
	public VirtualBusImplementation_CommaKeyword_6_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getCommaKeyword_6_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_2_1 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_CommaKeyword_6_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualBusImplementation_RightParenthesisKeyword_6_1_3 extends KeywordToken  {
	
	public VirtualBusImplementation_RightParenthesisKeyword_6_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getRightParenthesisKeyword_6_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class VirtualBusImplementation_Group_7 extends GroupToken {
	
	public VirtualBusImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class VirtualBusImplementation_SubcomponentsKeyword_7_0 extends KeywordToken  {
	
	public VirtualBusImplementation_SubcomponentsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getSubcomponentsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_NameAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+ |
// noSubcomponents?="none" ";"
protected class VirtualBusImplementation_Alternatives_7_1 extends AlternativesToken {

	public VirtualBusImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedVirtualBusSubcomponent+=VirtualBusSubcomponent)+
protected class VirtualBusImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public VirtualBusImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_OwnedVirtualBusSubcomponentAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class VirtualBusImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedAbstractSubcomponentAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedVirtualBusSubcomponent+=VirtualBusSubcomponent
protected class VirtualBusImplementation_OwnedVirtualBusSubcomponentAssignment_7_1_0_1 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedVirtualBusSubcomponentAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedVirtualBusSubcomponentAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedVirtualBusSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedVirtualBusSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedVirtualBusSubcomponentVirtualBusSubcomponentParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class VirtualBusImplementation_Group_7_1_1 extends GroupToken {
	
	public VirtualBusImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class VirtualBusImplementation_NoSubcomponentsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_NoSubcomponentsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getNoSubcomponentsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualBusImplementationAccess().getNoSubcomponentsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualBusImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public VirtualBusImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_NoSubcomponentsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class VirtualBusImplementation_Group_8 extends GroupToken {
	
	public VirtualBusImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class VirtualBusImplementation_ModesKeyword_8_0 extends KeywordToken  {
	
	public VirtualBusImplementation_ModesKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getModesKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusImplementation_NameAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class VirtualBusImplementation_Alternatives_8_1 extends AlternativesToken {

	public VirtualBusImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class VirtualBusImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public VirtualBusImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedModeAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_OwnedModeTransitionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class VirtualBusImplementation_OwnedModeAssignment_8_1_0_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedModeAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedModeAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedModeModeParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusImplementation_ModesKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class VirtualBusImplementation_OwnedModeTransitionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedModeTransitionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedModeTransitionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusImplementation_ModesKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class VirtualBusImplementation_Group_8_1_1 extends GroupToken {
	
	public VirtualBusImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class VirtualBusImplementation_NoModesAssignment_8_1_1_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_NoModesAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getNoModesAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_ModesKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualBusImplementationAccess().getNoModesNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualBusImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public VirtualBusImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_NoModesAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class VirtualBusImplementation_Group_9 extends GroupToken {
	
	public VirtualBusImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Alternatives_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class VirtualBusImplementation_PropertiesKeyword_9_0 extends KeywordToken  {
	
	public VirtualBusImplementation_PropertiesKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getPropertiesKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualBusImplementation_NameAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class VirtualBusImplementation_Alternatives_9_1 extends AlternativesToken {

	public VirtualBusImplementation_Alternatives_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getAlternatives_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedPropertyAssociationAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_Group_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class VirtualBusImplementation_OwnedPropertyAssociationAssignment_9_1_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedPropertyAssociationAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedPropertyAssociationAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_9_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedPropertyAssociationAssignment_9_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusImplementation_PropertiesKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class VirtualBusImplementation_Group_9_1_1 extends GroupToken {
	
	public VirtualBusImplementation_Group_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getGroup_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_SemicolonKeyword_9_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class VirtualBusImplementation_NoPropertiesAssignment_9_1_1_0 extends AssignmentToken  {
	
	public VirtualBusImplementation_NoPropertiesAssignment_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getNoPropertiesAssignment_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_PropertiesKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualBusImplementationAccess().getNoPropertiesNoneKeyword_9_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class VirtualBusImplementation_SemicolonKeyword_9_1_1_1 extends KeywordToken  {
	
	public VirtualBusImplementation_SemicolonKeyword_9_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getSemicolonKeyword_9_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_NoPropertiesAssignment_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class VirtualBusImplementation_OwnedAnnexSubclauseAssignment_10 extends AssignmentToken  {
	
	public VirtualBusImplementation_OwnedAnnexSubclauseAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getOwnedAnnexSubclauseAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedAnnexSubclauseAssignment_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new VirtualBusImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new VirtualBusImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new VirtualBusImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new VirtualBusImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class VirtualBusImplementation_EndKeyword_11 extends KeywordToken  {
	
	public VirtualBusImplementation_EndKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getEndKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_OwnedAnnexSubclauseAssignment_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualBusImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualBusImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new VirtualBusImplementation_NameAssignment_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ID
protected class VirtualBusImplementation_IDTerminalRuleCall_12 extends UnassignedTextToken {

	public VirtualBusImplementation_IDTerminalRuleCall_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getIDTerminalRuleCall_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_EndKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class VirtualBusImplementation_FullStopKeyword_13 extends KeywordToken  {
	
	public VirtualBusImplementation_FullStopKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getFullStopKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_IDTerminalRuleCall_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class VirtualBusImplementation_INAMEParserRuleCall_14 extends UnassignedTextToken {

	public VirtualBusImplementation_INAMEParserRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getINAMEParserRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_FullStopKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class VirtualBusImplementation_SemicolonKeyword_15 extends KeywordToken  {
	
	public VirtualBusImplementation_SemicolonKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusImplementationAccess().getSemicolonKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusImplementation_INAMEParserRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule VirtualBusImplementation ****************/


/************ begin Rule DataImplementation ****************
 *
 * DataImplementation returns aadl2::DataImplementation:
 * 	{aadl2::DataImplementation} "data" "implementation" ownedRealization=Realization "." name=INAME
 * 	(ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
 * 	ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent)+ |
 * 	noSubcomponents?="none" ";"))? ("connections" ((ownedAccessConnection+=AccessConnection |
 * 	ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
 * 	noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
 * 	ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
 * 	(ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
 * 	ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";";
 *
 **/

// {aadl2::DataImplementation} "data" "implementation" ownedRealization=Realization "." name=INAME
// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent |
// ownedDataSubcomponent+=DataSubcomponent | ownedSubprogramSubcomponent+=SubprogramSubcomponent)+ |
// noSubcomponents?="none" ";"))? ("connections" ((ownedAccessConnection+=AccessConnection |
// ownedFeatureGroupConnection+=FeatureGroupConnection | ownedFeatureConnection+=FeatureConnection)+ |
// noConnections?="none" ";"))? ("flows" (noFlows?="none" ";"))? ("modes" ((ownedMode+=Mode |
// ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))? ("properties"
// (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
// ownedAnnexSubclause+=AnnexSubclause* "end" ID "." INAME ";"
protected class DataImplementation_Group extends GroupToken {
	
	public DataImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SemicolonKeyword_17(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDataImplementationAccess().getDataImplementationAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::DataImplementation}
protected class DataImplementation_DataImplementationAction_0 extends ActionToken  {

	public DataImplementation_DataImplementationAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getDataImplementationAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "data"
protected class DataImplementation_DataKeyword_1 extends KeywordToken  {
	
	public DataImplementation_DataKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getDataKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_DataImplementationAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "implementation"
protected class DataImplementation_ImplementationKeyword_2 extends KeywordToken  {
	
	public DataImplementation_ImplementationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getImplementationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_DataKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedRealization=Realization
protected class DataImplementation_OwnedRealizationAssignment_3 extends AssignmentToken  {
	
	public DataImplementation_OwnedRealizationAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedRealizationAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Realization_ImplementedAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedRealization",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedRealization");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRealizationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedRealizationRealizationParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_ImplementationKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "."
protected class DataImplementation_FullStopKeyword_4 extends KeywordToken  {
	
	public DataImplementation_FullStopKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getFullStopKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedRealizationAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=INAME
protected class DataImplementation_NameAssignment_5 extends AssignmentToken  {
	
	public DataImplementation_NameAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getNameAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_FullStopKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataImplementationAccess().getNameINAMEParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDataImplementationAccess().getNameINAMEParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (ownedExtension=ImplementationExtension ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class DataImplementation_Group_6 extends GroupToken {
	
	public DataImplementation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedExtension=ImplementationExtension
protected class DataImplementation_OwnedExtensionAssignment_6_0 extends AssignmentToken  {
	
	public DataImplementation_OwnedExtensionAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedExtensionAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImplementationExtension_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedExtension",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedExtension");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImplementationExtensionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedExtensionImplementationExtensionParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class DataImplementation_Group_6_1 extends GroupToken {
	
	public DataImplementation_Group_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_RightParenthesisKeyword_6_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DataImplementation_LeftParenthesisKeyword_6_1_0 extends KeywordToken  {
	
	public DataImplementation_LeftParenthesisKeyword_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getLeftParenthesisKeyword_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedExtensionAssignment_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DataImplementation_OwnedPrototypeBindingAssignment_6_1_1 extends AssignmentToken  {
	
	public DataImplementation_OwnedPrototypeBindingAssignment_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_LeftParenthesisKeyword_6_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class DataImplementation_Group_6_1_2 extends GroupToken {
	
	public DataImplementation_Group_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DataImplementation_CommaKeyword_6_1_2_0 extends KeywordToken  {
	
	public DataImplementation_CommaKeyword_6_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getCommaKeyword_6_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DataImplementation_OwnedPrototypeBindingAssignment_6_1_2_1 extends AssignmentToken  {
	
	public DataImplementation_OwnedPrototypeBindingAssignment_6_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedPrototypeBindingAssignment_6_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_6_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_CommaKeyword_6_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DataImplementation_RightParenthesisKeyword_6_1_3 extends KeywordToken  {
	
	public DataImplementation_RightParenthesisKeyword_6_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getRightParenthesisKeyword_6_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_6_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_OwnedPrototypeBindingAssignment_6_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "subcomponents" ((ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent)+ | noSubcomponents?="none" ";"))?
protected class DataImplementation_Group_7 extends GroupToken {
	
	public DataImplementation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "subcomponents"
protected class DataImplementation_SubcomponentsKeyword_7_0 extends KeywordToken  {
	
	public DataImplementation_SubcomponentsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSubcomponentsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent)+ | noSubcomponents?="none" ";"
protected class DataImplementation_Alternatives_7_1 extends AlternativesToken {

	public DataImplementation_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAbstractSubcomponent+=AbstractSubcomponent | ownedDataSubcomponent+=DataSubcomponent |
// ownedSubprogramSubcomponent+=SubprogramSubcomponent)+
protected class DataImplementation_Alternatives_7_1_0 extends AlternativesToken {

	public DataImplementation_Alternatives_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_OwnedDataSubcomponentAssignment_7_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAbstractSubcomponent+=AbstractSubcomponent
protected class DataImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0 extends AssignmentToken  {
	
	public DataImplementation_OwnedAbstractSubcomponentAssignment_7_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedAbstractSubcomponentAssignment_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAbstractSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAbstractSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedAbstractSubcomponentAbstractSubcomponentParserRuleCall_7_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedDataSubcomponent+=DataSubcomponent
protected class DataImplementation_OwnedDataSubcomponentAssignment_7_1_0_1 extends AssignmentToken  {
	
	public DataImplementation_OwnedDataSubcomponentAssignment_7_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedDataSubcomponentAssignment_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedDataSubcomponentDataSubcomponentParserRuleCall_7_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedSubprogramSubcomponent+=SubprogramSubcomponent
protected class DataImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_2 extends AssignmentToken  {
	
	public DataImplementation_OwnedSubprogramSubcomponentAssignment_7_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedSubprogramSubcomponentAssignment_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubprogramSubcomponent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubprogramSubcomponent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedSubprogramSubcomponentSubprogramSubcomponentParserRuleCall_7_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noSubcomponents?="none" ";"
protected class DataImplementation_Group_7_1_1 extends GroupToken {
	
	public DataImplementation_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noSubcomponents?="none"
protected class DataImplementation_NoSubcomponentsAssignment_7_1_1_0 extends AssignmentToken  {
	
	public DataImplementation_NoSubcomponentsAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getNoSubcomponentsAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SubcomponentsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noSubcomponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noSubcomponents");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataImplementationAccess().getNoSubcomponentsNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataImplementation_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public DataImplementation_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_NoSubcomponentsAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "connections" ((ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"))?
protected class DataImplementation_Group_8 extends GroupToken {
	
	public DataImplementation_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "connections"
protected class DataImplementation_ConnectionsKeyword_8_0 extends KeywordToken  {
	
	public DataImplementation_ConnectionsKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getConnectionsKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+ | noConnections?="none" ";"
protected class DataImplementation_Alternatives_8_1 extends AlternativesToken {

	public DataImplementation_Alternatives_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedAccessConnection+=AccessConnection | ownedFeatureGroupConnection+=FeatureGroupConnection |
// ownedFeatureConnection+=FeatureConnection)+
protected class DataImplementation_Alternatives_8_1_0 extends AlternativesToken {

	public DataImplementation_Alternatives_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedAccessConnectionAssignment_8_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_OwnedFeatureConnectionAssignment_8_1_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedAccessConnection+=AccessConnection
protected class DataImplementation_OwnedAccessConnectionAssignment_8_1_0_0 extends AssignmentToken  {
	
	public DataImplementation_OwnedAccessConnectionAssignment_8_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedAccessConnectionAssignment_8_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAccessConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAccessConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedAccessConnectionAccessConnectionParserRuleCall_8_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureGroupConnection+=FeatureGroupConnection
protected class DataImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_1 extends AssignmentToken  {
	
	public DataImplementation_OwnedFeatureGroupConnectionAssignment_8_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedFeatureGroupConnectionAssignment_8_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureGroupConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureGroupConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedFeatureGroupConnectionFeatureGroupConnectionParserRuleCall_8_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedFeatureConnection+=FeatureConnection
protected class DataImplementation_OwnedFeatureConnectionAssignment_8_1_0_2 extends AssignmentToken  {
	
	public DataImplementation_OwnedFeatureConnectionAssignment_8_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedFeatureConnectionAssignment_8_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedFeatureConnection",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedFeatureConnection");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedFeatureConnectionFeatureConnectionParserRuleCall_8_1_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_8_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noConnections?="none" ";"
protected class DataImplementation_Group_8_1_1 extends GroupToken {
	
	public DataImplementation_Group_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SemicolonKeyword_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noConnections?="none"
protected class DataImplementation_NoConnectionsAssignment_8_1_1_0 extends AssignmentToken  {
	
	public DataImplementation_NoConnectionsAssignment_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getNoConnectionsAssignment_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_ConnectionsKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noConnections",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noConnections");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataImplementationAccess().getNoConnectionsNoneKeyword_8_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataImplementation_SemicolonKeyword_8_1_1_1 extends KeywordToken  {
	
	public DataImplementation_SemicolonKeyword_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSemicolonKeyword_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_NoConnectionsAssignment_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "flows" (noFlows?="none" ";"))?
protected class DataImplementation_Group_9 extends GroupToken {
	
	public DataImplementation_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "flows"
protected class DataImplementation_FlowsKeyword_9_0 extends KeywordToken  {
	
	public DataImplementation_FlowsKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getFlowsKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// noFlows?="none" ";"
protected class DataImplementation_Group_9_1 extends GroupToken {
	
	public DataImplementation_Group_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SemicolonKeyword_9_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noFlows?="none"
protected class DataImplementation_NoFlowsAssignment_9_1_0 extends AssignmentToken  {
	
	public DataImplementation_NoFlowsAssignment_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getNoFlowsAssignment_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_FlowsKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noFlows",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noFlows");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataImplementationAccess().getNoFlowsNoneKeyword_9_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataImplementation_SemicolonKeyword_9_1_1 extends KeywordToken  {
	
	public DataImplementation_SemicolonKeyword_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSemicolonKeyword_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_NoFlowsAssignment_9_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (=> "modes" ((ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"))?
protected class DataImplementation_Group_10 extends GroupToken {
	
	public DataImplementation_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "modes"
protected class DataImplementation_ModesKeyword_10_0 extends KeywordToken  {
	
	public DataImplementation_ModesKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getModesKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataImplementation_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+ | noModes?="none" ";"
protected class DataImplementation_Alternatives_10_1 extends AlternativesToken {

	public DataImplementation_Alternatives_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (ownedMode+=Mode | ownedModeTransition+=ModeTransition)+
protected class DataImplementation_Alternatives_10_1_0 extends AlternativesToken {

	public DataImplementation_Alternatives_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedModeAssignment_10_1_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_OwnedModeTransitionAssignment_10_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedMode+=Mode
protected class DataImplementation_OwnedModeAssignment_10_1_0_0 extends AssignmentToken  {
	
	public DataImplementation_OwnedModeAssignment_10_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedModeAssignment_10_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedModeModeParserRuleCall_10_1_0_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedModeTransition+=ModeTransition
protected class DataImplementation_OwnedModeTransitionAssignment_10_1_0_1 extends AssignmentToken  {
	
	public DataImplementation_OwnedModeTransitionAssignment_10_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedModeTransitionAssignment_10_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedModeTransition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedModeTransition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedModeTransitionModeTransitionParserRuleCall_10_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_Alternatives_10_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_ModesKeyword_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// noModes?="none" ";"
protected class DataImplementation_Group_10_1_1 extends GroupToken {
	
	public DataImplementation_Group_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SemicolonKeyword_10_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noModes?="none"
protected class DataImplementation_NoModesAssignment_10_1_1_0 extends AssignmentToken  {
	
	public DataImplementation_NoModesAssignment_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getNoModesAssignment_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_ModesKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataImplementationAccess().getNoModesNoneKeyword_10_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataImplementation_SemicolonKeyword_10_1_1_1 extends KeywordToken  {
	
	public DataImplementation_SemicolonKeyword_10_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSemicolonKeyword_10_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_NoModesAssignment_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class DataImplementation_Group_11 extends GroupToken {
	
	public DataImplementation_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Alternatives_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class DataImplementation_PropertiesKeyword_11_0 extends KeywordToken  {
	
	public DataImplementation_PropertiesKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getPropertiesKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataImplementation_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DataImplementation_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class DataImplementation_Alternatives_11_1 extends AlternativesToken {

	public DataImplementation_Alternatives_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getAlternatives_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_11_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class DataImplementation_OwnedPropertyAssociationAssignment_11_1_0 extends AssignmentToken  {
	
	public DataImplementation_OwnedPropertyAssociationAssignment_11_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedPropertyAssociationAssignment_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_11_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_OwnedPropertyAssociationAssignment_11_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class DataImplementation_Group_11_1_1 extends GroupToken {
	
	public DataImplementation_Group_11_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getGroup_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_SemicolonKeyword_11_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class DataImplementation_NoPropertiesAssignment_11_1_1_0 extends AssignmentToken  {
	
	public DataImplementation_NoPropertiesAssignment_11_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getNoPropertiesAssignment_11_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_PropertiesKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataImplementationAccess().getNoPropertiesNoneKeyword_11_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DataImplementation_SemicolonKeyword_11_1_1_1 extends KeywordToken  {
	
	public DataImplementation_SemicolonKeyword_11_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSemicolonKeyword_11_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_NoPropertiesAssignment_11_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class DataImplementation_OwnedAnnexSubclauseAssignment_12 extends AssignmentToken  {
	
	public DataImplementation_OwnedAnnexSubclauseAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getOwnedAnnexSubclauseAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataImplementationAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataImplementation_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DataImplementation_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DataImplementation_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new DataImplementation_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new DataImplementation_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new DataImplementation_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class DataImplementation_EndKeyword_13 extends KeywordToken  {
	
	public DataImplementation_EndKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getEndKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_OwnedAnnexSubclauseAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataImplementation_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataImplementation_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataImplementation_Group_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DataImplementation_Group_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new DataImplementation_Group_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new DataImplementation_Group_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new DataImplementation_NameAssignment_5(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// ID
protected class DataImplementation_IDTerminalRuleCall_14 extends UnassignedTextToken {

	public DataImplementation_IDTerminalRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getIDTerminalRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_EndKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class DataImplementation_FullStopKeyword_15 extends KeywordToken  {
	
	public DataImplementation_FullStopKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getFullStopKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_IDTerminalRuleCall_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// INAME
protected class DataImplementation_INAMEParserRuleCall_16 extends UnassignedTextToken {

	public DataImplementation_INAMEParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getINAMEParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_FullStopKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class DataImplementation_SemicolonKeyword_17 extends KeywordToken  {
	
	public DataImplementation_SemicolonKeyword_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataImplementationAccess().getSemicolonKeyword_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataImplementation_INAMEParserRuleCall_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DataImplementation ****************/


/************ begin Rule SubprogramCallSequence ****************
 *
 * / * subprogram calls * / SubprogramCallSequence returns aadl2::SubprogramCallSequence:
 * 	name=ID "{" ownedCallSpecification+=CallSpecification+ "}" ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
 * 	("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// name=ID "{" ownedCallSpecification+=CallSpecification+ "}" ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
// ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class SubprogramCallSequence_Group extends GroupToken {
	
	public SubprogramCallSequence_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramCallSequenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class SubprogramCallSequence_NameAssignment_0 extends AssignmentToken  {
	
	public SubprogramCallSequence_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramCallSequenceAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramCallSequenceAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class SubprogramCallSequence_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public SubprogramCallSequence_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedCallSpecification+=CallSpecification+
protected class SubprogramCallSequence_OwnedCallSpecificationAssignment_2 extends AssignmentToken  {
	
	public SubprogramCallSequence_OwnedCallSpecificationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getOwnedCallSpecificationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedCallSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedCallSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramCallSequenceAccess().getOwnedCallSpecificationCallSpecificationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramCallSequence_OwnedCallSpecificationAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramCallSequence_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SubprogramCallSequence_RightCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SubprogramCallSequence_RightCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getRightCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_OwnedCallSpecificationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class SubprogramCallSequence_Group_4 extends GroupToken {
	
	public SubprogramCallSequence_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class SubprogramCallSequence_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public SubprogramCallSequence_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class SubprogramCallSequence_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public SubprogramCallSequence_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramCallSequenceAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramCallSequence_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramCallSequence_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SubprogramCallSequence_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public SubprogramCallSequence_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class SubprogramCallSequence_Group_5 extends GroupToken {
	
	public SubprogramCallSequence_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class SubprogramCallSequence_InKeyword_5_0 extends KeywordToken  {
	
	public SubprogramCallSequence_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramCallSequence_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class SubprogramCallSequence_ModesKeyword_5_1 extends KeywordToken  {
	
	public SubprogramCallSequence_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class SubprogramCallSequence_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public SubprogramCallSequence_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class SubprogramCallSequence_InModeAssignment_5_3 extends AssignmentToken  {
	
	public SubprogramCallSequence_InModeAssignment_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getInModeAssignment_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_InModeAssignment_5_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramCallSequence_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramCallSequenceAccess().getInModeModeCrossReference_5_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramCallSequenceAccess().getInModeModeCrossReference_5_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class SubprogramCallSequence_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public SubprogramCallSequence_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_InModeAssignment_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class SubprogramCallSequence_SemicolonKeyword_6 extends KeywordToken  {
	
	public SubprogramCallSequence_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramCallSequenceAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramCallSequence_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramCallSequence_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramCallSequence_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramCallSequence ****************/


/************ begin Rule CallSpecification ****************
 *
 * CallSpecification returns aadl2::CallSpecification:
 * 	({aadl2::ProcessorCall} name=ID "subprogram" "processor" "." subprogramAccessName=ID | {aadl2::SubprogramCall} name=ID
 * 	"subprogram" (context=[aadl2::CallContext] ".")? calledSubprogram=[aadl2::CalledSubprogram]) ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ";";
 *
 **/

// ({aadl2::ProcessorCall} name=ID "subprogram" "processor" "." subprogramAccessName=ID | {aadl2::SubprogramCall} name=ID
// "subprogram" (context=[aadl2::CallContext] ".")? calledSubprogram=[aadl2::CalledSubprogram]) ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")? ";"
protected class CallSpecification_Group extends GroupToken {
	
	public CallSpecification_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_SemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCallSpecificationAccess().getProcessorCallAction_0_0_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getCallSpecificationAccess().getSubprogramCallAction_0_1_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::ProcessorCall} name=ID "subprogram" "processor" "." subprogramAccessName=ID | {aadl2::SubprogramCall} name=ID
// "subprogram" (context=[aadl2::CallContext] ".")? calledSubprogram=[aadl2::CalledSubprogram]
protected class CallSpecification_Alternatives_0 extends AlternativesToken {

	public CallSpecification_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CallSpecification_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// {aadl2::ProcessorCall} name=ID "subprogram" "processor" "." subprogramAccessName=ID
protected class CallSpecification_Group_0_0 extends GroupToken {
	
	public CallSpecification_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_SubprogramAccessNameAssignment_0_0_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCallSpecificationAccess().getProcessorCallAction_0_0_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::ProcessorCall}
protected class CallSpecification_ProcessorCallAction_0_0_0 extends ActionToken  {

	public CallSpecification_ProcessorCallAction_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getProcessorCallAction_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class CallSpecification_NameAssignment_0_0_1 extends AssignmentToken  {
	
	public CallSpecification_NameAssignment_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getNameAssignment_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_ProcessorCallAction_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCallSpecificationAccess().getNameIDTerminalRuleCall_0_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCallSpecificationAccess().getNameIDTerminalRuleCall_0_0_1_0();
			return obj;
		}
		return null;
	}

}

// "subprogram"
protected class CallSpecification_SubprogramKeyword_0_0_2 extends KeywordToken  {
	
	public CallSpecification_SubprogramKeyword_0_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getSubprogramKeyword_0_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_NameAssignment_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "processor"
protected class CallSpecification_ProcessorKeyword_0_0_3 extends KeywordToken  {
	
	public CallSpecification_ProcessorKeyword_0_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getProcessorKeyword_0_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_SubprogramKeyword_0_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class CallSpecification_FullStopKeyword_0_0_4 extends KeywordToken  {
	
	public CallSpecification_FullStopKeyword_0_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getFullStopKeyword_0_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_ProcessorKeyword_0_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subprogramAccessName=ID
protected class CallSpecification_SubprogramAccessNameAssignment_0_0_5 extends AssignmentToken  {
	
	public CallSpecification_SubprogramAccessNameAssignment_0_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getSubprogramAccessNameAssignment_0_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_FullStopKeyword_0_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subprogramAccessName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subprogramAccessName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCallSpecificationAccess().getSubprogramAccessNameIDTerminalRuleCall_0_0_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCallSpecificationAccess().getSubprogramAccessNameIDTerminalRuleCall_0_0_5_0();
			return obj;
		}
		return null;
	}

}


// {aadl2::SubprogramCall} name=ID "subprogram" (context=[aadl2::CallContext] ".")?
// calledSubprogram=[aadl2::CalledSubprogram]
protected class CallSpecification_Group_0_1 extends GroupToken {
	
	public CallSpecification_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_CalledSubprogramAssignment_0_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCallSpecificationAccess().getSubprogramCallAction_0_1_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::SubprogramCall}
protected class CallSpecification_SubprogramCallAction_0_1_0 extends ActionToken  {

	public CallSpecification_SubprogramCallAction_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getSubprogramCallAction_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class CallSpecification_NameAssignment_0_1_1 extends AssignmentToken  {
	
	public CallSpecification_NameAssignment_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getNameAssignment_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_SubprogramCallAction_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCallSpecificationAccess().getNameIDTerminalRuleCall_0_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCallSpecificationAccess().getNameIDTerminalRuleCall_0_1_1_0();
			return obj;
		}
		return null;
	}

}

// "subprogram"
protected class CallSpecification_SubprogramKeyword_0_1_2 extends KeywordToken  {
	
	public CallSpecification_SubprogramKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getSubprogramKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_NameAssignment_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (context=[aadl2::CallContext] ".")?
protected class CallSpecification_Group_0_1_3 extends GroupToken {
	
	public CallSpecification_Group_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getGroup_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_FullStopKeyword_0_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// context=[aadl2::CallContext]
protected class CallSpecification_ContextAssignment_0_1_3_0 extends AssignmentToken  {
	
	public CallSpecification_ContextAssignment_0_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getContextAssignment_0_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_SubprogramKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("context",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("context");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallSpecificationAccess().getContextCallContextCrossReference_0_1_3_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCallSpecificationAccess().getContextCallContextCrossReference_0_1_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class CallSpecification_FullStopKeyword_0_1_3_1 extends KeywordToken  {
	
	public CallSpecification_FullStopKeyword_0_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getFullStopKeyword_0_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_ContextAssignment_0_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// calledSubprogram=[aadl2::CalledSubprogram]
protected class CallSpecification_CalledSubprogramAssignment_0_1_4 extends AssignmentToken  {
	
	public CallSpecification_CalledSubprogramAssignment_0_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getCalledSubprogramAssignment_0_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_Group_0_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CallSpecification_SubprogramKeyword_0_1_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("calledSubprogram",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("calledSubprogram");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCallSpecificationAccess().getCalledSubprogramCalledSubprogramCrossReference_0_1_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCallSpecificationAccess().getCalledSubprogramCalledSubprogramCrossReference_0_1_4_0(); 
				return obj;
			}
		}
		return null;
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class CallSpecification_Group_1 extends GroupToken {
	
	public CallSpecification_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_RightCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class CallSpecification_LeftCurlyBracketKeyword_1_0 extends KeywordToken  {
	
	public CallSpecification_LeftCurlyBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getLeftCurlyBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class CallSpecification_OwnedPropertyAssociationAssignment_1_1 extends AssignmentToken  {
	
	public CallSpecification_OwnedPropertyAssociationAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getOwnedPropertyAssociationAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCallSpecificationAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CallSpecification_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new CallSpecification_LeftCurlyBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class CallSpecification_RightCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public CallSpecification_RightCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getRightCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class CallSpecification_SemicolonKeyword_2 extends KeywordToken  {
	
	public CallSpecification_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCallSpecificationAccess().getSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CallSpecification_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CallSpecification_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule CallSpecification ****************/


/************ begin Rule Prototype ****************
 *
 * // ******* Prototypes
 * Prototype returns aadl2::Prototype:
 * 	(ComponentPrototype | FeatureGroupPrototype | FeaturePrototype) ("{" ownedPropertyAssociation+=PropertyAssociation+
 * 	"}")? ";";
 *
 **/

// (ComponentPrototype | FeatureGroupPrototype | FeaturePrototype) ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ";"
protected class Prototype_Group extends GroupToken {
	
	public Prototype_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_SemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentPrototypeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFeatureGroupPrototypeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFeaturePrototypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ComponentPrototype | FeatureGroupPrototype | FeaturePrototype
protected class Prototype_Alternatives_0 extends AlternativesToken {

	public Prototype_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_ComponentPrototypeParserRuleCall_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Prototype_FeatureGroupPrototypeParserRuleCall_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Prototype_FeaturePrototypeParserRuleCall_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ComponentPrototype
protected class Prototype_ComponentPrototypeParserRuleCall_0_0 extends RuleCallToken {
	
	public Prototype_ComponentPrototypeParserRuleCall_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getComponentPrototypeParserRuleCall_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentPrototypeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ComponentPrototype_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FeatureGroupPrototype
protected class Prototype_FeatureGroupPrototypeParserRuleCall_0_1 extends RuleCallToken {
	
	public Prototype_FeatureGroupPrototypeParserRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getFeatureGroupPrototypeParserRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupPrototypeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(FeatureGroupPrototype_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FeaturePrototype
protected class Prototype_FeaturePrototypeParserRuleCall_0_2 extends RuleCallToken {
	
	public Prototype_FeaturePrototypeParserRuleCall_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getFeaturePrototypeParserRuleCall_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeaturePrototypeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(FeaturePrototype_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class Prototype_Group_1 extends GroupToken {
	
	public Prototype_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_RightCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class Prototype_LeftCurlyBracketKeyword_1_0 extends KeywordToken  {
	
	public Prototype_LeftCurlyBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getLeftCurlyBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class Prototype_OwnedPropertyAssociationAssignment_1_1 extends AssignmentToken  {
	
	public Prototype_OwnedPropertyAssociationAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getOwnedPropertyAssociationAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrototypeAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Prototype_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Prototype_LeftCurlyBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Prototype_RightCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public Prototype_RightCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getRightCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class Prototype_SemicolonKeyword_2 extends KeywordToken  {
	
	public Prototype_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrototypeAccess().getSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Prototype_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Prototype ****************/


/************ begin Rule ComponentPrototype ****************
 *
 * ComponentPrototype returns aadl2::ComponentPrototype:
 * 	(name=ID ":" | refined=[aadl2::ComponentPrototype] ":" "refined" "to") category=ComponentCategory
 * 	constrainingClassifier=[aadl2::ComponentClassifier|QCREF]? (array?="[" "]")?;
 *
 **/

// (name=ID ":" | refined=[aadl2::ComponentPrototype] ":" "refined" "to") category=ComponentCategory
// constrainingClassifier=[aadl2::ComponentClassifier|QCREF]? (array?="[" "]")?
protected class ComponentPrototype_Group extends GroupToken {
	
	public ComponentPrototype_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentPrototype_ConstrainingClassifierAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ComponentPrototype_CategoryAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentPrototypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::ComponentPrototype] ":" "refined" "to"
protected class ComponentPrototype_Alternatives_0 extends AlternativesToken {

	public ComponentPrototype_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentPrototype_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class ComponentPrototype_Group_0_0 extends GroupToken {
	
	public ComponentPrototype_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ComponentPrototype_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public ComponentPrototype_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComponentPrototypeAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComponentPrototypeAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ComponentPrototype_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public ComponentPrototype_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::ComponentPrototype] ":" "refined" "to"
protected class ComponentPrototype_Group_0_1 extends GroupToken {
	
	public ComponentPrototype_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::ComponentPrototype]
protected class ComponentPrototype_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public ComponentPrototype_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentPrototypeAccess().getRefinedComponentPrototypeCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getComponentPrototypeAccess().getRefinedComponentPrototypeCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class ComponentPrototype_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public ComponentPrototype_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class ComponentPrototype_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public ComponentPrototype_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ComponentPrototype_ToKeyword_0_1_3 extends KeywordToken  {
	
	public ComponentPrototype_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// category=ComponentCategory
protected class ComponentPrototype_CategoryAssignment_1 extends AssignmentToken  {
	
	public ComponentPrototype_CategoryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getCategoryAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("category",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("category");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComponentPrototypeAccess().getCategoryComponentCategoryParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getComponentPrototypeAccess().getCategoryComponentCategoryParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// constrainingClassifier=[aadl2::ComponentClassifier|QCREF]?
protected class ComponentPrototype_ConstrainingClassifierAssignment_2 extends AssignmentToken  {
	
	public ComponentPrototype_ConstrainingClassifierAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getConstrainingClassifierAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_CategoryAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("constrainingClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("constrainingClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentPrototypeAccess().getConstrainingClassifierComponentClassifierCrossReference_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getComponentPrototypeAccess().getConstrainingClassifierComponentClassifierCrossReference_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (array?="[" "]")?
protected class ComponentPrototype_Group_3 extends GroupToken {
	
	public ComponentPrototype_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_RightSquareBracketKeyword_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// array?="["
protected class ComponentPrototype_ArrayAssignment_3_0 extends AssignmentToken  {
	
	public ComponentPrototype_ArrayAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getArrayAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_ConstrainingClassifierAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentPrototype_CategoryAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("array",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("array");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getComponentPrototypeAccess().getArrayLeftSquareBracketKeyword_3_0_0();
			return obj;
		}
		return null;
	}

}

// "]"
protected class ComponentPrototype_RightSquareBracketKeyword_3_1 extends KeywordToken  {
	
	public ComponentPrototype_RightSquareBracketKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeAccess().getRightSquareBracketKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototype_ArrayAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule ComponentPrototype ****************/


/************ begin Rule FeatureGroupPrototype ****************
 *
 * FeatureGroupPrototype returns aadl2::FeatureGroupPrototype:
 * 	(name=ID ":" | refined=[aadl2::FeatureGroupPrototype] ":" "refined" "to") "feature" "group"
 * 	constrainingFeatureGroupType=[aadl2::FeatureGroupType|QCREF]?;
 *
 **/

// (name=ID ":" | refined=[aadl2::FeatureGroupPrototype] ":" "refined" "to") "feature" "group"
// constrainingFeatureGroupType=[aadl2::FeatureGroupType|QCREF]?
protected class FeatureGroupPrototype_Group extends GroupToken {
	
	public FeatureGroupPrototype_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_ConstrainingFeatureGroupTypeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupPrototype_GroupKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupPrototypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::FeatureGroupPrototype] ":" "refined" "to"
protected class FeatureGroupPrototype_Alternatives_0 extends AlternativesToken {

	public FeatureGroupPrototype_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupPrototype_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class FeatureGroupPrototype_Group_0_0 extends GroupToken {
	
	public FeatureGroupPrototype_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FeatureGroupPrototype_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public FeatureGroupPrototype_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureGroupPrototypeAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeatureGroupPrototypeAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FeatureGroupPrototype_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public FeatureGroupPrototype_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::FeatureGroupPrototype] ":" "refined" "to"
protected class FeatureGroupPrototype_Group_0_1 extends GroupToken {
	
	public FeatureGroupPrototype_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::FeatureGroupPrototype]
protected class FeatureGroupPrototype_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public FeatureGroupPrototype_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupPrototypeAccess().getRefinedFeatureGroupPrototypeCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupPrototypeAccess().getRefinedFeatureGroupPrototypeCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FeatureGroupPrototype_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public FeatureGroupPrototype_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FeatureGroupPrototype_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public FeatureGroupPrototype_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FeatureGroupPrototype_ToKeyword_0_1_3 extends KeywordToken  {
	
	public FeatureGroupPrototype_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "feature"
protected class FeatureGroupPrototype_FeatureKeyword_1 extends KeywordToken  {
	
	public FeatureGroupPrototype_FeatureKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getFeatureKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class FeatureGroupPrototype_GroupKeyword_2 extends KeywordToken  {
	
	public FeatureGroupPrototype_GroupKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getGroupKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_FeatureKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// constrainingFeatureGroupType=[aadl2::FeatureGroupType|QCREF]?
protected class FeatureGroupPrototype_ConstrainingFeatureGroupTypeAssignment_3 extends AssignmentToken  {
	
	public FeatureGroupPrototype_ConstrainingFeatureGroupTypeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeAccess().getConstrainingFeatureGroupTypeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototype_GroupKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("constrainingFeatureGroupType",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("constrainingFeatureGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupPrototypeAccess().getConstrainingFeatureGroupTypeFeatureGroupTypeCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupPrototypeAccess().getConstrainingFeatureGroupTypeFeatureGroupTypeCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FeatureGroupPrototype ****************/


/************ begin Rule FeaturePrototype ****************
 *
 * FeaturePrototype returns aadl2::FeaturePrototype:
 * 	(name=ID ":" | refined=[aadl2::FeaturePrototype] ":" "refined" "to") direction=InOutDirection? // only in or out not inout
 * 	"feature" constrainingClassifier=[aadl2::ComponentClassifier|QCREF]?;
 *
 **/

// (name=ID ":" | refined=[aadl2::FeaturePrototype] ":" "refined" "to") direction=InOutDirection? // only in or out not inout
// "feature" constrainingClassifier=[aadl2::ComponentClassifier|QCREF]?
protected class FeaturePrototype_Group extends GroupToken {
	
	public FeaturePrototype_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_ConstrainingClassifierAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeaturePrototype_FeatureKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeaturePrototypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::FeaturePrototype] ":" "refined" "to"
protected class FeaturePrototype_Alternatives_0 extends AlternativesToken {

	public FeaturePrototype_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeaturePrototype_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class FeaturePrototype_Group_0_0 extends GroupToken {
	
	public FeaturePrototype_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FeaturePrototype_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public FeaturePrototype_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeaturePrototypeAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeaturePrototypeAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FeaturePrototype_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public FeaturePrototype_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::FeaturePrototype] ":" "refined" "to"
protected class FeaturePrototype_Group_0_1 extends GroupToken {
	
	public FeaturePrototype_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::FeaturePrototype]
protected class FeaturePrototype_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public FeaturePrototype_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeaturePrototypeAccess().getRefinedFeaturePrototypeCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeaturePrototypeAccess().getRefinedFeaturePrototypeCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FeaturePrototype_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public FeaturePrototype_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FeaturePrototype_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public FeaturePrototype_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FeaturePrototype_ToKeyword_0_1_3 extends KeywordToken  {
	
	public FeaturePrototype_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=InOutDirection?
protected class FeaturePrototype_DirectionAssignment_1 extends AssignmentToken  {
	
	public FeaturePrototype_DirectionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getDirectionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeaturePrototypeAccess().getDirectionInOutDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeaturePrototypeAccess().getDirectionInOutDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "feature"
protected class FeaturePrototype_FeatureKeyword_2 extends KeywordToken  {
	
	public FeaturePrototype_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_DirectionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeaturePrototype_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// constrainingClassifier=[aadl2::ComponentClassifier|QCREF]?
protected class FeaturePrototype_ConstrainingClassifierAssignment_3 extends AssignmentToken  {
	
	public FeaturePrototype_ConstrainingClassifierAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeAccess().getConstrainingClassifierAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototype_FeatureKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("constrainingClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("constrainingClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeaturePrototypeAccess().getConstrainingClassifierComponentClassifierCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeaturePrototypeAccess().getConstrainingClassifierComponentClassifierCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FeaturePrototype ****************/


/************ begin Rule PrototypeBinding ****************
 *
 * / *
 *  * Prototype Bindings
 *  * / PrototypeBinding returns aadl2::PrototypeBinding:
 * 	FeatureGroupPrototypeBinding | FeaturePrototypeBinding | ComponentPrototypeBinding;
 *
 **/

// FeatureGroupPrototypeBinding | FeaturePrototypeBinding | ComponentPrototypeBinding
protected class PrototypeBinding_Alternatives extends AlternativesToken {

	public PrototypeBinding_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPrototypeBindingAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_FeatureGroupPrototypeBindingParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrototypeBinding_FeaturePrototypeBindingParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PrototypeBinding_ComponentPrototypeBindingParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentPrototypeBindingRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFeatureGroupPrototypeBindingRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFeaturePrototypeBindingRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// FeatureGroupPrototypeBinding
protected class PrototypeBinding_FeatureGroupPrototypeBindingParserRuleCall_0 extends RuleCallToken {
	
	public PrototypeBinding_FeatureGroupPrototypeBindingParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrototypeBindingAccess().getFeatureGroupPrototypeBindingParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototypeBinding_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupPrototypeBindingRule().getType().getClassifier())
			return null;
		if(checkForRecursion(FeatureGroupPrototypeBinding_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FeaturePrototypeBinding
protected class PrototypeBinding_FeaturePrototypeBindingParserRuleCall_1 extends RuleCallToken {
	
	public PrototypeBinding_FeaturePrototypeBindingParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrototypeBindingAccess().getFeaturePrototypeBindingParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeBinding_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeaturePrototypeBindingRule().getType().getClassifier())
			return null;
		if(checkForRecursion(FeaturePrototypeBinding_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ComponentPrototypeBinding
protected class PrototypeBinding_ComponentPrototypeBindingParserRuleCall_2 extends RuleCallToken {
	
	public PrototypeBinding_ComponentPrototypeBindingParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrototypeBindingAccess().getComponentPrototypeBindingParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentPrototypeBindingRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ComponentPrototypeBinding_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule PrototypeBinding ****************/


/************ begin Rule FeatureGroupPrototypeBinding ****************
 *
 * FeatureGroupPrototypeBinding returns aadl2::FeatureGroupPrototypeBinding:
 * 	formal=[aadl2::Prototype] "=>" "feature" "group" actual=FeatureGroupTypeReference;
 *
 **/

// formal=[aadl2::Prototype] "=>" "feature" "group" actual=FeatureGroupTypeReference
protected class FeatureGroupPrototypeBinding_Group extends GroupToken {
	
	public FeatureGroupPrototypeBinding_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeBindingAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototypeBinding_ActualAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupPrototypeBindingRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// formal=[aadl2::Prototype]
protected class FeatureGroupPrototypeBinding_FormalAssignment_0 extends AssignmentToken  {
	
	public FeatureGroupPrototypeBinding_FormalAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeBindingAccess().getFormalAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("formal",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("formal");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupPrototypeBindingAccess().getFormalPrototypeCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupPrototypeBindingAccess().getFormalPrototypeCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "=>"
protected class FeatureGroupPrototypeBinding_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public FeatureGroupPrototypeBinding_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeBindingAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototypeBinding_FormalAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "feature"
protected class FeatureGroupPrototypeBinding_FeatureKeyword_2 extends KeywordToken  {
	
	public FeatureGroupPrototypeBinding_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeBindingAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototypeBinding_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class FeatureGroupPrototypeBinding_GroupKeyword_3 extends KeywordToken  {
	
	public FeatureGroupPrototypeBinding_GroupKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeBindingAccess().getGroupKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupPrototypeBinding_FeatureKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actual=FeatureGroupTypeReference
protected class FeatureGroupPrototypeBinding_ActualAssignment_4 extends AssignmentToken  {
	
	public FeatureGroupPrototypeBinding_ActualAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupPrototypeBindingAccess().getActualAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupTypeReference_FeatureGroupTypeAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actual",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actual");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupTypeReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupPrototypeBindingAccess().getActualFeatureGroupTypeReferenceParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupPrototypeBinding_GroupKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule FeatureGroupPrototypeBinding ****************/


/************ begin Rule FeatureGroupTypeReference ****************
 *
 * FeatureGroupTypeReference returns aadl2::FeatureGroupReference:
 * 	featureGroupType=[aadl2::FeatureGroupType|QCREF];
 *
 **/

// featureGroupType=[aadl2::FeatureGroupType|QCREF]
protected class FeatureGroupTypeReference_FeatureGroupTypeAssignment extends AssignmentToken  {
	
	public FeatureGroupTypeReference_FeatureGroupTypeAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeReferenceAccess().getFeatureGroupTypeAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupTypeReferenceRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("featureGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("featureGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupTypeReferenceAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupTypeReferenceAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule FeatureGroupTypeReference ****************/


/************ begin Rule FeaturePrototypeBinding ****************
 *
 * FeaturePrototypeBinding returns aadl2::FeaturePrototypeBinding:
 * 	formal=[aadl2::Prototype] "=>" "feature" actual=(PortSpecification | AccessSpecification | FeaturePrototypeReference);
 *
 **/

// formal=[aadl2::Prototype] "=>" "feature" actual=(PortSpecification | AccessSpecification | FeaturePrototypeReference)
protected class FeaturePrototypeBinding_Group extends GroupToken {
	
	public FeaturePrototypeBinding_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeaturePrototypeBindingAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeBinding_ActualAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeaturePrototypeBindingRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// formal=[aadl2::Prototype]
protected class FeaturePrototypeBinding_FormalAssignment_0 extends AssignmentToken  {
	
	public FeaturePrototypeBinding_FormalAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeBindingAccess().getFormalAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("formal",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("formal");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeaturePrototypeBindingAccess().getFormalPrototypeCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeaturePrototypeBindingAccess().getFormalPrototypeCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "=>"
protected class FeaturePrototypeBinding_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public FeaturePrototypeBinding_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeBindingAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeBinding_FormalAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "feature"
protected class FeaturePrototypeBinding_FeatureKeyword_2 extends KeywordToken  {
	
	public FeaturePrototypeBinding_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeBindingAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeBinding_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actual=(PortSpecification | AccessSpecification | FeaturePrototypeReference)
protected class FeaturePrototypeBinding_ActualAssignment_3 extends AssignmentToken  {
	
	public FeaturePrototypeBinding_ActualAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeBindingAccess().getActualAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortSpecification_Group(this, this, 0, inst);
			case 1: return new AccessSpecification_Group(this, this, 1, inst);
			case 2: return new FeaturePrototypeReference_Group(this, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actual",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actual");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeaturePrototypeBindingAccess().getActualPortSpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessSpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeaturePrototypeBindingAccess().getActualAccessSpecificationParserRuleCall_3_0_1(); 
				consumed = obj;
				return param;
			}
		}
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeaturePrototypeReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeaturePrototypeBindingAccess().getActualFeaturePrototypeReferenceParserRuleCall_3_0_2(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeaturePrototypeBinding_FeatureKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule FeaturePrototypeBinding ****************/


/************ begin Rule PortSpecification ****************
 *
 * PortSpecification returns aadl2::PortSpecification:
 * 	direction=PortDirection category=PortCategory "port" classifier=[aadl2::ComponentClassifier|QCREF];
 *
 **/

// direction=PortDirection category=PortCategory "port" classifier=[aadl2::ComponentClassifier|QCREF]
protected class PortSpecification_Group extends GroupToken {
	
	public PortSpecification_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortSpecificationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortSpecification_ClassifierAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPortSpecificationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// direction=PortDirection
protected class PortSpecification_DirectionAssignment_0 extends AssignmentToken  {
	
	public PortSpecification_DirectionAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortSpecificationAccess().getDirectionAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPortSpecificationAccess().getDirectionPortDirectionParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPortSpecificationAccess().getDirectionPortDirectionParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// category=PortCategory
protected class PortSpecification_CategoryAssignment_1 extends AssignmentToken  {
	
	public PortSpecification_CategoryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortSpecificationAccess().getCategoryAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortSpecification_DirectionAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("category",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("category");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPortSpecificationAccess().getCategoryPortCategoryParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPortSpecificationAccess().getCategoryPortCategoryParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "port"
protected class PortSpecification_PortKeyword_2 extends KeywordToken  {
	
	public PortSpecification_PortKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortSpecificationAccess().getPortKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortSpecification_CategoryAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// classifier=[aadl2::ComponentClassifier|QCREF]
protected class PortSpecification_ClassifierAssignment_3 extends AssignmentToken  {
	
	public PortSpecification_ClassifierAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortSpecificationAccess().getClassifierAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortSpecification_PortKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortSpecificationAccess().getClassifierComponentClassifierCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortSpecificationAccess().getClassifierComponentClassifierCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule PortSpecification ****************/


/************ begin Rule AccessSpecification ****************
 *
 * AccessSpecification returns aadl2::AccessSpecification:
 * 	kind=AccessDirection category=AccessCategory "access" classifier=[aadl2::ComponentClassifier|QCREF];
 *
 **/

// kind=AccessDirection category=AccessCategory "access" classifier=[aadl2::ComponentClassifier|QCREF]
protected class AccessSpecification_Group extends GroupToken {
	
	public AccessSpecification_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessSpecificationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessSpecification_ClassifierAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAccessSpecificationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// kind=AccessDirection
protected class AccessSpecification_KindAssignment_0 extends AssignmentToken  {
	
	public AccessSpecification_KindAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessSpecificationAccess().getKindAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccessSpecificationAccess().getKindAccessDirectionParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAccessSpecificationAccess().getKindAccessDirectionParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// category=AccessCategory
protected class AccessSpecification_CategoryAssignment_1 extends AssignmentToken  {
	
	public AccessSpecification_CategoryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessSpecificationAccess().getCategoryAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessSpecification_KindAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("category",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("category");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccessSpecificationAccess().getCategoryAccessCategoryParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAccessSpecificationAccess().getCategoryAccessCategoryParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "access"
protected class AccessSpecification_AccessKeyword_2 extends KeywordToken  {
	
	public AccessSpecification_AccessKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessSpecificationAccess().getAccessKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessSpecification_CategoryAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// classifier=[aadl2::ComponentClassifier|QCREF]
protected class AccessSpecification_ClassifierAssignment_3 extends AssignmentToken  {
	
	public AccessSpecification_ClassifierAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessSpecificationAccess().getClassifierAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessSpecification_AccessKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessSpecificationAccess().getClassifierComponentClassifierCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessSpecificationAccess().getClassifierComponentClassifierCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule AccessSpecification ****************/


/************ begin Rule FeaturePrototypeReference ****************
 *
 * FeaturePrototypeReference returns aadl2::FeaturePrototypeReference:
 * 	direction=InOutDirection "feature" prototype=[aadl2::FeaturePrototype];
 *
 **/

// direction=InOutDirection "feature" prototype=[aadl2::FeaturePrototype]
protected class FeaturePrototypeReference_Group extends GroupToken {
	
	public FeaturePrototypeReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeaturePrototypeReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeReference_PrototypeAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeaturePrototypeReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// direction=InOutDirection
protected class FeaturePrototypeReference_DirectionAssignment_0 extends AssignmentToken  {
	
	public FeaturePrototypeReference_DirectionAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeReferenceAccess().getDirectionAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeaturePrototypeReferenceAccess().getDirectionInOutDirectionParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeaturePrototypeReferenceAccess().getDirectionInOutDirectionParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "feature"
protected class FeaturePrototypeReference_FeatureKeyword_1 extends KeywordToken  {
	
	public FeaturePrototypeReference_FeatureKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeaturePrototypeReferenceAccess().getFeatureKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeReference_DirectionAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// prototype=[aadl2::FeaturePrototype]
protected class FeaturePrototypeReference_PrototypeAssignment_2 extends AssignmentToken  {
	
	public FeaturePrototypeReference_PrototypeAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeaturePrototypeReferenceAccess().getPrototypeAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeaturePrototypeReference_FeatureKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("prototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("prototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeaturePrototypeReferenceAccess().getPrototypeFeaturePrototypeCrossReference_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeaturePrototypeReferenceAccess().getPrototypeFeaturePrototypeCrossReference_2_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FeaturePrototypeReference ****************/


/************ begin Rule ComponentPrototypeBinding ****************
 *
 * ComponentPrototypeBinding returns aadl2::ComponentPrototypeBinding:
 * 	formal=[aadl2::Prototype] "=>" "feature" (actual+=ComponentReference | "(" actual+=ComponentReference (","
 * 	actual+=ComponentReference)* ")");
 *
 **/

// formal=[aadl2::Prototype] "=>" "feature" (actual+=ComponentReference | "(" actual+=ComponentReference (","
// actual+=ComponentReference)* ")")
protected class ComponentPrototypeBinding_Group extends GroupToken {
	
	public ComponentPrototypeBinding_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentPrototypeBindingRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// formal=[aadl2::Prototype]
protected class ComponentPrototypeBinding_FormalAssignment_0 extends AssignmentToken  {
	
	public ComponentPrototypeBinding_FormalAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getFormalAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("formal",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("formal");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentPrototypeBindingAccess().getFormalPrototypeCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getComponentPrototypeBindingAccess().getFormalPrototypeCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "=>"
protected class ComponentPrototypeBinding_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public ComponentPrototypeBinding_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_FormalAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "feature"
protected class ComponentPrototypeBinding_FeatureKeyword_2 extends KeywordToken  {
	
	public ComponentPrototypeBinding_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actual+=ComponentReference | "(" actual+=ComponentReference ("," actual+=ComponentReference)* ")"
protected class ComponentPrototypeBinding_Alternatives_3 extends AlternativesToken {

	public ComponentPrototypeBinding_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_ActualAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentPrototypeBinding_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actual+=ComponentReference
protected class ComponentPrototypeBinding_ActualAssignment_3_0 extends AssignmentToken  {
	
	public ComponentPrototypeBinding_ActualAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getActualAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actual",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actual");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentPrototypeBindingAccess().getActualComponentReferenceParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComponentPrototypeBinding_FeatureKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "(" actual+=ComponentReference ("," actual+=ComponentReference)* ")"
protected class ComponentPrototypeBinding_Group_3_1 extends GroupToken {
	
	public ComponentPrototypeBinding_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ComponentPrototypeBinding_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public ComponentPrototypeBinding_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_FeatureKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actual+=ComponentReference
protected class ComponentPrototypeBinding_ActualAssignment_3_1_1 extends AssignmentToken  {
	
	public ComponentPrototypeBinding_ActualAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getActualAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actual",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actual");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentPrototypeBindingAccess().getActualComponentReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComponentPrototypeBinding_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," actual+=ComponentReference)*
protected class ComponentPrototypeBinding_Group_3_1_2 extends GroupToken {
	
	public ComponentPrototypeBinding_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_ActualAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ComponentPrototypeBinding_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public ComponentPrototypeBinding_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentPrototypeBinding_ActualAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actual+=ComponentReference
protected class ComponentPrototypeBinding_ActualAssignment_3_1_2_1 extends AssignmentToken  {
	
	public ComponentPrototypeBinding_ActualAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getActualAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actual",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actual");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentPrototypeBindingAccess().getActualComponentReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComponentPrototypeBinding_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ComponentPrototypeBinding_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public ComponentPrototypeBinding_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentPrototypeBindingAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentPrototypeBinding_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentPrototypeBinding_ActualAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}




/************ end Rule ComponentPrototypeBinding ****************/


/************ begin Rule ComponentReference ****************
 *
 * ComponentReference returns aadl2::ComponentReference:
 * 	category=ComponentCategory ("(" binding+=PrototypeBinding ("," binding+=PrototypeBinding)* ")")?;
 *
 **/

// category=ComponentCategory ("(" binding+=PrototypeBinding ("," binding+=PrototypeBinding)* ")")?
protected class ComponentReference_Group extends GroupToken {
	
	public ComponentReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentReference_CategoryAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// category=ComponentCategory
protected class ComponentReference_CategoryAssignment_0 extends AssignmentToken  {
	
	public ComponentReference_CategoryAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getCategoryAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("category",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("category");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComponentReferenceAccess().getCategoryComponentCategoryParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getComponentReferenceAccess().getCategoryComponentCategoryParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ("(" binding+=PrototypeBinding ("," binding+=PrototypeBinding)* ")")?
protected class ComponentReference_Group_1 extends GroupToken {
	
	public ComponentReference_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_RightParenthesisKeyword_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ComponentReference_LeftParenthesisKeyword_1_0 extends KeywordToken  {
	
	public ComponentReference_LeftParenthesisKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getLeftParenthesisKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_CategoryAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// binding+=PrototypeBinding
protected class ComponentReference_BindingAssignment_1_1 extends AssignmentToken  {
	
	public ComponentReference_BindingAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getBindingAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("binding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("binding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentReferenceAccess().getBindingPrototypeBindingParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComponentReference_LeftParenthesisKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," binding+=PrototypeBinding)*
protected class ComponentReference_Group_1_2 extends GroupToken {
	
	public ComponentReference_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_BindingAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ComponentReference_CommaKeyword_1_2_0 extends KeywordToken  {
	
	public ComponentReference_CommaKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getCommaKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentReference_BindingAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// binding+=PrototypeBinding
protected class ComponentReference_BindingAssignment_1_2_1 extends AssignmentToken  {
	
	public ComponentReference_BindingAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getBindingAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("binding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("binding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentReferenceAccess().getBindingPrototypeBindingParserRuleCall_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ComponentReference_CommaKeyword_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ComponentReference_RightParenthesisKeyword_1_3 extends KeywordToken  {
	
	public ComponentReference_RightParenthesisKeyword_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentReferenceAccess().getRightParenthesisKeyword_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentReference_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ComponentReference_BindingAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule ComponentReference ****************/


/************ begin Rule AbstractSubcomponent ****************
 *
 * / *
 *  * Subcomponents
 *  * / AbstractSubcomponent returns aadl2::AbstractSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::SystemSubcomponent] ":" "refined" "to") "abstract" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(abstractClassifier=[aadl2::AbstractClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::SystemSubcomponent] ":" "refined" "to") "abstract" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (abstractClassifier=[aadl2::AbstractClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class AbstractSubcomponent_Group extends GroupToken {
	
	public AbstractSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::SystemSubcomponent] ":" "refined" "to"
protected class AbstractSubcomponent_Alternatives_0 extends AlternativesToken {

	public AbstractSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class AbstractSubcomponent_Group_0_0 extends GroupToken {
	
	public AbstractSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class AbstractSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public AbstractSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAbstractSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class AbstractSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public AbstractSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::SystemSubcomponent] ":" "refined" "to"
protected class AbstractSubcomponent_Group_0_1 extends GroupToken {
	
	public AbstractSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::SystemSubcomponent]
protected class AbstractSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public AbstractSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentAccess().getRefinedSystemSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAbstractSubcomponentAccess().getRefinedSystemSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class AbstractSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public AbstractSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class AbstractSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public AbstractSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class AbstractSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public AbstractSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "abstract"
protected class AbstractSubcomponent_AbstractKeyword_1 extends KeywordToken  {
	
	public AbstractSubcomponent_AbstractKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getAbstractKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (abstractClassifier=[aadl2::AbstractClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class AbstractSubcomponent_Group_2 extends GroupToken {
	
	public AbstractSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_AbstractClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// abstractClassifier=[aadl2::AbstractClassifier|QCREF]
protected class AbstractSubcomponent_AbstractClassifierAssignment_2_0 extends AssignmentToken  {
	
	public AbstractSubcomponent_AbstractClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getAbstractClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_AbstractKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("abstractClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("abstractClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractSubcomponentAccess().getAbstractClassifierAbstractClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAbstractSubcomponentAccess().getAbstractClassifierAbstractClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class AbstractSubcomponent_Group_2_1 extends GroupToken {
	
	public AbstractSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class AbstractSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public AbstractSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_AbstractClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class AbstractSubcomponent_Group_2_1_2 extends GroupToken {
	
	public AbstractSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AbstractSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public AbstractSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class AbstractSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public AbstractSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class AbstractSubcomponent_Group_3 extends GroupToken {
	
	public AbstractSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class AbstractSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public AbstractSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractSubcomponent_AbstractKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class AbstractSubcomponent_Group_3_1 extends GroupToken {
	
	public AbstractSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class AbstractSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public AbstractSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class AbstractSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public AbstractSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class AbstractSubcomponent_Group_3_1_2 extends GroupToken {
	
	public AbstractSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AbstractSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public AbstractSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class AbstractSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public AbstractSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class AbstractSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public AbstractSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class AbstractSubcomponent_Group_4 extends GroupToken {
	
	public AbstractSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class AbstractSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public AbstractSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractSubcomponent_AbstractKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class AbstractSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public AbstractSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AbstractSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public AbstractSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class AbstractSubcomponent_Group_5 extends GroupToken {
	
	public AbstractSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class AbstractSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public AbstractSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractSubcomponent_AbstractKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class AbstractSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public AbstractSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class AbstractSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public AbstractSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class AbstractSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public AbstractSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class AbstractSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public AbstractSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class AbstractSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public AbstractSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAbstractSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class AbstractSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public AbstractSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class AbstractSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public AbstractSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new AbstractSubcomponent_AbstractKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule AbstractSubcomponent ****************/


/************ begin Rule SystemSubcomponent ****************
 *
 * SystemSubcomponent returns aadl2::SystemSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::SystemSubcomponent] ":" "refined" "to") "system" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(systemClassifier=[aadl2::SystemClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::SystemSubcomponent] ":" "refined" "to") "system" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (systemClassifier=[aadl2::SystemClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class SystemSubcomponent_Group extends GroupToken {
	
	public SystemSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSystemSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::SystemSubcomponent] ":" "refined" "to"
protected class SystemSubcomponent_Alternatives_0 extends AlternativesToken {

	public SystemSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class SystemSubcomponent_Group_0_0 extends GroupToken {
	
	public SystemSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class SystemSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public SystemSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSystemSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSystemSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class SystemSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public SystemSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::SystemSubcomponent] ":" "refined" "to"
protected class SystemSubcomponent_Group_0_1 extends GroupToken {
	
	public SystemSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::SystemSubcomponent]
protected class SystemSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public SystemSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemSubcomponentAccess().getRefinedSystemSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSystemSubcomponentAccess().getRefinedSystemSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class SystemSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public SystemSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class SystemSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public SystemSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class SystemSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public SystemSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "system"
protected class SystemSubcomponent_SystemKeyword_1 extends KeywordToken  {
	
	public SystemSubcomponent_SystemKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getSystemKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (systemClassifier=[aadl2::SystemClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SystemSubcomponent_Group_2 extends GroupToken {
	
	public SystemSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_SystemClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// systemClassifier=[aadl2::SystemClassifier|QCREF]
protected class SystemSubcomponent_SystemClassifierAssignment_2_0 extends AssignmentToken  {
	
	public SystemSubcomponent_SystemClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getSystemClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_SystemKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("systemClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("systemClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSystemSubcomponentAccess().getSystemClassifierSystemClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSystemSubcomponentAccess().getSystemClassifierSystemClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SystemSubcomponent_Group_2_1 extends GroupToken {
	
	public SystemSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SystemSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public SystemSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_SystemClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SystemSubcomponent_Group_2_1_2 extends GroupToken {
	
	public SystemSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SystemSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public SystemSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SystemSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public SystemSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class SystemSubcomponent_Group_3 extends GroupToken {
	
	public SystemSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class SystemSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public SystemSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemSubcomponent_SystemKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class SystemSubcomponent_Group_3_1 extends GroupToken {
	
	public SystemSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SystemSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public SystemSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class SystemSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public SystemSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class SystemSubcomponent_Group_3_1_2 extends GroupToken {
	
	public SystemSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SystemSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public SystemSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class SystemSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public SystemSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SystemSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public SystemSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class SystemSubcomponent_Group_4 extends GroupToken {
	
	public SystemSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class SystemSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public SystemSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemSubcomponent_SystemKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class SystemSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public SystemSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SystemSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public SystemSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class SystemSubcomponent_Group_5 extends GroupToken {
	
	public SystemSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class SystemSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public SystemSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemSubcomponent_SystemKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class SystemSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public SystemSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class SystemSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public SystemSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class SystemSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public SystemSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class SystemSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public SystemSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSystemSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SystemSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SystemSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class SystemSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public SystemSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSystemSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class SystemSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public SystemSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class SystemSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public SystemSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSystemSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SystemSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SystemSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SystemSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SystemSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SystemSubcomponent_SystemKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule SystemSubcomponent ****************/


/************ begin Rule ProcessSubcomponent ****************
 *
 * ProcessSubcomponent returns aadl2::ProcessSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::ProcessSubcomponent] ":" "refined" "to") "process" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(processClassifier=[aadl2::ProcessClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::ProcessSubcomponent] ":" "refined" "to") "process" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (processClassifier=[aadl2::ProcessClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class ProcessSubcomponent_Group extends GroupToken {
	
	public ProcessSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::ProcessSubcomponent] ":" "refined" "to"
protected class ProcessSubcomponent_Alternatives_0 extends AlternativesToken {

	public ProcessSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class ProcessSubcomponent_Group_0_0 extends GroupToken {
	
	public ProcessSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ProcessSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public ProcessSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getProcessSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ProcessSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public ProcessSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::ProcessSubcomponent] ":" "refined" "to"
protected class ProcessSubcomponent_Group_0_1 extends GroupToken {
	
	public ProcessSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::ProcessSubcomponent]
protected class ProcessSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public ProcessSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessSubcomponentAccess().getRefinedProcessSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getProcessSubcomponentAccess().getRefinedProcessSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class ProcessSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public ProcessSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class ProcessSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public ProcessSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ProcessSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public ProcessSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "process"
protected class ProcessSubcomponent_ProcessKeyword_1 extends KeywordToken  {
	
	public ProcessSubcomponent_ProcessKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getProcessKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (processClassifier=[aadl2::ProcessClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ProcessSubcomponent_Group_2 extends GroupToken {
	
	public ProcessSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_ProcessClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// processClassifier=[aadl2::ProcessClassifier|QCREF]
protected class ProcessSubcomponent_ProcessClassifierAssignment_2_0 extends AssignmentToken  {
	
	public ProcessSubcomponent_ProcessClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getProcessClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ProcessKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("processClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("processClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessSubcomponentAccess().getProcessClassifierProcessClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getProcessSubcomponentAccess().getProcessClassifierProcessClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ProcessSubcomponent_Group_2_1 extends GroupToken {
	
	public ProcessSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public ProcessSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ProcessClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ProcessSubcomponent_Group_2_1_2 extends GroupToken {
	
	public ProcessSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public ProcessSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public ProcessSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class ProcessSubcomponent_Group_3 extends GroupToken {
	
	public ProcessSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class ProcessSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public ProcessSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessSubcomponent_ProcessKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class ProcessSubcomponent_Group_3_1 extends GroupToken {
	
	public ProcessSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public ProcessSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ProcessSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public ProcessSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class ProcessSubcomponent_Group_3_1_2 extends GroupToken {
	
	public ProcessSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public ProcessSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ProcessSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public ProcessSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public ProcessSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class ProcessSubcomponent_Group_4 extends GroupToken {
	
	public ProcessSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class ProcessSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public ProcessSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessSubcomponent_ProcessKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class ProcessSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public ProcessSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ProcessSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public ProcessSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class ProcessSubcomponent_Group_5 extends GroupToken {
	
	public ProcessSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class ProcessSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public ProcessSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessSubcomponent_ProcessKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class ProcessSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public ProcessSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ProcessSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public ProcessSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class ProcessSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public ProcessSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class ProcessSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public ProcessSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class ProcessSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public ProcessSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class ProcessSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public ProcessSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ProcessSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public ProcessSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessSubcomponent_ProcessKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProcessSubcomponent ****************/


/************ begin Rule ThreadGroupSubcomponent ****************
 *
 * ThreadGroupSubcomponent returns aadl2::ThreadGroupSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::ThreadGroupSubcomponent] ":" "refined" "to") "thread" "group" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(threadGroupClassifier=[aadl2::ThreadGroupClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::ThreadGroupSubcomponent] ":" "refined" "to") "thread" "group" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (threadGroupClassifier=[aadl2::ThreadGroupClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class ThreadGroupSubcomponent_Group extends GroupToken {
	
	public ThreadGroupSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThreadGroupSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::ThreadGroupSubcomponent] ":" "refined" "to"
protected class ThreadGroupSubcomponent_Alternatives_0 extends AlternativesToken {

	public ThreadGroupSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class ThreadGroupSubcomponent_Group_0_0 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ThreadGroupSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThreadGroupSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThreadGroupSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ThreadGroupSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::ThreadGroupSubcomponent] ":" "refined" "to"
protected class ThreadGroupSubcomponent_Group_0_1 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::ThreadGroupSubcomponent]
protected class ThreadGroupSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupSubcomponentAccess().getRefinedThreadGroupSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getRefinedThreadGroupSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class ThreadGroupSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class ThreadGroupSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ThreadGroupSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "thread"
protected class ThreadGroupSubcomponent_ThreadKeyword_1 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_ThreadKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getThreadKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class ThreadGroupSubcomponent_GroupKeyword_2 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_GroupKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroupKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ThreadKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (threadGroupClassifier=[aadl2::ThreadGroupClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ThreadGroupSubcomponent_Group_3 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_ThreadGroupClassifierAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// threadGroupClassifier=[aadl2::ThreadGroupClassifier|QCREF]
protected class ThreadGroupSubcomponent_ThreadGroupClassifierAssignment_3_0 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_ThreadGroupClassifierAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getThreadGroupClassifierAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("threadGroupClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("threadGroupClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadGroupSubcomponentAccess().getThreadGroupClassifierThreadGroupClassifierCrossReference_3_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getThreadGroupClassifierThreadGroupClassifierCrossReference_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ThreadGroupSubcomponent_Group_3_1 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadGroupSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ThreadGroupClassifierAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ThreadGroupSubcomponent_Group_3_1_2 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadGroupSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadGroupSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class ThreadGroupSubcomponent_Group_4 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class ThreadGroupSubcomponent_ArraySpecificationAssignment_4_0 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_ArraySpecificationAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getArraySpecificationAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class ThreadGroupSubcomponent_Group_4_1 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_RightParenthesisKeyword_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadGroupSubcomponent_LeftParenthesisKeyword_4_1_0 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_LeftParenthesisKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getLeftParenthesisKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_1 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getImplementationReferenceAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_LeftParenthesisKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class ThreadGroupSubcomponent_Group_4_1_2 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadGroupSubcomponent_CommaKeyword_4_1_2_0 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_CommaKeyword_4_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getCommaKeyword_4_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_2_1 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getImplementationReferenceAssignment_4_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_CommaKeyword_4_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadGroupSubcomponent_RightParenthesisKeyword_4_1_3 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_RightParenthesisKeyword_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getRightParenthesisKeyword_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class ThreadGroupSubcomponent_Group_5 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_RightCurlyBracketKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class ThreadGroupSubcomponent_LeftCurlyBracketKeyword_5_0 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_LeftCurlyBracketKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getLeftCurlyBracketKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class ThreadGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getOwnedPropertyAssociationAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupSubcomponent_LeftCurlyBracketKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ThreadGroupSubcomponent_RightCurlyBracketKeyword_5_2 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_RightCurlyBracketKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getRightCurlyBracketKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class ThreadGroupSubcomponent_Group_6 extends GroupToken {
	
	public ThreadGroupSubcomponent_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_RightParenthesisKeyword_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class ThreadGroupSubcomponent_InKeyword_6_0 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_InKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getInKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class ThreadGroupSubcomponent_ModesKeyword_6_1 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_ModesKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getModesKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_InKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ThreadGroupSubcomponent_LeftParenthesisKeyword_6_2 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_LeftParenthesisKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getLeftParenthesisKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ModesKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class ThreadGroupSubcomponent_Alternatives_6_3 extends AlternativesToken {

	public ThreadGroupSubcomponent_Alternatives_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getAlternatives_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_AllModesAssignment_6_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class ThreadGroupSubcomponent_ModeBindingAssignment_6_3_0 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_ModeBindingAssignment_6_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getModeBindingAssignment_6_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadGroupSubcomponentAccess().getModeBindingModeRefParserRuleCall_6_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadGroupSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class ThreadGroupSubcomponent_AllModesAssignment_6_3_1 extends AssignmentToken  {
	
	public ThreadGroupSubcomponent_AllModesAssignment_6_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getAllModesAssignment_6_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadGroupSubcomponentAccess().getAllModesAllKeyword_6_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class ThreadGroupSubcomponent_RightParenthesisKeyword_6_4 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_RightParenthesisKeyword_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getRightParenthesisKeyword_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Alternatives_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ThreadGroupSubcomponent_SemicolonKeyword_7 extends KeywordToken  {
	
	public ThreadGroupSubcomponent_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadGroupSubcomponentAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadGroupSubcomponent_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadGroupSubcomponent_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadGroupSubcomponent_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadGroupSubcomponent_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThreadGroupSubcomponent ****************/


/************ begin Rule ThreadSubcomponent ****************
 *
 * ThreadSubcomponent returns aadl2::ThreadSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::ThreadSubcomponent] ":" "refined" "to") "thread" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(threadClassifier=[aadl2::ThreadClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::ThreadSubcomponent] ":" "refined" "to") "thread" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (threadClassifier=[aadl2::ThreadClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class ThreadSubcomponent_Group extends GroupToken {
	
	public ThreadSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThreadSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::ThreadSubcomponent] ":" "refined" "to"
protected class ThreadSubcomponent_Alternatives_0 extends AlternativesToken {

	public ThreadSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class ThreadSubcomponent_Group_0_0 extends GroupToken {
	
	public ThreadSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ThreadSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public ThreadSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThreadSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThreadSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ThreadSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public ThreadSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::ThreadSubcomponent] ":" "refined" "to"
protected class ThreadSubcomponent_Group_0_1 extends GroupToken {
	
	public ThreadSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::ThreadSubcomponent]
protected class ThreadSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public ThreadSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadSubcomponentAccess().getRefinedThreadSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getThreadSubcomponentAccess().getRefinedThreadSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class ThreadSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public ThreadSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class ThreadSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public ThreadSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ThreadSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public ThreadSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "thread"
protected class ThreadSubcomponent_ThreadKeyword_1 extends KeywordToken  {
	
	public ThreadSubcomponent_ThreadKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getThreadKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (threadClassifier=[aadl2::ThreadClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ThreadSubcomponent_Group_2 extends GroupToken {
	
	public ThreadSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_ThreadClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// threadClassifier=[aadl2::ThreadClassifier|QCREF]
protected class ThreadSubcomponent_ThreadClassifierAssignment_2_0 extends AssignmentToken  {
	
	public ThreadSubcomponent_ThreadClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getThreadClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ThreadKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("threadClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("threadClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getThreadSubcomponentAccess().getThreadClassifierThreadClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getThreadSubcomponentAccess().getThreadClassifierThreadClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ThreadSubcomponent_Group_2_1 extends GroupToken {
	
	public ThreadSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public ThreadSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ThreadClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ThreadSubcomponent_Group_2_1_2 extends GroupToken {
	
	public ThreadSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public ThreadSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public ThreadSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class ThreadSubcomponent_Group_3 extends GroupToken {
	
	public ThreadSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class ThreadSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public ThreadSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadSubcomponent_ThreadKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class ThreadSubcomponent_Group_3_1 extends GroupToken {
	
	public ThreadSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ThreadSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public ThreadSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ThreadSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public ThreadSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class ThreadSubcomponent_Group_3_1_2 extends GroupToken {
	
	public ThreadSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ThreadSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public ThreadSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ThreadSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public ThreadSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ThreadSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public ThreadSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class ThreadSubcomponent_Group_4 extends GroupToken {
	
	public ThreadSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class ThreadSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public ThreadSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadSubcomponent_ThreadKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class ThreadSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public ThreadSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ThreadSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public ThreadSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class ThreadSubcomponent_Group_5 extends GroupToken {
	
	public ThreadSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class ThreadSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public ThreadSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadSubcomponent_ThreadKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class ThreadSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public ThreadSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ThreadSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public ThreadSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class ThreadSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public ThreadSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class ThreadSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public ThreadSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThreadSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThreadSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThreadSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class ThreadSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public ThreadSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getThreadSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class ThreadSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public ThreadSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ThreadSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public ThreadSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThreadSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThreadSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ThreadSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ThreadSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ThreadSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ThreadSubcomponent_ThreadKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThreadSubcomponent ****************/


/************ begin Rule SubprogramSubcomponent ****************
 *
 * SubprogramSubcomponent returns aadl2::SubprogramSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::SubprogramSubcomponent] ":" "refined" "to") "subprogram" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(subprogramClassifier=[aadl2::SubprogramClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::SubprogramSubcomponent] ":" "refined" "to") "subprogram" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (subprogramClassifier=[aadl2::SubprogramClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class SubprogramSubcomponent_Group extends GroupToken {
	
	public SubprogramSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::SubprogramSubcomponent] ":" "refined" "to"
protected class SubprogramSubcomponent_Alternatives_0 extends AlternativesToken {

	public SubprogramSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class SubprogramSubcomponent_Group_0_0 extends GroupToken {
	
	public SubprogramSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class SubprogramSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public SubprogramSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class SubprogramSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public SubprogramSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::SubprogramSubcomponent] ":" "refined" "to"
protected class SubprogramSubcomponent_Group_0_1 extends GroupToken {
	
	public SubprogramSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::SubprogramSubcomponent]
protected class SubprogramSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public SubprogramSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentAccess().getRefinedSubprogramSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramSubcomponentAccess().getRefinedSubprogramSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class SubprogramSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public SubprogramSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class SubprogramSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public SubprogramSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class SubprogramSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public SubprogramSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "subprogram"
protected class SubprogramSubcomponent_SubprogramKeyword_1 extends KeywordToken  {
	
	public SubprogramSubcomponent_SubprogramKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getSubprogramKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (subprogramClassifier=[aadl2::SubprogramClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SubprogramSubcomponent_Group_2 extends GroupToken {
	
	public SubprogramSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_SubprogramClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// subprogramClassifier=[aadl2::SubprogramClassifier|QCREF]
protected class SubprogramSubcomponent_SubprogramClassifierAssignment_2_0 extends AssignmentToken  {
	
	public SubprogramSubcomponent_SubprogramClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getSubprogramClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_SubprogramKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subprogramClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subprogramClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramSubcomponentAccess().getSubprogramClassifierSubprogramClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramSubcomponentAccess().getSubprogramClassifierSubprogramClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SubprogramSubcomponent_Group_2_1 extends GroupToken {
	
	public SubprogramSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public SubprogramSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_SubprogramClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SubprogramSubcomponent_Group_2_1_2 extends GroupToken {
	
	public SubprogramSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public SubprogramSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public SubprogramSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class SubprogramSubcomponent_Group_3 extends GroupToken {
	
	public SubprogramSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class SubprogramSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public SubprogramSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramSubcomponent_SubprogramKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class SubprogramSubcomponent_Group_3_1 extends GroupToken {
	
	public SubprogramSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public SubprogramSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class SubprogramSubcomponent_Group_3_1_2 extends GroupToken {
	
	public SubprogramSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public SubprogramSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public SubprogramSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class SubprogramSubcomponent_Group_4 extends GroupToken {
	
	public SubprogramSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class SubprogramSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public SubprogramSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramSubcomponent_SubprogramKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class SubprogramSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public SubprogramSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SubprogramSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public SubprogramSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class SubprogramSubcomponent_Group_5 extends GroupToken {
	
	public SubprogramSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class SubprogramSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public SubprogramSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramSubcomponent_SubprogramKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class SubprogramSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public SubprogramSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class SubprogramSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public SubprogramSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class SubprogramSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public SubprogramSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class SubprogramSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public SubprogramSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class SubprogramSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public SubprogramSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class SubprogramSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public SubprogramSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class SubprogramSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public SubprogramSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramSubcomponent_SubprogramKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramSubcomponent ****************/


/************ begin Rule SubprogramGroupSubcomponent ****************
 *
 * SubprogramGroupSubcomponent returns aadl2::SubprogramGroupSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::SubprogramGroupSubcomponent] ":" "refined" "to") "subprogram" "group" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
 * 	(subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::SubprogramGroupSubcomponent] ":" "refined" "to") "subprogram" "group" //	(classifier=[ComponentClassifierOrPrototype|QCREF] )?
// (subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class SubprogramGroupSubcomponent_Group extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramGroupSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::SubprogramGroupSubcomponent] ":" "refined" "to"
protected class SubprogramGroupSubcomponent_Alternatives_0 extends AlternativesToken {

	public SubprogramGroupSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class SubprogramGroupSubcomponent_Group_0_0 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class SubprogramGroupSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramGroupSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramGroupSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class SubprogramGroupSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::SubprogramGroupSubcomponent] ":" "refined" "to"
protected class SubprogramGroupSubcomponent_Group_0_1 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::SubprogramGroupSubcomponent]
protected class SubprogramGroupSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentAccess().getRefinedSubprogramGroupSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getRefinedSubprogramGroupSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class SubprogramGroupSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class SubprogramGroupSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class SubprogramGroupSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "subprogram"
protected class SubprogramGroupSubcomponent_SubprogramKeyword_1 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_SubprogramKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getSubprogramKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class SubprogramGroupSubcomponent_GroupKeyword_2 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_GroupKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroupKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_SubprogramKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class SubprogramGroupSubcomponent_Group_3 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_SubprogramGroupClassifierAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF]
protected class SubprogramGroupSubcomponent_SubprogramGroupClassifierAssignment_3_0 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_SubprogramGroupClassifierAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getSubprogramGroupClassifierAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subprogramGroupClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subprogramGroupClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupSubcomponentAccess().getSubprogramGroupClassifierSubprogramGroupClassifierCrossReference_3_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getSubprogramGroupClassifierSubprogramGroupClassifierCrossReference_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class SubprogramGroupSubcomponent_Group_3_1 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramGroupSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_SubprogramGroupClassifierAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class SubprogramGroupSubcomponent_Group_3_1_2 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramGroupSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramGroupSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class SubprogramGroupSubcomponent_Group_4 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class SubprogramGroupSubcomponent_ArraySpecificationAssignment_4_0 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_ArraySpecificationAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getArraySpecificationAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class SubprogramGroupSubcomponent_Group_4_1 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_RightParenthesisKeyword_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class SubprogramGroupSubcomponent_LeftParenthesisKeyword_4_1_0 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_LeftParenthesisKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getLeftParenthesisKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_1 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getImplementationReferenceAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_LeftParenthesisKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class SubprogramGroupSubcomponent_Group_4_1_2 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SubprogramGroupSubcomponent_CommaKeyword_4_1_2_0 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_CommaKeyword_4_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getCommaKeyword_4_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_2_1 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getImplementationReferenceAssignment_4_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_CommaKeyword_4_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class SubprogramGroupSubcomponent_RightParenthesisKeyword_4_1_3 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_RightParenthesisKeyword_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getRightParenthesisKeyword_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class SubprogramGroupSubcomponent_Group_5 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_RightCurlyBracketKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class SubprogramGroupSubcomponent_LeftCurlyBracketKeyword_5_0 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_LeftCurlyBracketKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getLeftCurlyBracketKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class SubprogramGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getOwnedPropertyAssociationAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupSubcomponent_LeftCurlyBracketKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SubprogramGroupSubcomponent_RightCurlyBracketKeyword_5_2 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_RightCurlyBracketKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getRightCurlyBracketKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class SubprogramGroupSubcomponent_Group_6 extends GroupToken {
	
	public SubprogramGroupSubcomponent_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_RightParenthesisKeyword_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class SubprogramGroupSubcomponent_InKeyword_6_0 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_InKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getInKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class SubprogramGroupSubcomponent_ModesKeyword_6_1 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_ModesKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getModesKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_InKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class SubprogramGroupSubcomponent_LeftParenthesisKeyword_6_2 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_LeftParenthesisKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getLeftParenthesisKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ModesKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class SubprogramGroupSubcomponent_Alternatives_6_3 extends AlternativesToken {

	public SubprogramGroupSubcomponent_Alternatives_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getAlternatives_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_AllModesAssignment_6_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class SubprogramGroupSubcomponent_ModeBindingAssignment_6_3_0 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_ModeBindingAssignment_6_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getModeBindingAssignment_6_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupSubcomponentAccess().getModeBindingModeRefParserRuleCall_6_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class SubprogramGroupSubcomponent_AllModesAssignment_6_3_1 extends AssignmentToken  {
	
	public SubprogramGroupSubcomponent_AllModesAssignment_6_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getAllModesAssignment_6_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSubprogramGroupSubcomponentAccess().getAllModesAllKeyword_6_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class SubprogramGroupSubcomponent_RightParenthesisKeyword_6_4 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_RightParenthesisKeyword_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getRightParenthesisKeyword_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Alternatives_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class SubprogramGroupSubcomponent_SemicolonKeyword_7 extends KeywordToken  {
	
	public SubprogramGroupSubcomponent_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupSubcomponentAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupSubcomponent_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupSubcomponent_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupSubcomponent_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupSubcomponent_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SubprogramGroupSubcomponent_GroupKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramGroupSubcomponent ****************/


/************ begin Rule ProcessorSubcomponent ****************
 *
 * ProcessorSubcomponent returns aadl2::ProcessorSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::ProcessorSubcomponent] ":" "refined" "to") "processor"
 * 	(processorClassifier=[aadl2::ProcessorClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::ProcessorSubcomponent] ":" "refined" "to") "processor"
// (processorClassifier=[aadl2::ProcessorClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class ProcessorSubcomponent_Group extends GroupToken {
	
	public ProcessorSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessorSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::ProcessorSubcomponent] ":" "refined" "to"
protected class ProcessorSubcomponent_Alternatives_0 extends AlternativesToken {

	public ProcessorSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class ProcessorSubcomponent_Group_0_0 extends GroupToken {
	
	public ProcessorSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ProcessorSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public ProcessorSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessorSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getProcessorSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ProcessorSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public ProcessorSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::ProcessorSubcomponent] ":" "refined" "to"
protected class ProcessorSubcomponent_Group_0_1 extends GroupToken {
	
	public ProcessorSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::ProcessorSubcomponent]
protected class ProcessorSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public ProcessorSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorSubcomponentAccess().getRefinedProcessorSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getProcessorSubcomponentAccess().getRefinedProcessorSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class ProcessorSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public ProcessorSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class ProcessorSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public ProcessorSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ProcessorSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public ProcessorSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "processor"
protected class ProcessorSubcomponent_ProcessorKeyword_1 extends KeywordToken  {
	
	public ProcessorSubcomponent_ProcessorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getProcessorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (processorClassifier=[aadl2::ProcessorClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class ProcessorSubcomponent_Group_2 extends GroupToken {
	
	public ProcessorSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_ProcessorClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// processorClassifier=[aadl2::ProcessorClassifier|QCREF]
protected class ProcessorSubcomponent_ProcessorClassifierAssignment_2_0 extends AssignmentToken  {
	
	public ProcessorSubcomponent_ProcessorClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getProcessorClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ProcessorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("processorClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("processorClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessorSubcomponentAccess().getProcessorClassifierProcessorClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getProcessorSubcomponentAccess().getProcessorClassifierProcessorClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class ProcessorSubcomponent_Group_2_1 extends GroupToken {
	
	public ProcessorSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessorSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public ProcessorSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ProcessorClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class ProcessorSubcomponent_Group_2_1_2 extends GroupToken {
	
	public ProcessorSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessorSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public ProcessorSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessorSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public ProcessorSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class ProcessorSubcomponent_Group_3 extends GroupToken {
	
	public ProcessorSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class ProcessorSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public ProcessorSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorSubcomponent_ProcessorKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class ProcessorSubcomponent_Group_3_1 extends GroupToken {
	
	public ProcessorSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class ProcessorSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public ProcessorSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class ProcessorSubcomponent_Group_3_1_2 extends GroupToken {
	
	public ProcessorSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ProcessorSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public ProcessorSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class ProcessorSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public ProcessorSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class ProcessorSubcomponent_Group_4 extends GroupToken {
	
	public ProcessorSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class ProcessorSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public ProcessorSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorSubcomponent_ProcessorKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class ProcessorSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public ProcessorSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ProcessorSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public ProcessorSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class ProcessorSubcomponent_Group_5 extends GroupToken {
	
	public ProcessorSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class ProcessorSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public ProcessorSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorSubcomponent_ProcessorKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class ProcessorSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public ProcessorSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ProcessorSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public ProcessorSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class ProcessorSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public ProcessorSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class ProcessorSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public ProcessorSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessorSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProcessorSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProcessorSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class ProcessorSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public ProcessorSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessorSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class ProcessorSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public ProcessorSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ProcessorSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public ProcessorSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessorSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessorSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessorSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessorSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessorSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessorSubcomponent_ProcessorKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProcessorSubcomponent ****************/


/************ begin Rule VirtualProcessorSubcomponent ****************
 *
 * VirtualProcessorSubcomponent returns aadl2::VirtualProcessorSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::VirtualProcessorSubcomponent] ":" "refined" "to") "virtual" "processor"
 * 	(virtualProcessorClassifier=[aadl2::VirtualProcessorClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding
 * 	("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::VirtualProcessorSubcomponent] ":" "refined" "to") "virtual" "processor"
// (virtualProcessorClassifier=[aadl2::VirtualProcessorClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class VirtualProcessorSubcomponent_Group extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVirtualProcessorSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::VirtualProcessorSubcomponent] ":" "refined" "to"
protected class VirtualProcessorSubcomponent_Alternatives_0 extends AlternativesToken {

	public VirtualProcessorSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class VirtualProcessorSubcomponent_Group_0_0 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class VirtualProcessorSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVirtualProcessorSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVirtualProcessorSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class VirtualProcessorSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::VirtualProcessorSubcomponent] ":" "refined" "to"
protected class VirtualProcessorSubcomponent_Group_0_1 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::VirtualProcessorSubcomponent]
protected class VirtualProcessorSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorSubcomponentAccess().getRefinedVirtualProcessorSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getRefinedVirtualProcessorSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class VirtualProcessorSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class VirtualProcessorSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class VirtualProcessorSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "virtual"
protected class VirtualProcessorSubcomponent_VirtualKeyword_1 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_VirtualKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getVirtualKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "processor"
protected class VirtualProcessorSubcomponent_ProcessorKeyword_2 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_ProcessorKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getProcessorKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_VirtualKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (virtualProcessorClassifier=[aadl2::VirtualProcessorClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class VirtualProcessorSubcomponent_Group_3 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_VirtualProcessorClassifierAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// virtualProcessorClassifier=[aadl2::VirtualProcessorClassifier|QCREF]
protected class VirtualProcessorSubcomponent_VirtualProcessorClassifierAssignment_3_0 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_VirtualProcessorClassifierAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getVirtualProcessorClassifierAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ProcessorKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("virtualProcessorClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("virtualProcessorClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualProcessorSubcomponentAccess().getVirtualProcessorClassifierVirtualProcessorClassifierCrossReference_3_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getVirtualProcessorClassifierVirtualProcessorClassifierCrossReference_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class VirtualProcessorSubcomponent_Group_3_1 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualProcessorSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_VirtualProcessorClassifierAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class VirtualProcessorSubcomponent_Group_3_1_2 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualProcessorSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualProcessorSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class VirtualProcessorSubcomponent_Group_4 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class VirtualProcessorSubcomponent_ArraySpecificationAssignment_4_0 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_ArraySpecificationAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getArraySpecificationAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorSubcomponent_ProcessorKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class VirtualProcessorSubcomponent_Group_4_1 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_RightParenthesisKeyword_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualProcessorSubcomponent_LeftParenthesisKeyword_4_1_0 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_LeftParenthesisKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getLeftParenthesisKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_1 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getImplementationReferenceAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_LeftParenthesisKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class VirtualProcessorSubcomponent_Group_4_1_2 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualProcessorSubcomponent_CommaKeyword_4_1_2_0 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_CommaKeyword_4_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getCommaKeyword_4_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_2_1 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getImplementationReferenceAssignment_4_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_CommaKeyword_4_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualProcessorSubcomponent_RightParenthesisKeyword_4_1_3 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_RightParenthesisKeyword_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getRightParenthesisKeyword_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class VirtualProcessorSubcomponent_Group_5 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_RightCurlyBracketKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class VirtualProcessorSubcomponent_LeftCurlyBracketKeyword_5_0 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_LeftCurlyBracketKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getLeftCurlyBracketKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorSubcomponent_ProcessorKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class VirtualProcessorSubcomponent_OwnedPropertyAssociationAssignment_5_1 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_OwnedPropertyAssociationAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getOwnedPropertyAssociationAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorSubcomponent_LeftCurlyBracketKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class VirtualProcessorSubcomponent_RightCurlyBracketKeyword_5_2 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_RightCurlyBracketKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getRightCurlyBracketKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class VirtualProcessorSubcomponent_Group_6 extends GroupToken {
	
	public VirtualProcessorSubcomponent_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_RightParenthesisKeyword_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class VirtualProcessorSubcomponent_InKeyword_6_0 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_InKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getInKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorSubcomponent_ProcessorKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class VirtualProcessorSubcomponent_ModesKeyword_6_1 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_ModesKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getModesKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_InKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class VirtualProcessorSubcomponent_LeftParenthesisKeyword_6_2 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_LeftParenthesisKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getLeftParenthesisKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ModesKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class VirtualProcessorSubcomponent_Alternatives_6_3 extends AlternativesToken {

	public VirtualProcessorSubcomponent_Alternatives_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getAlternatives_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_AllModesAssignment_6_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class VirtualProcessorSubcomponent_ModeBindingAssignment_6_3_0 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_ModeBindingAssignment_6_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getModeBindingAssignment_6_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualProcessorSubcomponentAccess().getModeBindingModeRefParserRuleCall_6_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualProcessorSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class VirtualProcessorSubcomponent_AllModesAssignment_6_3_1 extends AssignmentToken  {
	
	public VirtualProcessorSubcomponent_AllModesAssignment_6_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getAllModesAssignment_6_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualProcessorSubcomponentAccess().getAllModesAllKeyword_6_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class VirtualProcessorSubcomponent_RightParenthesisKeyword_6_4 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_RightParenthesisKeyword_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getRightParenthesisKeyword_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Alternatives_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class VirtualProcessorSubcomponent_SemicolonKeyword_7 extends KeywordToken  {
	
	public VirtualProcessorSubcomponent_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualProcessorSubcomponentAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualProcessorSubcomponent_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualProcessorSubcomponent_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualProcessorSubcomponent_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualProcessorSubcomponent_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualProcessorSubcomponent_ProcessorKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule VirtualProcessorSubcomponent ****************/


/************ begin Rule DeviceSubcomponent ****************
 *
 * DeviceSubcomponent returns aadl2::DeviceSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::DeviceSubcomponent] ":" "refined" "to") "device"
 * 	(deviceClassifier=[aadl2::DeviceClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::DeviceSubcomponent] ":" "refined" "to") "device"
// (deviceClassifier=[aadl2::DeviceClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class DeviceSubcomponent_Group extends GroupToken {
	
	public DeviceSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDeviceSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::DeviceSubcomponent] ":" "refined" "to"
protected class DeviceSubcomponent_Alternatives_0 extends AlternativesToken {

	public DeviceSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class DeviceSubcomponent_Group_0_0 extends GroupToken {
	
	public DeviceSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class DeviceSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public DeviceSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDeviceSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDeviceSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class DeviceSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public DeviceSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::DeviceSubcomponent] ":" "refined" "to"
protected class DeviceSubcomponent_Group_0_1 extends GroupToken {
	
	public DeviceSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::DeviceSubcomponent]
protected class DeviceSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public DeviceSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceSubcomponentAccess().getRefinedDeviceSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDeviceSubcomponentAccess().getRefinedDeviceSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class DeviceSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public DeviceSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class DeviceSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public DeviceSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class DeviceSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public DeviceSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "device"
protected class DeviceSubcomponent_DeviceKeyword_1 extends KeywordToken  {
	
	public DeviceSubcomponent_DeviceKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getDeviceKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (deviceClassifier=[aadl2::DeviceClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class DeviceSubcomponent_Group_2 extends GroupToken {
	
	public DeviceSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_DeviceClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// deviceClassifier=[aadl2::DeviceClassifier|QCREF]
protected class DeviceSubcomponent_DeviceClassifierAssignment_2_0 extends AssignmentToken  {
	
	public DeviceSubcomponent_DeviceClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getDeviceClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_DeviceKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("deviceClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("deviceClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDeviceSubcomponentAccess().getDeviceClassifierDeviceClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDeviceSubcomponentAccess().getDeviceClassifierDeviceClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class DeviceSubcomponent_Group_2_1 extends GroupToken {
	
	public DeviceSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DeviceSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public DeviceSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_DeviceClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class DeviceSubcomponent_Group_2_1_2 extends GroupToken {
	
	public DeviceSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DeviceSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public DeviceSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DeviceSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public DeviceSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class DeviceSubcomponent_Group_3 extends GroupToken {
	
	public DeviceSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class DeviceSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public DeviceSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceSubcomponent_DeviceKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class DeviceSubcomponent_Group_3_1 extends GroupToken {
	
	public DeviceSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DeviceSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public DeviceSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class DeviceSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public DeviceSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class DeviceSubcomponent_Group_3_1_2 extends GroupToken {
	
	public DeviceSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DeviceSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public DeviceSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class DeviceSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public DeviceSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DeviceSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public DeviceSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class DeviceSubcomponent_Group_4 extends GroupToken {
	
	public DeviceSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class DeviceSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public DeviceSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceSubcomponent_DeviceKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class DeviceSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public DeviceSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DeviceSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public DeviceSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class DeviceSubcomponent_Group_5 extends GroupToken {
	
	public DeviceSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class DeviceSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public DeviceSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceSubcomponent_DeviceKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class DeviceSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public DeviceSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DeviceSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public DeviceSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class DeviceSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public DeviceSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class DeviceSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public DeviceSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDeviceSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DeviceSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DeviceSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class DeviceSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public DeviceSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDeviceSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class DeviceSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public DeviceSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class DeviceSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public DeviceSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDeviceSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DeviceSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DeviceSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DeviceSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DeviceSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DeviceSubcomponent_DeviceKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule DeviceSubcomponent ****************/


/************ begin Rule MemorySubcomponent ****************
 *
 * MemorySubcomponent returns aadl2::MemorySubcomponent:
 * 	(name=ID ":" | refined=[aadl2::MemorySubcomponent] ":" "refined" "to") "memory"
 * 	(memoryClassifier=[aadl2::MemoryClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::MemorySubcomponent] ":" "refined" "to") "memory"
// (memoryClassifier=[aadl2::MemoryClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class MemorySubcomponent_Group extends GroupToken {
	
	public MemorySubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMemorySubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::MemorySubcomponent] ":" "refined" "to"
protected class MemorySubcomponent_Alternatives_0 extends AlternativesToken {

	public MemorySubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class MemorySubcomponent_Group_0_0 extends GroupToken {
	
	public MemorySubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class MemorySubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public MemorySubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMemorySubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMemorySubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class MemorySubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public MemorySubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::MemorySubcomponent] ":" "refined" "to"
protected class MemorySubcomponent_Group_0_1 extends GroupToken {
	
	public MemorySubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::MemorySubcomponent]
protected class MemorySubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public MemorySubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemorySubcomponentAccess().getRefinedMemorySubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMemorySubcomponentAccess().getRefinedMemorySubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class MemorySubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public MemorySubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class MemorySubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public MemorySubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class MemorySubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public MemorySubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "memory"
protected class MemorySubcomponent_MemoryKeyword_1 extends KeywordToken  {
	
	public MemorySubcomponent_MemoryKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getMemoryKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (memoryClassifier=[aadl2::MemoryClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class MemorySubcomponent_Group_2 extends GroupToken {
	
	public MemorySubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_MemoryClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// memoryClassifier=[aadl2::MemoryClassifier|QCREF]
protected class MemorySubcomponent_MemoryClassifierAssignment_2_0 extends AssignmentToken  {
	
	public MemorySubcomponent_MemoryClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getMemoryClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_MemoryKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("memoryClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("memoryClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMemorySubcomponentAccess().getMemoryClassifierMemoryClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMemorySubcomponentAccess().getMemoryClassifierMemoryClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class MemorySubcomponent_Group_2_1 extends GroupToken {
	
	public MemorySubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class MemorySubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public MemorySubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_MemoryClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class MemorySubcomponent_Group_2_1_2 extends GroupToken {
	
	public MemorySubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MemorySubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public MemorySubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class MemorySubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public MemorySubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class MemorySubcomponent_Group_3 extends GroupToken {
	
	public MemorySubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class MemorySubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public MemorySubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemorySubcomponent_MemoryKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class MemorySubcomponent_Group_3_1 extends GroupToken {
	
	public MemorySubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class MemorySubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public MemorySubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class MemorySubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public MemorySubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class MemorySubcomponent_Group_3_1_2 extends GroupToken {
	
	public MemorySubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MemorySubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public MemorySubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class MemorySubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public MemorySubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class MemorySubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public MemorySubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class MemorySubcomponent_Group_4 extends GroupToken {
	
	public MemorySubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class MemorySubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public MemorySubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemorySubcomponent_MemoryKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class MemorySubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public MemorySubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemorySubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MemorySubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public MemorySubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class MemorySubcomponent_Group_5 extends GroupToken {
	
	public MemorySubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class MemorySubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public MemorySubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemorySubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemorySubcomponent_MemoryKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class MemorySubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public MemorySubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class MemorySubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public MemorySubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class MemorySubcomponent_Alternatives_5_3 extends AlternativesToken {

	public MemorySubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class MemorySubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public MemorySubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMemorySubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MemorySubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MemorySubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class MemorySubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public MemorySubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMemorySubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class MemorySubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public MemorySubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class MemorySubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public MemorySubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMemorySubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MemorySubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MemorySubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MemorySubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MemorySubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MemorySubcomponent_MemoryKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule MemorySubcomponent ****************/


/************ begin Rule BusSubcomponent ****************
 *
 * BusSubcomponent returns aadl2::BusSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::BusSubcomponent] ":" "refined" "to") "bus" (busClassifier=[aadl2::BusClassifier|QCREF]
 * 	("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
 * 	(arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::BusSubcomponent] ":" "refined" "to") "bus" (busClassifier=[aadl2::BusClassifier|QCREF]
// ("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class BusSubcomponent_Group extends GroupToken {
	
	public BusSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBusSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::BusSubcomponent] ":" "refined" "to"
protected class BusSubcomponent_Alternatives_0 extends AlternativesToken {

	public BusSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class BusSubcomponent_Group_0_0 extends GroupToken {
	
	public BusSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class BusSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public BusSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBusSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBusSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class BusSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public BusSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::BusSubcomponent] ":" "refined" "to"
protected class BusSubcomponent_Group_0_1 extends GroupToken {
	
	public BusSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::BusSubcomponent]
protected class BusSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public BusSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentAccess().getRefinedBusSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBusSubcomponentAccess().getRefinedBusSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class BusSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public BusSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class BusSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public BusSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class BusSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public BusSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "bus"
protected class BusSubcomponent_BusKeyword_1 extends KeywordToken  {
	
	public BusSubcomponent_BusKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getBusKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (busClassifier=[aadl2::BusClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class BusSubcomponent_Group_2 extends GroupToken {
	
	public BusSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_BusClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// busClassifier=[aadl2::BusClassifier|QCREF]
protected class BusSubcomponent_BusClassifierAssignment_2_0 extends AssignmentToken  {
	
	public BusSubcomponent_BusClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getBusClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_BusKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("busClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("busClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusSubcomponentAccess().getBusClassifierBusClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBusSubcomponentAccess().getBusClassifierBusClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class BusSubcomponent_Group_2_1 extends GroupToken {
	
	public BusSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class BusSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public BusSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_BusClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class BusSubcomponent_Group_2_1_2 extends GroupToken {
	
	public BusSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class BusSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public BusSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class BusSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public BusSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class BusSubcomponent_Group_3 extends GroupToken {
	
	public BusSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class BusSubcomponent_ArraySpecificationAssignment_3_0 extends AssignmentToken  {
	
	public BusSubcomponent_ArraySpecificationAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getArraySpecificationAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusSubcomponent_BusKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class BusSubcomponent_Group_3_1 extends GroupToken {
	
	public BusSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class BusSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public BusSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ArraySpecificationAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class BusSubcomponent_ImplementationReferenceAssignment_3_1_1 extends AssignmentToken  {
	
	public BusSubcomponent_ImplementationReferenceAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getImplementationReferenceAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class BusSubcomponent_Group_3_1_2 extends GroupToken {
	
	public BusSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ImplementationReferenceAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class BusSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public BusSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class BusSubcomponent_ImplementationReferenceAssignment_3_1_2_1 extends AssignmentToken  {
	
	public BusSubcomponent_ImplementationReferenceAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getImplementationReferenceAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class BusSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public BusSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_ImplementationReferenceAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class BusSubcomponent_Group_4 extends GroupToken {
	
	public BusSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class BusSubcomponent_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public BusSubcomponent_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusSubcomponent_BusKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class BusSubcomponent_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public BusSubcomponent_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusSubcomponent_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class BusSubcomponent_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public BusSubcomponent_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class BusSubcomponent_Group_5 extends GroupToken {
	
	public BusSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_RightParenthesisKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class BusSubcomponent_InKeyword_5_0 extends KeywordToken  {
	
	public BusSubcomponent_InKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getInKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusSubcomponent_BusKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class BusSubcomponent_ModesKeyword_5_1 extends KeywordToken  {
	
	public BusSubcomponent_ModesKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getModesKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_InKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class BusSubcomponent_LeftParenthesisKeyword_5_2 extends KeywordToken  {
	
	public BusSubcomponent_LeftParenthesisKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getLeftParenthesisKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ModesKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class BusSubcomponent_Alternatives_5_3 extends AlternativesToken {

	public BusSubcomponent_Alternatives_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getAlternatives_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_AllModesAssignment_5_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class BusSubcomponent_ModeBindingAssignment_5_3_0 extends AssignmentToken  {
	
	public BusSubcomponent_ModeBindingAssignment_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getModeBindingAssignment_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusSubcomponentAccess().getModeBindingModeRefParserRuleCall_5_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusSubcomponent_ModeBindingAssignment_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class BusSubcomponent_AllModesAssignment_5_3_1 extends AssignmentToken  {
	
	public BusSubcomponent_AllModesAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getAllModesAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_LeftParenthesisKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBusSubcomponentAccess().getAllModesAllKeyword_5_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class BusSubcomponent_RightParenthesisKeyword_5_4 extends KeywordToken  {
	
	public BusSubcomponent_RightParenthesisKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getRightParenthesisKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Alternatives_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class BusSubcomponent_SemicolonKeyword_6 extends KeywordToken  {
	
	public BusSubcomponent_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusSubcomponentAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusSubcomponent_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new BusSubcomponent_BusKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule BusSubcomponent ****************/


/************ begin Rule VirtualBusSubcomponent ****************
 *
 * VirtualBusSubcomponent returns aadl2::VirtualBusSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::VirtualBusSubcomponent] ":" "refined" "to") "virtual" "bus"
 * 	(virtualBusClassifier=[aadl2::VirtualBusClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
 * 	implementationReference+=ComponentImplementationReference (","
 * 	implementationReference+=ComponentImplementationReference)* ")")?)? ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::VirtualBusSubcomponent] ":" "refined" "to") "virtual" "bus"
// (virtualBusClassifier=[aadl2::VirtualBusClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? (arraySpecification=ArraySpecification ("("
// implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+
// "}")? ("in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class VirtualBusSubcomponent_Group extends GroupToken {
	
	public VirtualBusSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVirtualBusSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::VirtualBusSubcomponent] ":" "refined" "to"
protected class VirtualBusSubcomponent_Alternatives_0 extends AlternativesToken {

	public VirtualBusSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class VirtualBusSubcomponent_Group_0_0 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class VirtualBusSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVirtualBusSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVirtualBusSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class VirtualBusSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public VirtualBusSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::VirtualBusSubcomponent] ":" "refined" "to"
protected class VirtualBusSubcomponent_Group_0_1 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::VirtualBusSubcomponent]
protected class VirtualBusSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentAccess().getRefinedVirtualBusSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getRefinedVirtualBusSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class VirtualBusSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public VirtualBusSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class VirtualBusSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public VirtualBusSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class VirtualBusSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public VirtualBusSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "virtual"
protected class VirtualBusSubcomponent_VirtualKeyword_1 extends KeywordToken  {
	
	public VirtualBusSubcomponent_VirtualKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getVirtualKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "bus"
protected class VirtualBusSubcomponent_BusKeyword_2 extends KeywordToken  {
	
	public VirtualBusSubcomponent_BusKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getBusKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_VirtualKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (virtualBusClassifier=[aadl2::VirtualBusClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class VirtualBusSubcomponent_Group_3 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_VirtualBusClassifierAssignment_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// virtualBusClassifier=[aadl2::VirtualBusClassifier|QCREF]
protected class VirtualBusSubcomponent_VirtualBusClassifierAssignment_3_0 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_VirtualBusClassifierAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getVirtualBusClassifierAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_BusKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("virtualBusClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("virtualBusClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVirtualBusSubcomponentAccess().getVirtualBusClassifierVirtualBusClassifierCrossReference_3_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getVirtualBusClassifierVirtualBusClassifierCrossReference_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class VirtualBusSubcomponent_Group_3_1 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_RightParenthesisKeyword_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualBusSubcomponent_LeftParenthesisKeyword_3_1_0 extends KeywordToken  {
	
	public VirtualBusSubcomponent_LeftParenthesisKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getLeftParenthesisKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_VirtualBusClassifierAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_1 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_LeftParenthesisKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class VirtualBusSubcomponent_Group_3_1_2 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualBusSubcomponent_CommaKeyword_3_1_2_0 extends KeywordToken  {
	
	public VirtualBusSubcomponent_CommaKeyword_3_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getCommaKeyword_3_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getOwnedPrototypeBindingAssignment_3_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_CommaKeyword_3_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualBusSubcomponent_RightParenthesisKeyword_3_1_3 extends KeywordToken  {
	
	public VirtualBusSubcomponent_RightParenthesisKeyword_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getRightParenthesisKeyword_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_3_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_OwnedPrototypeBindingAssignment_3_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (arraySpecification=ArraySpecification ("(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?)?
protected class VirtualBusSubcomponent_Group_4 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// arraySpecification=ArraySpecification
protected class VirtualBusSubcomponent_ArraySpecificationAssignment_4_0 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_ArraySpecificationAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getArraySpecificationAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getArraySpecificationArraySpecificationParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusSubcomponent_BusKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "(" implementationReference+=ComponentImplementationReference (","
// implementationReference+=ComponentImplementationReference)* ")")?
protected class VirtualBusSubcomponent_Group_4_1 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_RightParenthesisKeyword_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class VirtualBusSubcomponent_LeftParenthesisKeyword_4_1_0 extends KeywordToken  {
	
	public VirtualBusSubcomponent_LeftParenthesisKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getLeftParenthesisKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ArraySpecificationAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_1 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getImplementationReferenceAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_LeftParenthesisKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," implementationReference+=ComponentImplementationReference)*
protected class VirtualBusSubcomponent_Group_4_1_2 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class VirtualBusSubcomponent_CommaKeyword_4_1_2_0 extends KeywordToken  {
	
	public VirtualBusSubcomponent_CommaKeyword_4_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getCommaKeyword_4_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// implementationReference+=ComponentImplementationReference
protected class VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_2_1 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getImplementationReferenceAssignment_4_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementationReference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementationReference");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_CommaKeyword_4_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class VirtualBusSubcomponent_RightParenthesisKeyword_4_1_3 extends KeywordToken  {
	
	public VirtualBusSubcomponent_RightParenthesisKeyword_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getRightParenthesisKeyword_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_4_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_ImplementationReferenceAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class VirtualBusSubcomponent_Group_5 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_RightCurlyBracketKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class VirtualBusSubcomponent_LeftCurlyBracketKeyword_5_0 extends KeywordToken  {
	
	public VirtualBusSubcomponent_LeftCurlyBracketKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getLeftCurlyBracketKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusSubcomponent_BusKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class VirtualBusSubcomponent_OwnedPropertyAssociationAssignment_5_1 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_OwnedPropertyAssociationAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getOwnedPropertyAssociationAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusSubcomponent_LeftCurlyBracketKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class VirtualBusSubcomponent_RightCurlyBracketKeyword_5_2 extends KeywordToken  {
	
	public VirtualBusSubcomponent_RightCurlyBracketKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getRightCurlyBracketKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class VirtualBusSubcomponent_Group_6 extends GroupToken {
	
	public VirtualBusSubcomponent_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_RightParenthesisKeyword_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class VirtualBusSubcomponent_InKeyword_6_0 extends KeywordToken  {
	
	public VirtualBusSubcomponent_InKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getInKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusSubcomponent_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualBusSubcomponent_BusKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class VirtualBusSubcomponent_ModesKeyword_6_1 extends KeywordToken  {
	
	public VirtualBusSubcomponent_ModesKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getModesKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_InKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class VirtualBusSubcomponent_LeftParenthesisKeyword_6_2 extends KeywordToken  {
	
	public VirtualBusSubcomponent_LeftParenthesisKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getLeftParenthesisKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ModesKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class VirtualBusSubcomponent_Alternatives_6_3 extends AlternativesToken {

	public VirtualBusSubcomponent_Alternatives_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getAlternatives_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_AllModesAssignment_6_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class VirtualBusSubcomponent_ModeBindingAssignment_6_3_0 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_ModeBindingAssignment_6_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getModeBindingAssignment_6_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVirtualBusSubcomponentAccess().getModeBindingModeRefParserRuleCall_6_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new VirtualBusSubcomponent_ModeBindingAssignment_6_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new VirtualBusSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class VirtualBusSubcomponent_AllModesAssignment_6_3_1 extends AssignmentToken  {
	
	public VirtualBusSubcomponent_AllModesAssignment_6_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getAllModesAssignment_6_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_LeftParenthesisKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVirtualBusSubcomponentAccess().getAllModesAllKeyword_6_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class VirtualBusSubcomponent_RightParenthesisKeyword_6_4 extends KeywordToken  {
	
	public VirtualBusSubcomponent_RightParenthesisKeyword_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getRightParenthesisKeyword_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Alternatives_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class VirtualBusSubcomponent_SemicolonKeyword_7 extends KeywordToken  {
	
	public VirtualBusSubcomponent_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVirtualBusSubcomponentAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VirtualBusSubcomponent_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VirtualBusSubcomponent_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VirtualBusSubcomponent_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VirtualBusSubcomponent_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VirtualBusSubcomponent_BusKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule VirtualBusSubcomponent ****************/


/************ begin Rule DataSubcomponent ****************
 *
 * DataSubcomponent returns aadl2::DataSubcomponent:
 * 	(name=ID ":" | refined=[aadl2::DataSubcomponent] ":" "refined" "to") "data"
 * 	(dataClassifier=[aadl2::DataClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
 * 	ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in"
 * 	"modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";";
 *
 **/

// (name=ID ":" | refined=[aadl2::DataSubcomponent] ":" "refined" "to") "data"
// (dataClassifier=[aadl2::DataClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)? ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in"
// "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")? ";"
protected class DataSubcomponent_Group extends GroupToken {
	
	public DataSubcomponent_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDataSubcomponentRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::DataSubcomponent] ":" "refined" "to"
protected class DataSubcomponent_Alternatives_0 extends AlternativesToken {

	public DataSubcomponent_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class DataSubcomponent_Group_0_0 extends GroupToken {
	
	public DataSubcomponent_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class DataSubcomponent_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public DataSubcomponent_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDataSubcomponentAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class DataSubcomponent_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public DataSubcomponent_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::DataSubcomponent] ":" "refined" "to"
protected class DataSubcomponent_Group_0_1 extends GroupToken {
	
	public DataSubcomponent_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::DataSubcomponent]
protected class DataSubcomponent_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public DataSubcomponent_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentAccess().getRefinedDataSubcomponentCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDataSubcomponentAccess().getRefinedDataSubcomponentCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class DataSubcomponent_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public DataSubcomponent_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class DataSubcomponent_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public DataSubcomponent_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class DataSubcomponent_ToKeyword_0_1_3 extends KeywordToken  {
	
	public DataSubcomponent_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "data"
protected class DataSubcomponent_DataKeyword_1 extends KeywordToken  {
	
	public DataSubcomponent_DataKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getDataKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (dataClassifier=[aadl2::DataClassifier|QCREF] ("(" ownedPrototypeBinding+=PrototypeBinding (","
// ownedPrototypeBinding+=PrototypeBinding)* ")")?)?
protected class DataSubcomponent_Group_2 extends GroupToken {
	
	public DataSubcomponent_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_DataClassifierAssignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// dataClassifier=[aadl2::DataClassifier|QCREF]
protected class DataSubcomponent_DataClassifierAssignment_2_0 extends AssignmentToken  {
	
	public DataSubcomponent_DataClassifierAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getDataClassifierAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_DataKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataClassifier",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataSubcomponentAccess().getDataClassifierDataClassifierCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDataSubcomponentAccess().getDataClassifierDataClassifierCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class DataSubcomponent_Group_2_1 extends GroupToken {
	
	public DataSubcomponent_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_RightParenthesisKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class DataSubcomponent_LeftParenthesisKeyword_2_1_0 extends KeywordToken  {
	
	public DataSubcomponent_LeftParenthesisKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getLeftParenthesisKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_DataClassifierAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_1 extends AssignmentToken  {
	
	public DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataSubcomponent_LeftParenthesisKeyword_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class DataSubcomponent_Group_2_1_2 extends GroupToken {
	
	public DataSubcomponent_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class DataSubcomponent_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public DataSubcomponent_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1 extends AssignmentToken  {
	
	public DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getOwnedPrototypeBindingAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataSubcomponentAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_2_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataSubcomponent_CommaKeyword_2_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class DataSubcomponent_RightParenthesisKeyword_2_1_3 extends KeywordToken  {
	
	public DataSubcomponent_RightParenthesisKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getRightParenthesisKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_OwnedPrototypeBindingAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class DataSubcomponent_Group_3 extends GroupToken {
	
	public DataSubcomponent_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_RightCurlyBracketKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class DataSubcomponent_LeftCurlyBracketKeyword_3_0 extends KeywordToken  {
	
	public DataSubcomponent_LeftCurlyBracketKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getLeftCurlyBracketKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_DataKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class DataSubcomponent_OwnedPropertyAssociationAssignment_3_1 extends AssignmentToken  {
	
	public DataSubcomponent_OwnedPropertyAssociationAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getOwnedPropertyAssociationAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataSubcomponentAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataSubcomponent_OwnedPropertyAssociationAssignment_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataSubcomponent_LeftCurlyBracketKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DataSubcomponent_RightCurlyBracketKeyword_3_2 extends KeywordToken  {
	
	public DataSubcomponent_RightCurlyBracketKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getRightCurlyBracketKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_OwnedPropertyAssociationAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" (modeBinding+=ModeRef+ | allModes?="all") ")")?
protected class DataSubcomponent_Group_4 extends GroupToken {
	
	public DataSubcomponent_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_RightParenthesisKeyword_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class DataSubcomponent_InKeyword_4_0 extends KeywordToken  {
	
	public DataSubcomponent_InKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getInKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataSubcomponent_DataKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class DataSubcomponent_ModesKeyword_4_1 extends KeywordToken  {
	
	public DataSubcomponent_ModesKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getModesKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_InKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DataSubcomponent_LeftParenthesisKeyword_4_2 extends KeywordToken  {
	
	public DataSubcomponent_LeftParenthesisKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getLeftParenthesisKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_ModesKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+ | allModes?="all"
protected class DataSubcomponent_Alternatives_4_3 extends AlternativesToken {

	public DataSubcomponent_Alternatives_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getAlternatives_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_ModeBindingAssignment_4_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_AllModesAssignment_4_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// modeBinding+=ModeRef+
protected class DataSubcomponent_ModeBindingAssignment_4_3_0 extends AssignmentToken  {
	
	public DataSubcomponent_ModeBindingAssignment_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getModeBindingAssignment_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("modeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("modeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataSubcomponentAccess().getModeBindingModeRefParserRuleCall_4_3_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataSubcomponent_ModeBindingAssignment_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataSubcomponent_LeftParenthesisKeyword_4_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allModes?="all"
protected class DataSubcomponent_AllModesAssignment_4_3_1 extends AssignmentToken  {
	
	public DataSubcomponent_AllModesAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getAllModesAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_LeftParenthesisKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allModes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allModes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDataSubcomponentAccess().getAllModesAllKeyword_4_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class DataSubcomponent_RightParenthesisKeyword_4_4 extends KeywordToken  {
	
	public DataSubcomponent_RightParenthesisKeyword_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getRightParenthesisKeyword_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Alternatives_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class DataSubcomponent_SemicolonKeyword_5 extends KeywordToken  {
	
	public DataSubcomponent_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataSubcomponentAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataSubcomponent_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataSubcomponent_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataSubcomponent_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataSubcomponent_DataKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule DataSubcomponent ****************/


/************ begin Rule ArraySpecification ****************
 *
 * ArraySpecification returns aadl2::ArraySpecification: // dimension is the same as the size of a list recording '[' or size if we put a dummy object
 * 	{aadl2::ArraySpecification} "[" (size+=Numeral | size+=PropertyReference)? "]" ("[" (size+=Numeral |
 * 	size+=PropertyReference)? "]")*;
 *
 **/

// // dimension is the same as the size of a list recording '[' or size if we put a dummy object
// {aadl2::ArraySpecification} "[" (size+=Numeral | size+=PropertyReference)? "]" ("[" (size+=Numeral |
// size+=PropertyReference)? "]")*
protected class ArraySpecification_Group extends GroupToken {
	
	public ArraySpecification_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArraySpecification_RightSquareBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArraySpecificationAccess().getArraySpecificationAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// // dimension is the same as the size of a list recording '[' or size if we put a dummy object
// {aadl2::ArraySpecification}
protected class ArraySpecification_ArraySpecificationAction_0 extends ActionToken  {

	public ArraySpecification_ArraySpecificationAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getArraySpecificationAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "["
protected class ArraySpecification_LeftSquareBracketKeyword_1 extends KeywordToken  {
	
	public ArraySpecification_LeftSquareBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getLeftSquareBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_ArraySpecificationAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (size+=Numeral | size+=PropertyReference)?
protected class ArraySpecification_Alternatives_2 extends AlternativesToken {

	public ArraySpecification_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_SizeAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArraySpecification_SizeAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// size+=Numeral
protected class ArraySpecification_SizeAssignment_2_0 extends AssignmentToken  {
	
	public ArraySpecification_SizeAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getSizeAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Numeral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("size",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("size");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumeralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArraySpecificationAccess().getSizeNumeralParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArraySpecification_LeftSquareBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// size+=PropertyReference
protected class ArraySpecification_SizeAssignment_2_1 extends AssignmentToken  {
	
	public ArraySpecification_SizeAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getSizeAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyReference_PropertyAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("size",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("size");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArraySpecificationAccess().getSizePropertyReferenceParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArraySpecification_LeftSquareBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class ArraySpecification_RightSquareBracketKeyword_3 extends KeywordToken  {
	
	public ArraySpecification_RightSquareBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getRightSquareBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArraySpecification_LeftSquareBracketKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("[" (size+=Numeral | size+=PropertyReference)? "]")*
protected class ArraySpecification_Group_4 extends GroupToken {
	
	public ArraySpecification_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_RightSquareBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class ArraySpecification_LeftSquareBracketKeyword_4_0 extends KeywordToken  {
	
	public ArraySpecification_LeftSquareBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getLeftSquareBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArraySpecification_RightSquareBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (size+=Numeral | size+=PropertyReference)?
protected class ArraySpecification_Alternatives_4_1 extends AlternativesToken {

	public ArraySpecification_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_SizeAssignment_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArraySpecification_SizeAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// size+=Numeral
protected class ArraySpecification_SizeAssignment_4_1_0 extends AssignmentToken  {
	
	public ArraySpecification_SizeAssignment_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getSizeAssignment_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Numeral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("size",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("size");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumeralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArraySpecificationAccess().getSizeNumeralParserRuleCall_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArraySpecification_LeftSquareBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// size+=PropertyReference
protected class ArraySpecification_SizeAssignment_4_1_1 extends AssignmentToken  {
	
	public ArraySpecification_SizeAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getSizeAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyReference_PropertyAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("size",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("size");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getArraySpecificationAccess().getSizePropertyReferenceParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ArraySpecification_LeftSquareBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class ArraySpecification_RightSquareBracketKeyword_4_2 extends KeywordToken  {
	
	public ArraySpecification_RightSquareBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArraySpecificationAccess().getRightSquareBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArraySpecification_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule ArraySpecification ****************/


/************ begin Rule SingleArraySpecification ****************
 *
 * SingleArraySpecification returns aadl2::ArraySpecification: // dimension is the same as the size of a list recording '[' or size if we put a dummy object
 * 	{aadl2::ArraySpecification} "[" (size+=Numeral | size+=PropertyReference)? "]";
 *
 **/

// // dimension is the same as the size of a list recording '[' or size if we put a dummy object
// {aadl2::ArraySpecification} "[" (size+=Numeral | size+=PropertyReference)? "]"
protected class SingleArraySpecification_Group extends GroupToken {
	
	public SingleArraySpecification_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_RightSquareBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleArraySpecificationAccess().getArraySpecificationAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// // dimension is the same as the size of a list recording '[' or size if we put a dummy object
// {aadl2::ArraySpecification}
protected class SingleArraySpecification_ArraySpecificationAction_0 extends ActionToken  {

	public SingleArraySpecification_ArraySpecificationAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getArraySpecificationAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "["
protected class SingleArraySpecification_LeftSquareBracketKeyword_1 extends KeywordToken  {
	
	public SingleArraySpecification_LeftSquareBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getLeftSquareBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_ArraySpecificationAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (size+=Numeral | size+=PropertyReference)?
protected class SingleArraySpecification_Alternatives_2 extends AlternativesToken {

	public SingleArraySpecification_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_SizeAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SingleArraySpecification_SizeAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// size+=Numeral
protected class SingleArraySpecification_SizeAssignment_2_0 extends AssignmentToken  {
	
	public SingleArraySpecification_SizeAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getSizeAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Numeral_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("size",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("size");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNumeralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSingleArraySpecificationAccess().getSizeNumeralParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SingleArraySpecification_LeftSquareBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// size+=PropertyReference
protected class SingleArraySpecification_SizeAssignment_2_1 extends AssignmentToken  {
	
	public SingleArraySpecification_SizeAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getSizeAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyReference_PropertyAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("size",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("size");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSingleArraySpecificationAccess().getSizePropertyReferenceParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SingleArraySpecification_LeftSquareBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class SingleArraySpecification_RightSquareBracketKeyword_3 extends KeywordToken  {
	
	public SingleArraySpecification_RightSquareBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleArraySpecificationAccess().getRightSquareBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SingleArraySpecification_LeftSquareBracketKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SingleArraySpecification ****************/


/************ begin Rule Numeral ****************
 *
 * Numeral returns aadl2::Numeral:
 * 	value=gINT;
 *
 **/

// value=gINT
protected class Numeral_ValueAssignment extends AssignmentToken  {
	
	public Numeral_ValueAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNumeralAccess().getValueAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNumeralRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNumeralAccess().getValueGINTParserRuleCall_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getNumeralAccess().getValueGINTParserRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Numeral ****************/


/************ begin Rule ComponentImplementationReference ****************
 *
 * ComponentImplementationReference returns aadl2::ComponentImplementationReference:
 * 	{aadl2::ComponentImplementationReference} implementation=[aadl2::ComponentImplementation|QCREF];
 *
 **/

// {aadl2::ComponentImplementationReference} implementation=[aadl2::ComponentImplementation|QCREF]
protected class ComponentImplementationReference_Group extends GroupToken {
	
	public ComponentImplementationReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentImplementationReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_ImplementationAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentImplementationReferenceAccess().getComponentImplementationReferenceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::ComponentImplementationReference}
protected class ComponentImplementationReference_ComponentImplementationReferenceAction_0 extends ActionToken  {

	public ComponentImplementationReference_ComponentImplementationReferenceAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getComponentImplementationReferenceAccess().getComponentImplementationReferenceAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// implementation=[aadl2::ComponentImplementation|QCREF]
protected class ComponentImplementationReference_ImplementationAssignment_1 extends AssignmentToken  {
	
	public ComponentImplementationReference_ImplementationAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentImplementationReferenceAccess().getImplementationAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ComponentImplementationReference_ComponentImplementationReferenceAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("implementation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("implementation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentImplementationReferenceAccess().getImplementationComponentImplementationCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getComponentImplementationReferenceAccess().getImplementationComponentImplementationCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule ComponentImplementationReference ****************/


/************ begin Rule PropertyReference ****************
 *
 * // reference also could be to a property constant, which is recorded as reference in a
 * // ConstantValue object 
 * PropertyReference returns aadl2::PropertyReference:
 * 	property=[aadl2::Property|QPREF];
 *
 **/

// property=[aadl2::Property|QPREF]
protected class PropertyReference_PropertyAssignment extends AssignmentToken  {
	
	public PropertyReference_PropertyAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyReferenceAccess().getPropertyAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPropertyReferenceRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("property",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("property");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPropertyReferenceAccess().getPropertyPropertyCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule PropertyReference ****************/


/************ begin Rule DataPort ****************
 *
 * // ******** Features
 * // needs to have classifier or prototype reference
 * DataPort returns aadl2::DataPort:
 * 	{aadl2::DataPort} (name=ID ":" | refined=[aadl2::DataPort] ":" "refined" "to") direction=PortDirection "data" "port"
 * 	dataClassifier=[aadl2::DataClassifier|QCREF]? arraySpecification=SingleArraySpecification? ("{"
 * 	ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// {aadl2::DataPort} (name=ID ":" | refined=[aadl2::DataPort] ":" "refined" "to") direction=PortDirection "data" "port"
// dataClassifier=[aadl2::DataClassifier|QCREF]? arraySpecification=SingleArraySpecification? ("{"
// ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class DataPort_Group extends GroupToken {
	
	public DataPort_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataPortAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDataPortAccess().getDataPortAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::DataPort}
protected class DataPort_DataPortAction_0 extends ActionToken  {

	public DataPort_DataPortAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDataPortAccess().getDataPortAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID ":" | refined=[aadl2::DataPort] ":" "refined" "to"
protected class DataPort_Alternatives_1 extends AlternativesToken {

	public DataPort_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataPortAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataPort_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class DataPort_Group_1_0 extends GroupToken {
	
	public DataPort_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataPortAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_ColonKeyword_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class DataPort_NameAssignment_1_0_0 extends AssignmentToken  {
	
	public DataPort_NameAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataPortAccess().getNameAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_DataPortAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataPortAccess().getNameIDTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDataPortAccess().getNameIDTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class DataPort_ColonKeyword_1_0_1 extends KeywordToken  {
	
	public DataPort_ColonKeyword_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getColonKeyword_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_NameAssignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::DataPort] ":" "refined" "to"
protected class DataPort_Group_1_1 extends GroupToken {
	
	public DataPort_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataPortAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_ToKeyword_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::DataPort]
protected class DataPort_RefinedAssignment_1_1_0 extends AssignmentToken  {
	
	public DataPort_RefinedAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataPortAccess().getRefinedAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_DataPortAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortAccess().getRefinedDataPortCrossReference_1_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDataPortAccess().getRefinedDataPortCrossReference_1_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class DataPort_ColonKeyword_1_1_1 extends KeywordToken  {
	
	public DataPort_ColonKeyword_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getColonKeyword_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_RefinedAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class DataPort_RefinedKeyword_1_1_2 extends KeywordToken  {
	
	public DataPort_RefinedKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getRefinedKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_ColonKeyword_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class DataPort_ToKeyword_1_1_3 extends KeywordToken  {
	
	public DataPort_ToKeyword_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getToKeyword_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_RefinedKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=PortDirection
protected class DataPort_DirectionAssignment_2 extends AssignmentToken  {
	
	public DataPort_DirectionAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataPortAccess().getDirectionAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataPortAccess().getDirectionPortDirectionParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDataPortAccess().getDirectionPortDirectionParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "data"
protected class DataPort_DataKeyword_3 extends KeywordToken  {
	
	public DataPort_DataKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getDataKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_DirectionAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "port"
protected class DataPort_PortKeyword_4 extends KeywordToken  {
	
	public DataPort_PortKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getPortKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_DataKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dataClassifier=[aadl2::DataClassifier|QCREF]?
protected class DataPort_DataClassifierAssignment_5 extends AssignmentToken  {
	
	public DataPort_DataClassifierAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataPortAccess().getDataClassifierAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_PortKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortAccess().getDataClassifierDataClassifierCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDataPortAccess().getDataClassifierDataClassifierCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class DataPort_ArraySpecificationAssignment_6 extends AssignmentToken  {
	
	public DataPort_ArraySpecificationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataPortAccess().getArraySpecificationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataPortAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataPort_DataClassifierAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataPort_PortKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class DataPort_Group_7 extends GroupToken {
	
	public DataPort_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataPortAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_RightCurlyBracketKeyword_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class DataPort_LeftCurlyBracketKeyword_7_0 extends KeywordToken  {
	
	public DataPort_LeftCurlyBracketKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getLeftCurlyBracketKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_ArraySpecificationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataPort_DataClassifierAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataPort_PortKeyword_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class DataPort_OwnedPropertyAssociationAssignment_7_1 extends AssignmentToken  {
	
	public DataPort_OwnedPropertyAssociationAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataPortAccess().getOwnedPropertyAssociationAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataPortAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataPort_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataPort_LeftCurlyBracketKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DataPort_RightCurlyBracketKeyword_7_2 extends KeywordToken  {
	
	public DataPort_RightCurlyBracketKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getRightCurlyBracketKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class DataPort_SemicolonKeyword_8 extends KeywordToken  {
	
	public DataPort_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataPortAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataPort_ArraySpecificationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataPort_DataClassifierAssignment_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataPort_PortKeyword_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule DataPort ****************/


/************ begin Rule EventDataPort ****************
 *
 * EventDataPort returns aadl2::EventDataPort:
 * 	{aadl2::EventDataPort} (name=ID ":" | refined=[aadl2::EventDataPort] ":" "refined" "to") direction=PortDirection
 * 	"event" "data" "port" dataClassifier=[aadl2::DataClassifier|QCREF]? arraySpecification=SingleArraySpecification? ("{"
 * 	ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// {aadl2::EventDataPort} (name=ID ":" | refined=[aadl2::EventDataPort] ":" "refined" "to") direction=PortDirection "event"
// "data" "port" dataClassifier=[aadl2::DataClassifier|QCREF]? arraySpecification=SingleArraySpecification? ("{"
// ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class EventDataPort_Group extends GroupToken {
	
	public EventDataPort_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEventDataPortAccess().getEventDataPortAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::EventDataPort}
protected class EventDataPort_EventDataPortAction_0 extends ActionToken  {

	public EventDataPort_EventDataPortAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getEventDataPortAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID ":" | refined=[aadl2::EventDataPort] ":" "refined" "to"
protected class EventDataPort_Alternatives_1 extends AlternativesToken {

	public EventDataPort_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EventDataPort_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class EventDataPort_Group_1_0 extends GroupToken {
	
	public EventDataPort_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_ColonKeyword_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class EventDataPort_NameAssignment_1_0_0 extends AssignmentToken  {
	
	public EventDataPort_NameAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getNameAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_EventDataPortAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEventDataPortAccess().getNameIDTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEventDataPortAccess().getNameIDTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EventDataPort_ColonKeyword_1_0_1 extends KeywordToken  {
	
	public EventDataPort_ColonKeyword_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getColonKeyword_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_NameAssignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::EventDataPort] ":" "refined" "to"
protected class EventDataPort_Group_1_1 extends GroupToken {
	
	public EventDataPort_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_ToKeyword_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::EventDataPort]
protected class EventDataPort_RefinedAssignment_1_1_0 extends AssignmentToken  {
	
	public EventDataPort_RefinedAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getRefinedAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_EventDataPortAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortAccess().getRefinedEventDataPortCrossReference_1_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEventDataPortAccess().getRefinedEventDataPortCrossReference_1_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class EventDataPort_ColonKeyword_1_1_1 extends KeywordToken  {
	
	public EventDataPort_ColonKeyword_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getColonKeyword_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_RefinedAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class EventDataPort_RefinedKeyword_1_1_2 extends KeywordToken  {
	
	public EventDataPort_RefinedKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getRefinedKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_ColonKeyword_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class EventDataPort_ToKeyword_1_1_3 extends KeywordToken  {
	
	public EventDataPort_ToKeyword_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getToKeyword_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_RefinedKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=PortDirection
protected class EventDataPort_DirectionAssignment_2 extends AssignmentToken  {
	
	public EventDataPort_DirectionAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getDirectionAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEventDataPortAccess().getDirectionPortDirectionParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getEventDataPortAccess().getDirectionPortDirectionParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "event"
protected class EventDataPort_EventKeyword_3 extends KeywordToken  {
	
	public EventDataPort_EventKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getEventKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_DirectionAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "data"
protected class EventDataPort_DataKeyword_4 extends KeywordToken  {
	
	public EventDataPort_DataKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getDataKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_EventKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "port"
protected class EventDataPort_PortKeyword_5 extends KeywordToken  {
	
	public EventDataPort_PortKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getPortKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_DataKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dataClassifier=[aadl2::DataClassifier|QCREF]?
protected class EventDataPort_DataClassifierAssignment_6 extends AssignmentToken  {
	
	public EventDataPort_DataClassifierAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getDataClassifierAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_PortKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortAccess().getDataClassifierDataClassifierCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEventDataPortAccess().getDataClassifierDataClassifierCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class EventDataPort_ArraySpecificationAssignment_7 extends AssignmentToken  {
	
	public EventDataPort_ArraySpecificationAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getArraySpecificationAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEventDataPortAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EventDataPort_DataClassifierAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EventDataPort_PortKeyword_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class EventDataPort_Group_8 extends GroupToken {
	
	public EventDataPort_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_RightCurlyBracketKeyword_8_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class EventDataPort_LeftCurlyBracketKeyword_8_0 extends KeywordToken  {
	
	public EventDataPort_LeftCurlyBracketKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getLeftCurlyBracketKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_ArraySpecificationAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EventDataPort_DataClassifierAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EventDataPort_PortKeyword_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class EventDataPort_OwnedPropertyAssociationAssignment_8_1 extends AssignmentToken  {
	
	public EventDataPort_OwnedPropertyAssociationAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getOwnedPropertyAssociationAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEventDataPortAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EventDataPort_OwnedPropertyAssociationAssignment_8_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EventDataPort_LeftCurlyBracketKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class EventDataPort_RightCurlyBracketKeyword_8_2 extends KeywordToken  {
	
	public EventDataPort_RightCurlyBracketKeyword_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getRightCurlyBracketKeyword_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_OwnedPropertyAssociationAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class EventDataPort_SemicolonKeyword_9 extends KeywordToken  {
	
	public EventDataPort_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventDataPortAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EventDataPort_ArraySpecificationAssignment_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EventDataPort_DataClassifierAssignment_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EventDataPort_PortKeyword_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule EventDataPort ****************/


/************ begin Rule EventPort ****************
 *
 * EventPort returns aadl2::EventPort:
 * 	{aadl2::EventPort} (name=ID ":" | refined=[aadl2::EventPort] ":" "refined" "to") direction=PortDirection "event"
 * 	"port" arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
 * 	";";
 *
 **/

// {aadl2::EventPort} (name=ID ":" | refined=[aadl2::EventPort] ":" "refined" "to") direction=PortDirection "event" "port"
// arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class EventPort_Group extends GroupToken {
	
	public EventPort_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventPortAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEventPortAccess().getEventPortAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::EventPort}
protected class EventPort_EventPortAction_0 extends ActionToken  {

	public EventPort_EventPortAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEventPortAccess().getEventPortAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID ":" | refined=[aadl2::EventPort] ":" "refined" "to"
protected class EventPort_Alternatives_1 extends AlternativesToken {

	public EventPort_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEventPortAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EventPort_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class EventPort_Group_1_0 extends GroupToken {
	
	public EventPort_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventPortAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_ColonKeyword_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class EventPort_NameAssignment_1_0_0 extends AssignmentToken  {
	
	public EventPort_NameAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventPortAccess().getNameAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_EventPortAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEventPortAccess().getNameIDTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEventPortAccess().getNameIDTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EventPort_ColonKeyword_1_0_1 extends KeywordToken  {
	
	public EventPort_ColonKeyword_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getColonKeyword_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_NameAssignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::EventPort] ":" "refined" "to"
protected class EventPort_Group_1_1 extends GroupToken {
	
	public EventPort_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventPortAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_ToKeyword_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::EventPort]
protected class EventPort_RefinedAssignment_1_1_0 extends AssignmentToken  {
	
	public EventPort_RefinedAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventPortAccess().getRefinedAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_EventPortAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortAccess().getRefinedEventPortCrossReference_1_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEventPortAccess().getRefinedEventPortCrossReference_1_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class EventPort_ColonKeyword_1_1_1 extends KeywordToken  {
	
	public EventPort_ColonKeyword_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getColonKeyword_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_RefinedAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class EventPort_RefinedKeyword_1_1_2 extends KeywordToken  {
	
	public EventPort_RefinedKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getRefinedKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_ColonKeyword_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class EventPort_ToKeyword_1_1_3 extends KeywordToken  {
	
	public EventPort_ToKeyword_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getToKeyword_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_RefinedKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=PortDirection
protected class EventPort_DirectionAssignment_2 extends AssignmentToken  {
	
	public EventPort_DirectionAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventPortAccess().getDirectionAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEventPortAccess().getDirectionPortDirectionParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getEventPortAccess().getDirectionPortDirectionParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "event"
protected class EventPort_EventKeyword_3 extends KeywordToken  {
	
	public EventPort_EventKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getEventKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_DirectionAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "port"
protected class EventPort_PortKeyword_4 extends KeywordToken  {
	
	public EventPort_PortKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getPortKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_EventKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// arraySpecification=SingleArraySpecification?
protected class EventPort_ArraySpecificationAssignment_5 extends AssignmentToken  {
	
	public EventPort_ArraySpecificationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventPortAccess().getArraySpecificationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEventPortAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EventPort_PortKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class EventPort_Group_6 extends GroupToken {
	
	public EventPort_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEventPortAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class EventPort_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public EventPort_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EventPort_PortKeyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class EventPort_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public EventPort_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEventPortAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEventPortAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EventPort_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EventPort_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class EventPort_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public EventPort_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class EventPort_SemicolonKeyword_7 extends KeywordToken  {
	
	public EventPort_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEventPortAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EventPort_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EventPort_PortKeyword_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule EventPort ****************/


/************ begin Rule FeatureGroup ****************
 *
 * FeatureGroup returns aadl2::FeatureGroup:
 * 	(name=ID ":" // need to set inout if no direction
 * 	| refined=[aadl2::FeatureGroup] ":" "refined" "to") direction=InOutDirection "feature" "group" (inverse?="inverse"
 * 	"of")? featureGroupType= // or prototype
 * 	[aadl2::FeatureGroupType|QCREF] arraySpecification=SingleArraySpecification? ("{"
 * 	ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" // need to set inout if no direction
// | refined=[aadl2::FeatureGroup] ":" "refined" "to") direction=InOutDirection "feature" "group" (inverse?="inverse"
// "of")? featureGroupType= // or prototype
// [aadl2::FeatureGroupType|QCREF] arraySpecification=SingleArraySpecification? ("{"
// ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class FeatureGroup_Group extends GroupToken {
	
	public FeatureGroup_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" // need to set inout if no direction
// | refined=[aadl2::FeatureGroup] ":" "refined" "to"
protected class FeatureGroup_Alternatives_0 extends AlternativesToken {

	public FeatureGroup_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroup_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class FeatureGroup_Group_0_0 extends GroupToken {
	
	public FeatureGroup_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FeatureGroup_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public FeatureGroup_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureGroupAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeatureGroupAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FeatureGroup_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public FeatureGroup_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::FeatureGroup] ":" "refined" "to"
protected class FeatureGroup_Group_0_1 extends GroupToken {
	
	public FeatureGroup_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::FeatureGroup]
protected class FeatureGroup_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public FeatureGroup_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupAccess().getRefinedFeatureGroupCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupAccess().getRefinedFeatureGroupCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FeatureGroup_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public FeatureGroup_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FeatureGroup_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public FeatureGroup_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FeatureGroup_ToKeyword_0_1_3 extends KeywordToken  {
	
	public FeatureGroup_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=InOutDirection
protected class FeatureGroup_DirectionAssignment_1 extends AssignmentToken  {
	
	public FeatureGroup_DirectionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getDirectionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureGroupAccess().getDirectionInOutDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureGroupAccess().getDirectionInOutDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "feature"
protected class FeatureGroup_FeatureKeyword_2 extends KeywordToken  {
	
	public FeatureGroup_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_DirectionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class FeatureGroup_GroupKeyword_3 extends KeywordToken  {
	
	public FeatureGroup_GroupKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getGroupKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_FeatureKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (inverse?="inverse" "of")?
protected class FeatureGroup_Group_4 extends GroupToken {
	
	public FeatureGroup_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_OfKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inverse?="inverse"
protected class FeatureGroup_InverseAssignment_4_0 extends AssignmentToken  {
	
	public FeatureGroup_InverseAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getInverseAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_GroupKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inverse",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inverse");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFeatureGroupAccess().getInverseInverseKeyword_4_0_0();
			return obj;
		}
		return null;
	}

}

// "of"
protected class FeatureGroup_OfKeyword_4_1 extends KeywordToken  {
	
	public FeatureGroup_OfKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getOfKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_InverseAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// featureGroupType= // or prototype
// [aadl2::FeatureGroupType|QCREF]
protected class FeatureGroup_FeatureGroupTypeAssignment_5 extends AssignmentToken  {
	
	public FeatureGroup_FeatureGroupTypeAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getFeatureGroupTypeAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroup_GroupKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("featureGroupType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("featureGroupType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class FeatureGroup_ArraySpecificationAssignment_6 extends AssignmentToken  {
	
	public FeatureGroup_ArraySpecificationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getArraySpecificationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroup_FeatureGroupTypeAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class FeatureGroup_Group_7 extends GroupToken {
	
	public FeatureGroup_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_RightCurlyBracketKeyword_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FeatureGroup_LeftCurlyBracketKeyword_7_0 extends KeywordToken  {
	
	public FeatureGroup_LeftCurlyBracketKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getLeftCurlyBracketKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_ArraySpecificationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroup_FeatureGroupTypeAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class FeatureGroup_OwnedPropertyAssociationAssignment_7_1 extends AssignmentToken  {
	
	public FeatureGroup_OwnedPropertyAssociationAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getOwnedPropertyAssociationAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroup_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroup_LeftCurlyBracketKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FeatureGroup_RightCurlyBracketKeyword_7_2 extends KeywordToken  {
	
	public FeatureGroup_RightCurlyBracketKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getRightCurlyBracketKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class FeatureGroup_SemicolonKeyword_8 extends KeywordToken  {
	
	public FeatureGroup_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroup_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroup_ArraySpecificationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroup_FeatureGroupTypeAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule FeatureGroup ****************/


/************ begin Rule Parameter ****************
 *
 * Parameter returns aadl2::Parameter:
 * 	(name=ID ":" | refined=[aadl2::Parameter] ":" "refined" "to") direction=PortDirection "parameter"
 * 	dataClassifier=[aadl2::DataClassifier|QCREF]? arraySpecification=SingleArraySpecification? ("{"
 * 	ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" | refined=[aadl2::Parameter] ":" "refined" "to") direction=PortDirection "parameter"
// dataClassifier=[aadl2::DataClassifier|QCREF]? arraySpecification=SingleArraySpecification? ("{"
// ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class Parameter_Group extends GroupToken {
	
	public Parameter_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParameterRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::Parameter] ":" "refined" "to"
protected class Parameter_Alternatives_0 extends AlternativesToken {

	public Parameter_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParameterAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Parameter_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class Parameter_Group_0_0 extends GroupToken {
	
	public Parameter_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class Parameter_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public Parameter_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Parameter_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public Parameter_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::Parameter] ":" "refined" "to"
protected class Parameter_Group_0_1 extends GroupToken {
	
	public Parameter_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::Parameter]
protected class Parameter_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public Parameter_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterAccess().getRefinedParameterCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterAccess().getRefinedParameterCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class Parameter_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public Parameter_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class Parameter_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public Parameter_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class Parameter_ToKeyword_0_1_3 extends KeywordToken  {
	
	public Parameter_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=PortDirection
protected class Parameter_DirectionAssignment_1 extends AssignmentToken  {
	
	public Parameter_DirectionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getDirectionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParameterAccess().getDirectionPortDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getParameterAccess().getDirectionPortDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "parameter"
protected class Parameter_ParameterKeyword_2 extends KeywordToken  {
	
	public Parameter_ParameterKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getParameterKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_DirectionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dataClassifier=[aadl2::DataClassifier|QCREF]?
protected class Parameter_DataClassifierAssignment_3 extends AssignmentToken  {
	
	public Parameter_DataClassifierAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getDataClassifierAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_ParameterKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterAccess().getDataClassifierDataClassifierCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterAccess().getDataClassifierDataClassifierCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class Parameter_ArraySpecificationAssignment_4 extends AssignmentToken  {
	
	public Parameter_ArraySpecificationAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getArraySpecificationAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParameterAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Parameter_DataClassifierAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Parameter_ParameterKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class Parameter_Group_5 extends GroupToken {
	
	public Parameter_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_RightCurlyBracketKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class Parameter_LeftCurlyBracketKeyword_5_0 extends KeywordToken  {
	
	public Parameter_LeftCurlyBracketKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_ArraySpecificationAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Parameter_DataClassifierAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Parameter_ParameterKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class Parameter_OwnedPropertyAssociationAssignment_5_1 extends AssignmentToken  {
	
	public Parameter_OwnedPropertyAssociationAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterAccess().getOwnedPropertyAssociationAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParameterAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Parameter_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Parameter_LeftCurlyBracketKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Parameter_RightCurlyBracketKeyword_5_2 extends KeywordToken  {
	
	public Parameter_RightCurlyBracketKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class Parameter_SemicolonKeyword_6 extends KeywordToken  {
	
	public Parameter_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parameter_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Parameter_ArraySpecificationAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Parameter_DataClassifierAssignment_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Parameter_ParameterKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule Parameter ****************/


/************ begin Rule SubprogramAccess ****************
 *
 * // AccessCategory not set (is encoded in type)
 * SubprogramAccess returns aadl2::SubprogramAccess:
 * 	(name=ID ":" | refined=[aadl2::SubprogramAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
 * 	AccessDirection "subprogram" "access" subprogramClassifier=[aadl2::SubprogramClassifier|QCREF]?
 * 	arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" | refined=[aadl2::SubprogramAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
// AccessDirection "subprogram" "access" subprogramClassifier=[aadl2::SubprogramClassifier|QCREF]?
// arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class SubprogramAccess_Group extends GroupToken {
	
	public SubprogramAccess_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramAccessRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::SubprogramAccess] ":" "refined" "to"
protected class SubprogramAccess_Alternatives_0 extends AlternativesToken {

	public SubprogramAccess_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramAccess_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class SubprogramAccess_Group_0_0 extends GroupToken {
	
	public SubprogramAccess_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class SubprogramAccess_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public SubprogramAccess_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramAccessAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramAccessAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class SubprogramAccess_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public SubprogramAccess_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::SubprogramAccess] ":" "refined" "to"
protected class SubprogramAccess_Group_0_1 extends GroupToken {
	
	public SubprogramAccess_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::SubprogramAccess]
protected class SubprogramAccess_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public SubprogramAccess_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessAccess().getRefinedSubprogramAccessCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramAccessAccess().getRefinedSubprogramAccessCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class SubprogramAccess_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public SubprogramAccess_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class SubprogramAccess_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public SubprogramAccess_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class SubprogramAccess_ToKeyword_0_1_3 extends KeywordToken  {
	
	public SubprogramAccess_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind= // refined to with reference to access feature being refined.
// AccessDirection
protected class SubprogramAccess_KindAssignment_1 extends AssignmentToken  {
	
	public SubprogramAccess_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramAccessAccess().getKindAccessDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSubprogramAccessAccess().getKindAccessDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "subprogram"
protected class SubprogramAccess_SubprogramKeyword_2 extends KeywordToken  {
	
	public SubprogramAccess_SubprogramKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getSubprogramKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "access"
protected class SubprogramAccess_AccessKeyword_3 extends KeywordToken  {
	
	public SubprogramAccess_AccessKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getAccessKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_SubprogramKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subprogramClassifier=[aadl2::SubprogramClassifier|QCREF]?
protected class SubprogramAccess_SubprogramClassifierAssignment_4 extends AssignmentToken  {
	
	public SubprogramAccess_SubprogramClassifierAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getSubprogramClassifierAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_AccessKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subprogramClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subprogramClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramAccessAccess().getSubprogramClassifierSubprogramClassifierCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramAccessAccess().getSubprogramClassifierSubprogramClassifierCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class SubprogramAccess_ArraySpecificationAssignment_5 extends AssignmentToken  {
	
	public SubprogramAccess_ArraySpecificationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getArraySpecificationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramAccessAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramAccess_SubprogramClassifierAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramAccess_AccessKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class SubprogramAccess_Group_6 extends GroupToken {
	
	public SubprogramAccess_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class SubprogramAccess_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public SubprogramAccess_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramAccess_SubprogramClassifierAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramAccess_AccessKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SubprogramAccess_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public SubprogramAccess_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramAccessAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramAccess_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramAccess_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SubprogramAccess_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public SubprogramAccess_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class SubprogramAccess_SemicolonKeyword_7 extends KeywordToken  {
	
	public SubprogramAccess_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramAccessAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramAccess_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramAccess_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramAccess_SubprogramClassifierAssignment_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramAccess_AccessKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramAccess ****************/


/************ begin Rule SubprogramGroupAccess ****************
 *
 * SubprogramGroupAccess returns aadl2::SubprogramGroupAccess:
 * 	(name=ID ":" | refined=[aadl2::SubprogramGroupAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
 * 	AccessDirection "subprogram" "group" "access" subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF]?
 * 	arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" | refined=[aadl2::SubprogramGroupAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
// AccessDirection "subprogram" "group" "access" subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF]?
// arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class SubprogramGroupAccess_Group extends GroupToken {
	
	public SubprogramGroupAccess_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubprogramGroupAccessRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::SubprogramGroupAccess] ":" "refined" "to"
protected class SubprogramGroupAccess_Alternatives_0 extends AlternativesToken {

	public SubprogramGroupAccess_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupAccess_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class SubprogramGroupAccess_Group_0_0 extends GroupToken {
	
	public SubprogramGroupAccess_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class SubprogramGroupAccess_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public SubprogramGroupAccess_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramGroupAccessAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSubprogramGroupAccessAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class SubprogramGroupAccess_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public SubprogramGroupAccess_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::SubprogramGroupAccess] ":" "refined" "to"
protected class SubprogramGroupAccess_Group_0_1 extends GroupToken {
	
	public SubprogramGroupAccess_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::SubprogramGroupAccess]
protected class SubprogramGroupAccess_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public SubprogramGroupAccess_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessAccess().getRefinedSubprogramGroupAccessCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramGroupAccessAccess().getRefinedSubprogramGroupAccessCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class SubprogramGroupAccess_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public SubprogramGroupAccess_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class SubprogramGroupAccess_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public SubprogramGroupAccess_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class SubprogramGroupAccess_ToKeyword_0_1_3 extends KeywordToken  {
	
	public SubprogramGroupAccess_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind= // refined to with reference to access feature being refined.
// AccessDirection
protected class SubprogramGroupAccess_KindAssignment_1 extends AssignmentToken  {
	
	public SubprogramGroupAccess_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSubprogramGroupAccessAccess().getKindAccessDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSubprogramGroupAccessAccess().getKindAccessDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "subprogram"
protected class SubprogramGroupAccess_SubprogramKeyword_2 extends KeywordToken  {
	
	public SubprogramGroupAccess_SubprogramKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getSubprogramKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "group"
protected class SubprogramGroupAccess_GroupKeyword_3 extends KeywordToken  {
	
	public SubprogramGroupAccess_GroupKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getGroupKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_SubprogramKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "access"
protected class SubprogramGroupAccess_AccessKeyword_4 extends KeywordToken  {
	
	public SubprogramGroupAccess_AccessKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getAccessKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_GroupKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subprogramGroupClassifier=[aadl2::SubprogramGroupClassifier|QCREF]?
protected class SubprogramGroupAccess_SubprogramGroupClassifierAssignment_5 extends AssignmentToken  {
	
	public SubprogramGroupAccess_SubprogramGroupClassifierAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getSubprogramGroupClassifierAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_AccessKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subprogramGroupClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subprogramGroupClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubprogramGroupAccessAccess().getSubprogramGroupClassifierSubprogramGroupClassifierCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubprogramGroupAccessAccess().getSubprogramGroupClassifierSubprogramGroupClassifierCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class SubprogramGroupAccess_ArraySpecificationAssignment_6 extends AssignmentToken  {
	
	public SubprogramGroupAccess_ArraySpecificationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getArraySpecificationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupAccessAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupAccess_SubprogramGroupClassifierAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupAccess_AccessKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class SubprogramGroupAccess_Group_7 extends GroupToken {
	
	public SubprogramGroupAccess_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_RightCurlyBracketKeyword_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class SubprogramGroupAccess_LeftCurlyBracketKeyword_7_0 extends KeywordToken  {
	
	public SubprogramGroupAccess_LeftCurlyBracketKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getLeftCurlyBracketKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_ArraySpecificationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupAccess_SubprogramGroupClassifierAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupAccess_AccessKeyword_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class SubprogramGroupAccess_OwnedPropertyAssociationAssignment_7_1 extends AssignmentToken  {
	
	public SubprogramGroupAccess_OwnedPropertyAssociationAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getOwnedPropertyAssociationAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSubprogramGroupAccessAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SubprogramGroupAccess_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SubprogramGroupAccess_LeftCurlyBracketKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SubprogramGroupAccess_RightCurlyBracketKeyword_7_2 extends KeywordToken  {
	
	public SubprogramGroupAccess_RightCurlyBracketKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getRightCurlyBracketKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class SubprogramGroupAccess_SemicolonKeyword_8 extends KeywordToken  {
	
	public SubprogramGroupAccess_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubprogramGroupAccessAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubprogramGroupAccess_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SubprogramGroupAccess_ArraySpecificationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SubprogramGroupAccess_SubprogramGroupClassifierAssignment_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SubprogramGroupAccess_AccessKeyword_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule SubprogramGroupAccess ****************/


/************ begin Rule BusAccess ****************
 *
 * BusAccess returns aadl2::BusAccess:
 * 	(name=ID ":" | refined=[aadl2::BusAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
 * 	AccessDirection "bus" "access" busClassifier=[aadl2::BusClassifier|QCREF]? arraySpecification=SingleArraySpecification?
 * 	("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" | refined=[aadl2::BusAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
// AccessDirection "bus" "access" busClassifier=[aadl2::BusClassifier|QCREF]? arraySpecification=SingleArraySpecification?
// ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class BusAccess_Group extends GroupToken {
	
	public BusAccess_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBusAccessRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::BusAccess] ":" "refined" "to"
protected class BusAccess_Alternatives_0 extends AlternativesToken {

	public BusAccess_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusAccess_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class BusAccess_Group_0_0 extends GroupToken {
	
	public BusAccess_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class BusAccess_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public BusAccess_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBusAccessAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBusAccessAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class BusAccess_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public BusAccess_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::BusAccess] ":" "refined" "to"
protected class BusAccess_Group_0_1 extends GroupToken {
	
	public BusAccess_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::BusAccess]
protected class BusAccess_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public BusAccess_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessAccess().getRefinedBusAccessCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBusAccessAccess().getRefinedBusAccessCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class BusAccess_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public BusAccess_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class BusAccess_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public BusAccess_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class BusAccess_ToKeyword_0_1_3 extends KeywordToken  {
	
	public BusAccess_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind= // refined to with reference to access feature being refined.
// AccessDirection
protected class BusAccess_KindAssignment_1 extends AssignmentToken  {
	
	public BusAccess_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBusAccessAccess().getKindAccessDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBusAccessAccess().getKindAccessDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "bus"
protected class BusAccess_BusKeyword_2 extends KeywordToken  {
	
	public BusAccess_BusKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getBusKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "access"
protected class BusAccess_AccessKeyword_3 extends KeywordToken  {
	
	public BusAccess_AccessKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getAccessKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_BusKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// busClassifier=[aadl2::BusClassifier|QCREF]?
protected class BusAccess_BusClassifierAssignment_4 extends AssignmentToken  {
	
	public BusAccess_BusClassifierAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getBusClassifierAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_AccessKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("busClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("busClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBusAccessAccess().getBusClassifierBusClassifierCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBusAccessAccess().getBusClassifierBusClassifierCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class BusAccess_ArraySpecificationAssignment_5 extends AssignmentToken  {
	
	public BusAccess_ArraySpecificationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getArraySpecificationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusAccessAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusAccess_BusClassifierAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusAccess_AccessKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class BusAccess_Group_6 extends GroupToken {
	
	public BusAccess_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class BusAccess_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public BusAccess_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusAccess_BusClassifierAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusAccess_AccessKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class BusAccess_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public BusAccess_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBusAccessAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BusAccess_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new BusAccess_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class BusAccess_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public BusAccess_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class BusAccess_SemicolonKeyword_7 extends KeywordToken  {
	
	public BusAccess_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBusAccessAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BusAccess_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BusAccess_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BusAccess_BusClassifierAssignment_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new BusAccess_AccessKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule BusAccess ****************/


/************ begin Rule DataAccess ****************
 *
 * DataAccess returns aadl2::DataAccess:
 * 	(name=ID ":" | refined=[aadl2::DataAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
 * 	AccessDirection "data" "access" dataClassifier=[aadl2::DataClassifier|QCREF]?
 * 	arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" | refined=[aadl2::DataAccess] ":" "refined" "to") kind= // refined to with reference to access feature being refined.
// AccessDirection "data" "access" dataClassifier=[aadl2::DataClassifier|QCREF]?
// arraySpecification=SingleArraySpecification? ("{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class DataAccess_Group extends GroupToken {
	
	public DataAccess_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_SemicolonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDataAccessRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::DataAccess] ":" "refined" "to"
protected class DataAccess_Alternatives_0 extends AlternativesToken {

	public DataAccess_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataAccess_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class DataAccess_Group_0_0 extends GroupToken {
	
	public DataAccess_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class DataAccess_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public DataAccess_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataAccessAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDataAccessAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class DataAccess_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public DataAccess_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::DataAccess] ":" "refined" "to"
protected class DataAccess_Group_0_1 extends GroupToken {
	
	public DataAccess_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::DataAccess]
protected class DataAccess_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public DataAccess_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessAccess().getRefinedDataAccessCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDataAccessAccess().getRefinedDataAccessCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class DataAccess_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public DataAccess_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class DataAccess_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public DataAccess_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class DataAccess_ToKeyword_0_1_3 extends KeywordToken  {
	
	public DataAccess_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind= // refined to with reference to access feature being refined.
// AccessDirection
protected class DataAccess_KindAssignment_1 extends AssignmentToken  {
	
	public DataAccess_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDataAccessAccess().getKindAccessDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDataAccessAccess().getKindAccessDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "data"
protected class DataAccess_DataKeyword_2 extends KeywordToken  {
	
	public DataAccess_DataKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getDataKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "access"
protected class DataAccess_AccessKeyword_3 extends KeywordToken  {
	
	public DataAccess_AccessKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getAccessKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_DataKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dataClassifier=[aadl2::DataClassifier|QCREF]?
protected class DataAccess_DataClassifierAssignment_4 extends AssignmentToken  {
	
	public DataAccess_DataClassifierAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getDataClassifierAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_AccessKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataClassifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataClassifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataAccessAccess().getDataClassifierDataClassifierCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDataAccessAccess().getDataClassifierDataClassifierCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class DataAccess_ArraySpecificationAssignment_5 extends AssignmentToken  {
	
	public DataAccess_ArraySpecificationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getArraySpecificationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataAccessAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataAccess_DataClassifierAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataAccess_AccessKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class DataAccess_Group_6 extends GroupToken {
	
	public DataAccess_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class DataAccess_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public DataAccess_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataAccess_DataClassifierAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataAccess_AccessKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class DataAccess_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public DataAccess_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDataAccessAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DataAccess_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DataAccess_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DataAccess_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public DataAccess_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class DataAccess_SemicolonKeyword_7 extends KeywordToken  {
	
	public DataAccess_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDataAccessAccess().getSemicolonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataAccess_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DataAccess_ArraySpecificationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DataAccess_DataClassifierAssignment_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DataAccess_AccessKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule DataAccess ****************/


/************ begin Rule AbstractFeature ****************
 *
 * AbstractFeature returns aadl2::AbstractFeature:
 * 	(name=ID ":" // need to set inout if no direction
 * 	| refined=[aadl2::AbstractFeature] ":" "refined" "to") direction=InOutDirection? "feature"
 * 	classifier=[aadl2::ComponentType|QCREF]? arraySpecification=SingleArraySpecification? ("{"
 * 	ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":" // need to set inout if no direction
// | refined=[aadl2::AbstractFeature] ":" "refined" "to") direction=InOutDirection? "feature"
// classifier=[aadl2::ComponentType|QCREF]? arraySpecification=SingleArraySpecification? ("{"
// ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")? ";"
protected class AbstractFeature_Group extends GroupToken {
	
	public AbstractFeature_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_SemicolonKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractFeatureRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" // need to set inout if no direction
// | refined=[aadl2::AbstractFeature] ":" "refined" "to"
protected class AbstractFeature_Alternatives_0 extends AlternativesToken {

	public AbstractFeature_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractFeature_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class AbstractFeature_Group_0_0 extends GroupToken {
	
	public AbstractFeature_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class AbstractFeature_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public AbstractFeature_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractFeatureAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAbstractFeatureAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class AbstractFeature_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public AbstractFeature_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::AbstractFeature] ":" "refined" "to"
protected class AbstractFeature_Group_0_1 extends GroupToken {
	
	public AbstractFeature_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::AbstractFeature]
protected class AbstractFeature_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public AbstractFeature_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureAccess().getRefinedAbstractFeatureCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAbstractFeatureAccess().getRefinedAbstractFeatureCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class AbstractFeature_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public AbstractFeature_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class AbstractFeature_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public AbstractFeature_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class AbstractFeature_ToKeyword_0_1_3 extends KeywordToken  {
	
	public AbstractFeature_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// direction=InOutDirection?
protected class AbstractFeature_DirectionAssignment_1 extends AssignmentToken  {
	
	public AbstractFeature_DirectionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getDirectionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractFeatureAccess().getDirectionInOutDirectionParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAbstractFeatureAccess().getDirectionInOutDirectionParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "feature"
protected class AbstractFeature_FeatureKeyword_2 extends KeywordToken  {
	
	public AbstractFeature_FeatureKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getFeatureKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_DirectionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractFeature_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// classifier=[aadl2::ComponentType|QCREF]?
protected class AbstractFeature_ClassifierAssignment_3 extends AssignmentToken  {
	
	public AbstractFeature_ClassifierAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getClassifierAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_FeatureKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classifier",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classifier");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractFeatureAccess().getClassifierComponentTypeCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAbstractFeatureAccess().getClassifierComponentTypeCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arraySpecification=SingleArraySpecification?
protected class AbstractFeature_ArraySpecificationAssignment_4 extends AssignmentToken  {
	
	public AbstractFeature_ArraySpecificationAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getArraySpecificationAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleArraySpecification_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arraySpecification",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arraySpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleArraySpecificationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractFeatureAccess().getArraySpecificationSingleArraySpecificationParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractFeature_ClassifierAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractFeature_FeatureKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (=> "{" ownedPropertyAssociation+=ContainedPropertyAssociation+ "}")?
protected class AbstractFeature_Group_5 extends GroupToken {
	
	public AbstractFeature_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_RightCurlyBracketKeyword_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class AbstractFeature_LeftCurlyBracketKeyword_5_0 extends KeywordToken  {
	
	public AbstractFeature_LeftCurlyBracketKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getLeftCurlyBracketKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_ArraySpecificationAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractFeature_ClassifierAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractFeature_FeatureKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class AbstractFeature_OwnedPropertyAssociationAssignment_5_1 extends AssignmentToken  {
	
	public AbstractFeature_OwnedPropertyAssociationAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getOwnedPropertyAssociationAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAbstractFeatureAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AbstractFeature_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AbstractFeature_LeftCurlyBracketKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AbstractFeature_RightCurlyBracketKeyword_5_2 extends KeywordToken  {
	
	public AbstractFeature_RightCurlyBracketKeyword_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getRightCurlyBracketKeyword_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_OwnedPropertyAssociationAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class AbstractFeature_SemicolonKeyword_6 extends KeywordToken  {
	
	public AbstractFeature_SemicolonKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAbstractFeatureAccess().getSemicolonKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractFeature_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractFeature_ArraySpecificationAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AbstractFeature_ClassifierAssignment_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new AbstractFeature_FeatureKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule AbstractFeature ****************/






/************ begin Rule FeatureGroupType ****************
 *
 * FeatureGroupType returns aadl2::FeatureGroupType:
 * 	"feature" "group" name=ID //ownedExtension=GroupExtension
 * 	("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")? ("prototypes"
 * 	(noPrototypes?="none" ";" | ownedPrototype+=Prototype+))? ("features" // no none for FGT (noFeatures?='none' ';') |
 * 	(ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort)+)? ("inverse" "of"
 * 	inverse=[aadl2::FeatureGroupType|QCREF])? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ |
 * 	noProperties?="none" ";"))? ownedAnnexSubclause+=AnnexSubclause* "end" ID ";";
 *
 **/

// "feature" "group" name=ID //ownedExtension=GroupExtension
// ("(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")? ("prototypes"
// (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))? ("features" // no none for FGT (noFeatures?='none' ';') |
// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort)+)? ("inverse" "of"
// inverse=[aadl2::FeatureGroupType|QCREF])? ("properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ |
// noProperties?="none" ";"))? ownedAnnexSubclause+=AnnexSubclause* "end" ID ";"
protected class FeatureGroupType_Group extends GroupToken {
	
	public FeatureGroupType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_SemicolonKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "feature"
protected class FeatureGroupType_FeatureKeyword_0 extends KeywordToken  {
	
	public FeatureGroupType_FeatureKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getFeatureKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "group"
protected class FeatureGroupType_GroupKeyword_1 extends KeywordToken  {
	
	public FeatureGroupType_GroupKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroupKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_FeatureKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FeatureGroupType_NameAssignment_2 extends AssignmentToken  {
	
	public FeatureGroupType_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_GroupKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureGroupTypeAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeatureGroupTypeAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (=> "(" ownedPrototypeBinding+=PrototypeBinding ("," ownedPrototypeBinding+=PrototypeBinding)* ")")?
protected class FeatureGroupType_Group_3 extends GroupToken {
	
	public FeatureGroupType_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_RightParenthesisKeyword_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "("
protected class FeatureGroupType_LeftParenthesisKeyword_3_0 extends KeywordToken  {
	
	public FeatureGroupType_LeftParenthesisKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getLeftParenthesisKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class FeatureGroupType_OwnedPrototypeBindingAssignment_3_1 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedPrototypeBindingAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedPrototypeBindingAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_LeftParenthesisKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedPrototypeBinding+=PrototypeBinding)*
protected class FeatureGroupType_Group_3_2 extends GroupToken {
	
	public FeatureGroupType_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_OwnedPrototypeBindingAssignment_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class FeatureGroupType_CommaKeyword_3_2_0 extends KeywordToken  {
	
	public FeatureGroupType_CommaKeyword_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getCommaKeyword_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_OwnedPrototypeBindingAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPrototypeBinding+=PrototypeBinding
protected class FeatureGroupType_OwnedPrototypeBindingAssignment_3_2_1 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedPrototypeBindingAssignment_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedPrototypeBindingAssignment_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrototypeBinding_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototypeBinding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototypeBinding");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeBindingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedPrototypeBindingPrototypeBindingParserRuleCall_3_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_CommaKeyword_3_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ")"
protected class FeatureGroupType_RightParenthesisKeyword_3_3 extends KeywordToken  {
	
	public FeatureGroupType_RightParenthesisKeyword_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getRightParenthesisKeyword_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_OwnedPrototypeBindingAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// (=> "prototypes" (noPrototypes?="none" ";" | ownedPrototype+=Prototype+))?
protected class FeatureGroupType_Group_4 extends GroupToken {
	
	public FeatureGroupType_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Alternatives_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "prototypes"
protected class FeatureGroupType_PrototypesKeyword_4_0 extends KeywordToken  {
	
	public FeatureGroupType_PrototypesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getPrototypesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";" | ownedPrototype+=Prototype+
protected class FeatureGroupType_Alternatives_4_1 extends AlternativesToken {

	public FeatureGroupType_Alternatives_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getAlternatives_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_OwnedPrototypeAssignment_4_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none" ";"
protected class FeatureGroupType_Group_4_1_0 extends GroupToken {
	
	public FeatureGroupType_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_SemicolonKeyword_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noPrototypes?="none"
protected class FeatureGroupType_NoPrototypesAssignment_4_1_0_0 extends AssignmentToken  {
	
	public FeatureGroupType_NoPrototypesAssignment_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getNoPrototypesAssignment_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_PrototypesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noPrototypes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noPrototypes");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFeatureGroupTypeAccess().getNoPrototypesNoneKeyword_4_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class FeatureGroupType_SemicolonKeyword_4_1_0_1 extends KeywordToken  {
	
	public FeatureGroupType_SemicolonKeyword_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getSemicolonKeyword_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_NoPrototypesAssignment_4_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ownedPrototype+=Prototype+
protected class FeatureGroupType_OwnedPrototypeAssignment_4_1_1 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedPrototypeAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedPrototypeAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Prototype_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPrototype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPrototype");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrototypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedPrototypePrototypeParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_OwnedPrototypeAssignment_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupType_PrototypesKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "features" // no none for FGT (noFeatures?='none' ';') |
// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort)+)?
protected class FeatureGroupType_Group_5 extends GroupToken {
	
	public FeatureGroupType_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Alternatives_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "features"
protected class FeatureGroupType_FeaturesKeyword_5_0 extends KeywordToken  {
	
	public FeatureGroupType_FeaturesKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getFeaturesKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (ownedDataPort+=DataPort | ownedEventPort+=EventPort | ownedEventDataPort+=EventDataPort)+
protected class FeatureGroupType_Alternatives_5_1 extends AlternativesToken {

	public FeatureGroupType_Alternatives_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getAlternatives_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_OwnedDataPortAssignment_5_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_OwnedEventPortAssignment_5_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroupType_OwnedEventDataPortAssignment_5_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ownedDataPort+=DataPort
protected class FeatureGroupType_OwnedDataPortAssignment_5_1_0 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedDataPortAssignment_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedDataPortAssignment_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedDataPortDataPortParserRuleCall_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_Alternatives_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventPort+=EventPort
protected class FeatureGroupType_OwnedEventPortAssignment_5_1_1 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedEventPortAssignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedEventPortAssignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedEventPortEventPortParserRuleCall_5_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_Alternatives_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ownedEventDataPort+=EventDataPort
protected class FeatureGroupType_OwnedEventDataPortAssignment_5_1_2 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedEventDataPortAssignment_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedEventDataPortAssignment_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EventDataPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedEventDataPort",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedEventDataPort");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEventDataPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedEventDataPortEventDataPortParserRuleCall_5_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_Alternatives_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupType_FeaturesKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// (=> "inverse" "of" inverse=[aadl2::FeatureGroupType|QCREF])?
protected class FeatureGroupType_Group_6 extends GroupToken {
	
	public FeatureGroupType_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_InverseAssignment_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "inverse"
protected class FeatureGroupType_InverseKeyword_6_0 extends KeywordToken  {
	
	public FeatureGroupType_InverseKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getInverseKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroupType_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "of"
protected class FeatureGroupType_OfKeyword_6_1 extends KeywordToken  {
	
	public FeatureGroupType_OfKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOfKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_InverseKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inverse=[aadl2::FeatureGroupType|QCREF]
protected class FeatureGroupType_InverseAssignment_6_2 extends AssignmentToken  {
	
	public FeatureGroupType_InverseAssignment_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getInverseAssignment_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_OfKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inverse",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inverse");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupTypeAccess().getInverseFeatureGroupTypeCrossReference_6_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupTypeAccess().getInverseFeatureGroupTypeCrossReference_6_2_0(); 
				return obj;
			}
		}
		return null;
	}

}


// (=> "properties" (ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"))?
protected class FeatureGroupType_Group_7 extends GroupToken {
	
	public FeatureGroupType_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Alternatives_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "properties"
protected class FeatureGroupType_PropertiesKeyword_7_0 extends KeywordToken  {
	
	public FeatureGroupType_PropertiesKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getPropertiesKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroupType_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new FeatureGroupType_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+ | noProperties?="none" ";"
protected class FeatureGroupType_Alternatives_7_1 extends AlternativesToken {

	public FeatureGroupType_Alternatives_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getAlternatives_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_Group_7_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=ContainedPropertyAssociation+
protected class FeatureGroupType_OwnedPropertyAssociationAssignment_7_1_0 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedPropertyAssociationAssignment_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedPropertyAssociationAssignment_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedPropertyAssociationContainedPropertyAssociationParserRuleCall_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_OwnedPropertyAssociationAssignment_7_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupType_PropertiesKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// noProperties?="none" ";"
protected class FeatureGroupType_Group_7_1_1 extends GroupToken {
	
	public FeatureGroupType_Group_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getGroup_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_SemicolonKeyword_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// noProperties?="none"
protected class FeatureGroupType_NoPropertiesAssignment_7_1_1_0 extends AssignmentToken  {
	
	public FeatureGroupType_NoPropertiesAssignment_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getNoPropertiesAssignment_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_PropertiesKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("noProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("noProperties");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFeatureGroupTypeAccess().getNoPropertiesNoneKeyword_7_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class FeatureGroupType_SemicolonKeyword_7_1_1_1 extends KeywordToken  {
	
	public FeatureGroupType_SemicolonKeyword_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getSemicolonKeyword_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_NoPropertiesAssignment_7_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




// ownedAnnexSubclause+=AnnexSubclause*
protected class FeatureGroupType_OwnedAnnexSubclauseAssignment_8 extends AssignmentToken  {
	
	public FeatureGroupType_OwnedAnnexSubclauseAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getOwnedAnnexSubclauseAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedAnnexSubclause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedAnnexSubclause");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAnnexSubclauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupTypeAccess().getOwnedAnnexSubclauseAnnexSubclauseParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupType_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new FeatureGroupType_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new FeatureGroupType_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new FeatureGroupType_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new FeatureGroupType_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "end"
protected class FeatureGroupType_EndKeyword_9 extends KeywordToken  {
	
	public FeatureGroupType_EndKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getEndKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_OwnedAnnexSubclauseAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupType_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroupType_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new FeatureGroupType_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new FeatureGroupType_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new FeatureGroupType_Group_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new FeatureGroupType_NameAssignment_2(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ID
protected class FeatureGroupType_IDTerminalRuleCall_10 extends UnassignedTextToken {

	public FeatureGroupType_IDTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getIDTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_EndKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class FeatureGroupType_SemicolonKeyword_11 extends KeywordToken  {
	
	public FeatureGroupType_SemicolonKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupTypeAccess().getSemicolonKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupType_IDTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule FeatureGroupType ****************/


/************ begin Rule PortConnection ****************
 *
 * // ********* connections 
 * PortConnection returns aadl2::PortConnection:
 * 	(name=ID ":" | refined=[aadl2::PortConnection] ":" "refined" "to") kind=PortConnectionKind // 'processor' and 'self' for both source and destination
 * 	(sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd] ("->" | bidirectional?="<->")
 * 	(destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	// also needs to refer to transitions
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::PortConnection] ":" "refined" "to") kind=PortConnectionKind // 'processor' and 'self' for both source and destination
// (sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd] ("->" | bidirectional?="<->")
// (destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// // also needs to refer to transitions
// ";"
protected class PortConnection_Group extends GroupToken {
	
	public PortConnection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPortConnectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::PortConnection] ":" "refined" "to"
protected class PortConnection_Alternatives_0 extends AlternativesToken {

	public PortConnection_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class PortConnection_Group_0_0 extends GroupToken {
	
	public PortConnection_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class PortConnection_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public PortConnection_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPortConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPortConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class PortConnection_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public PortConnection_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::PortConnection] ":" "refined" "to"
protected class PortConnection_Group_0_1 extends GroupToken {
	
	public PortConnection_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::PortConnection]
protected class PortConnection_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public PortConnection_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionAccess().getRefinedPortConnectionCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortConnectionAccess().getRefinedPortConnectionCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class PortConnection_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public PortConnection_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class PortConnection_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public PortConnection_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class PortConnection_ToKeyword_0_1_3 extends KeywordToken  {
	
	public PortConnection_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind=PortConnectionKind
protected class PortConnection_KindAssignment_1 extends AssignmentToken  {
	
	public PortConnection_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPortConnectionAccess().getKindPortConnectionKindParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPortConnectionAccess().getKindPortConnectionKindParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (sourceContext=[aadl2::Context] ".")?
protected class PortConnection_Group_2 extends GroupToken {
	
	public PortConnection_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_FullStopKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceContext=[aadl2::Context]
protected class PortConnection_SourceContextAssignment_2_0 extends AssignmentToken  {
	
	public PortConnection_SourceContextAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getSourceContextAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionAccess().getSourceContextContextCrossReference_2_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortConnectionAccess().getSourceContextContextCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class PortConnection_FullStopKeyword_2_1 extends KeywordToken  {
	
	public PortConnection_FullStopKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getFullStopKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_SourceContextAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// source=[aadl2::ConnectionEnd]
protected class PortConnection_SourceAssignment_3 extends AssignmentToken  {
	
	public PortConnection_SourceAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getSourceAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_KindAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionAccess().getSourceConnectionEndCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortConnectionAccess().getSourceConnectionEndCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "->" | bidirectional?="<->"
protected class PortConnection_Alternatives_4 extends AlternativesToken {

	public PortConnection_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_HyphenMinusGreaterThanSignKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_BidirectionalAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "->"
protected class PortConnection_HyphenMinusGreaterThanSignKeyword_4_0 extends KeywordToken  {
	
	public PortConnection_HyphenMinusGreaterThanSignKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getHyphenMinusGreaterThanSignKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_SourceAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bidirectional?="<->"
protected class PortConnection_BidirectionalAssignment_4_1 extends AssignmentToken  {
	
	public PortConnection_BidirectionalAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getBidirectionalAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_SourceAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bidirectional",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bidirectional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getPortConnectionAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_4_1_0();
			return obj;
		}
		return null;
	}

}


// (destinationContext=[aadl2::Context] ".")?
protected class PortConnection_Group_5 extends GroupToken {
	
	public PortConnection_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_FullStopKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// destinationContext=[aadl2::Context]
protected class PortConnection_DestinationContextAssignment_5_0 extends AssignmentToken  {
	
	public PortConnection_DestinationContextAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getDestinationContextAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destinationContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destinationContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionAccess().getDestinationContextContextCrossReference_5_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortConnectionAccess().getDestinationContextContextCrossReference_5_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class PortConnection_FullStopKeyword_5_1 extends KeywordToken  {
	
	public PortConnection_FullStopKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getFullStopKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_DestinationContextAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// destination=[aadl2::ConnectionEnd]
protected class PortConnection_DestinationAssignment_6 extends AssignmentToken  {
	
	public PortConnection_DestinationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getDestinationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_Alternatives_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destination",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destination");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionAccess().getDestinationConnectionEndCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortConnectionAccess().getDestinationConnectionEndCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class PortConnection_Group_7 extends GroupToken {
	
	public PortConnection_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_RightCurlyBracketKeyword_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class PortConnection_LeftCurlyBracketKeyword_7_0 extends KeywordToken  {
	
	public PortConnection_LeftCurlyBracketKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getLeftCurlyBracketKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_DestinationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class PortConnection_OwnedPropertyAssociationAssignment_7_1 extends AssignmentToken  {
	
	public PortConnection_OwnedPropertyAssociationAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getOwnedPropertyAssociationAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPortConnectionAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PortConnection_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new PortConnection_LeftCurlyBracketKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class PortConnection_RightCurlyBracketKeyword_7_2 extends KeywordToken  {
	
	public PortConnection_RightCurlyBracketKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getRightCurlyBracketKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class PortConnection_Group_8 extends GroupToken {
	
	public PortConnection_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_RightParenthesisKeyword_8_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class PortConnection_InKeyword_8_0 extends KeywordToken  {
	
	public PortConnection_InKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getInKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_DestinationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class PortConnection_ModesKeyword_8_1 extends KeywordToken  {
	
	public PortConnection_ModesKeyword_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getModesKeyword_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_InKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class PortConnection_LeftParenthesisKeyword_8_2 extends KeywordToken  {
	
	public PortConnection_LeftParenthesisKeyword_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getLeftParenthesisKeyword_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_ModesKeyword_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class PortConnection_InModeAssignment_8_3 extends AssignmentToken  {
	
	public PortConnection_InModeAssignment_8_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getInModeAssignment_8_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_InModeAssignment_8_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_LeftParenthesisKeyword_8_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPortConnectionAccess().getInModeModeCrossReference_8_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPortConnectionAccess().getInModeModeCrossReference_8_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class PortConnection_RightParenthesisKeyword_8_4 extends KeywordToken  {
	
	public PortConnection_RightParenthesisKeyword_8_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getRightParenthesisKeyword_8_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_InModeAssignment_8_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// // also needs to refer to transitions
// ";"
protected class PortConnection_SemicolonKeyword_9 extends KeywordToken  {
	
	public PortConnection_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPortConnectionAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PortConnection_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PortConnection_DestinationAssignment_6(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule PortConnection ****************/


/************ begin Rule AccessConnection ****************
 *
 * AccessConnection returns aadl2::AccessConnection:
 * 	(name=ID ":" | refined=[aadl2::AccessConnection] ":" "refined" "to") accessCategory=AccessCategory
 * 	kind=AccessConnectionKind // 'processor' => ProcessorSubprogram as source 
 * 	((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) ("->" | bidirectional?="<->")
 * 	(destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::AccessConnection] ":" "refined" "to") accessCategory=AccessCategory
// kind=AccessConnectionKind // 'processor' => ProcessorSubprogram as source 
// ((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) ("->" | bidirectional?="<->")
// (destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class AccessConnection_Group extends GroupToken {
	
	public AccessConnection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_SemicolonKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAccessConnectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::AccessConnection] ":" "refined" "to"
protected class AccessConnection_Alternatives_0 extends AlternativesToken {

	public AccessConnection_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class AccessConnection_Group_0_0 extends GroupToken {
	
	public AccessConnection_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class AccessConnection_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public AccessConnection_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccessConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAccessConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class AccessConnection_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public AccessConnection_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::AccessConnection] ":" "refined" "to"
protected class AccessConnection_Group_0_1 extends GroupToken {
	
	public AccessConnection_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::AccessConnection]
protected class AccessConnection_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public AccessConnection_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionAccess().getRefinedAccessConnectionCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessConnectionAccess().getRefinedAccessConnectionCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class AccessConnection_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public AccessConnection_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class AccessConnection_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public AccessConnection_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class AccessConnection_ToKeyword_0_1_3 extends KeywordToken  {
	
	public AccessConnection_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// accessCategory=AccessCategory
protected class AccessConnection_AccessCategoryAssignment_1 extends AssignmentToken  {
	
	public AccessConnection_AccessCategoryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getAccessCategoryAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("accessCategory",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessCategory");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccessConnectionAccess().getAccessCategoryAccessCategoryParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAccessConnectionAccess().getAccessCategoryAccessCategoryParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// kind=AccessConnectionKind
protected class AccessConnection_KindAssignment_2 extends AssignmentToken  {
	
	public AccessConnection_KindAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getKindAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_AccessCategoryAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccessConnectionAccess().getKindAccessConnectionKindParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAccessConnectionAccess().getKindAccessConnectionKindParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]
protected class AccessConnection_Group_3 extends GroupToken {
	
	public AccessConnection_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_SourceAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (sourceContext=[aadl2::Context] ".")?
protected class AccessConnection_Group_3_0 extends GroupToken {
	
	public AccessConnection_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_FullStopKeyword_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceContext=[aadl2::Context]
protected class AccessConnection_SourceContextAssignment_3_0_0 extends AssignmentToken  {
	
	public AccessConnection_SourceContextAssignment_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getSourceContextAssignment_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_KindAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionAccess().getSourceContextContextCrossReference_3_0_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessConnectionAccess().getSourceContextContextCrossReference_3_0_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class AccessConnection_FullStopKeyword_3_0_1 extends KeywordToken  {
	
	public AccessConnection_FullStopKeyword_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getFullStopKeyword_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_SourceContextAssignment_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// source=[aadl2::ConnectionEnd]
protected class AccessConnection_SourceAssignment_3_1 extends AssignmentToken  {
	
	public AccessConnection_SourceAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getSourceAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_KindAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionAccess().getSourceConnectionEndCrossReference_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessConnectionAccess().getSourceConnectionEndCrossReference_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "->" | bidirectional?="<->"
protected class AccessConnection_Alternatives_4 extends AlternativesToken {

	public AccessConnection_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_HyphenMinusGreaterThanSignKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_BidirectionalAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "->"
protected class AccessConnection_HyphenMinusGreaterThanSignKeyword_4_0 extends KeywordToken  {
	
	public AccessConnection_HyphenMinusGreaterThanSignKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getHyphenMinusGreaterThanSignKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bidirectional?="<->"
protected class AccessConnection_BidirectionalAssignment_4_1 extends AssignmentToken  {
	
	public AccessConnection_BidirectionalAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getBidirectionalAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bidirectional",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bidirectional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAccessConnectionAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_4_1_0();
			return obj;
		}
		return null;
	}

}


// (destinationContext=[aadl2::Context] ".")?
protected class AccessConnection_Group_5 extends GroupToken {
	
	public AccessConnection_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_FullStopKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// destinationContext=[aadl2::Context]
protected class AccessConnection_DestinationContextAssignment_5_0 extends AssignmentToken  {
	
	public AccessConnection_DestinationContextAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getDestinationContextAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destinationContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destinationContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionAccess().getDestinationContextContextCrossReference_5_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessConnectionAccess().getDestinationContextContextCrossReference_5_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class AccessConnection_FullStopKeyword_5_1 extends KeywordToken  {
	
	public AccessConnection_FullStopKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getFullStopKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_DestinationContextAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// destination=[aadl2::ConnectionEnd]
protected class AccessConnection_DestinationAssignment_6 extends AssignmentToken  {
	
	public AccessConnection_DestinationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getDestinationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_Alternatives_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destination",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destination");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionAccess().getDestinationConnectionEndCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessConnectionAccess().getDestinationConnectionEndCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class AccessConnection_Group_7 extends GroupToken {
	
	public AccessConnection_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_RightCurlyBracketKeyword_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class AccessConnection_LeftCurlyBracketKeyword_7_0 extends KeywordToken  {
	
	public AccessConnection_LeftCurlyBracketKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getLeftCurlyBracketKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_DestinationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class AccessConnection_OwnedPropertyAssociationAssignment_7_1 extends AssignmentToken  {
	
	public AccessConnection_OwnedPropertyAssociationAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getOwnedPropertyAssociationAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAccessConnectionAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AccessConnection_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AccessConnection_LeftCurlyBracketKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AccessConnection_RightCurlyBracketKeyword_7_2 extends KeywordToken  {
	
	public AccessConnection_RightCurlyBracketKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getRightCurlyBracketKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class AccessConnection_Group_8 extends GroupToken {
	
	public AccessConnection_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_RightParenthesisKeyword_8_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class AccessConnection_InKeyword_8_0 extends KeywordToken  {
	
	public AccessConnection_InKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getInKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_DestinationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class AccessConnection_ModesKeyword_8_1 extends KeywordToken  {
	
	public AccessConnection_ModesKeyword_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getModesKeyword_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_InKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class AccessConnection_LeftParenthesisKeyword_8_2 extends KeywordToken  {
	
	public AccessConnection_LeftParenthesisKeyword_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getLeftParenthesisKeyword_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_ModesKeyword_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class AccessConnection_InModeAssignment_8_3 extends AssignmentToken  {
	
	public AccessConnection_InModeAssignment_8_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getInModeAssignment_8_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_InModeAssignment_8_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_LeftParenthesisKeyword_8_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessConnectionAccess().getInModeModeCrossReference_8_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAccessConnectionAccess().getInModeModeCrossReference_8_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class AccessConnection_RightParenthesisKeyword_8_4 extends KeywordToken  {
	
	public AccessConnection_RightParenthesisKeyword_8_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getRightParenthesisKeyword_8_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_InModeAssignment_8_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class AccessConnection_SemicolonKeyword_9 extends KeywordToken  {
	
	public AccessConnection_SemicolonKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessConnectionAccess().getSemicolonKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessConnection_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessConnection_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AccessConnection_DestinationAssignment_6(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule AccessConnection ****************/


/************ begin Rule FeatureGroupConnection ****************
 *
 * FeatureGroupConnection returns aadl2::FeatureGroupConnection:
 * 	(name=ID ":" | refined=[aadl2::FeatureGroupConnection] ":" "refined" "to") kind=FeatureGroupConnectionKind // only regular cotnexts, no processor or self 
 * 	((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) bidirectional?="<->"
 * 	(destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::FeatureGroupConnection] ":" "refined" "to") kind=FeatureGroupConnectionKind // only regular cotnexts, no processor or self 
// ((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) bidirectional?="<->"
// (destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class FeatureGroupConnection_Group extends GroupToken {
	
	public FeatureGroupConnection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureGroupConnectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::FeatureGroupConnection] ":" "refined" "to"
protected class FeatureGroupConnection_Alternatives_0 extends AlternativesToken {

	public FeatureGroupConnection_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupConnection_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class FeatureGroupConnection_Group_0_0 extends GroupToken {
	
	public FeatureGroupConnection_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FeatureGroupConnection_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public FeatureGroupConnection_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureGroupConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeatureGroupConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FeatureGroupConnection_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public FeatureGroupConnection_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::FeatureGroupConnection] ":" "refined" "to"
protected class FeatureGroupConnection_Group_0_1 extends GroupToken {
	
	public FeatureGroupConnection_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::FeatureGroupConnection]
protected class FeatureGroupConnection_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public FeatureGroupConnection_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionAccess().getRefinedFeatureGroupConnectionCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupConnectionAccess().getRefinedFeatureGroupConnectionCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FeatureGroupConnection_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public FeatureGroupConnection_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FeatureGroupConnection_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public FeatureGroupConnection_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FeatureGroupConnection_ToKeyword_0_1_3 extends KeywordToken  {
	
	public FeatureGroupConnection_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind=FeatureGroupConnectionKind
protected class FeatureGroupConnection_KindAssignment_1 extends AssignmentToken  {
	
	public FeatureGroupConnection_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureGroupConnectionAccess().getKindFeatureGroupConnectionKindParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureGroupConnectionAccess().getKindFeatureGroupConnectionKindParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]
protected class FeatureGroupConnection_Group_2 extends GroupToken {
	
	public FeatureGroupConnection_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_SourceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (sourceContext=[aadl2::Context] ".")?
protected class FeatureGroupConnection_Group_2_0 extends GroupToken {
	
	public FeatureGroupConnection_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_FullStopKeyword_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceContext=[aadl2::Context]
protected class FeatureGroupConnection_SourceContextAssignment_2_0_0 extends AssignmentToken  {
	
	public FeatureGroupConnection_SourceContextAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getSourceContextAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionAccess().getSourceContextContextCrossReference_2_0_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupConnectionAccess().getSourceContextContextCrossReference_2_0_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FeatureGroupConnection_FullStopKeyword_2_0_1 extends KeywordToken  {
	
	public FeatureGroupConnection_FullStopKeyword_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getFullStopKeyword_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_SourceContextAssignment_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// source=[aadl2::ConnectionEnd]
protected class FeatureGroupConnection_SourceAssignment_2_1 extends AssignmentToken  {
	
	public FeatureGroupConnection_SourceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getSourceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupConnection_KindAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionAccess().getSourceConnectionEndCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupConnectionAccess().getSourceConnectionEndCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// bidirectional?="<->"
protected class FeatureGroupConnection_BidirectionalAssignment_3 extends AssignmentToken  {
	
	public FeatureGroupConnection_BidirectionalAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getBidirectionalAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bidirectional",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bidirectional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFeatureGroupConnectionAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// (destinationContext=[aadl2::Context] ".")?
protected class FeatureGroupConnection_Group_4 extends GroupToken {
	
	public FeatureGroupConnection_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_FullStopKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// destinationContext=[aadl2::Context]
protected class FeatureGroupConnection_DestinationContextAssignment_4_0 extends AssignmentToken  {
	
	public FeatureGroupConnection_DestinationContextAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getDestinationContextAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_BidirectionalAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destinationContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destinationContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionAccess().getDestinationContextContextCrossReference_4_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupConnectionAccess().getDestinationContextContextCrossReference_4_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FeatureGroupConnection_FullStopKeyword_4_1 extends KeywordToken  {
	
	public FeatureGroupConnection_FullStopKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getFullStopKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_DestinationContextAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// destination=[aadl2::ConnectionEnd]
protected class FeatureGroupConnection_DestinationAssignment_5 extends AssignmentToken  {
	
	public FeatureGroupConnection_DestinationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getDestinationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupConnection_BidirectionalAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destination",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destination");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionAccess().getDestinationConnectionEndCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupConnectionAccess().getDestinationConnectionEndCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FeatureGroupConnection_Group_6 extends GroupToken {
	
	public FeatureGroupConnection_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FeatureGroupConnection_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public FeatureGroupConnection_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FeatureGroupConnection_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public FeatureGroupConnection_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureGroupConnectionAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureGroupConnection_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureGroupConnection_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FeatureGroupConnection_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public FeatureGroupConnection_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class FeatureGroupConnection_Group_7 extends GroupToken {
	
	public FeatureGroupConnection_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_RightParenthesisKeyword_7_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class FeatureGroupConnection_InKeyword_7_0 extends KeywordToken  {
	
	public FeatureGroupConnection_InKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getInKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class FeatureGroupConnection_ModesKeyword_7_1 extends KeywordToken  {
	
	public FeatureGroupConnection_ModesKeyword_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getModesKeyword_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_InKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class FeatureGroupConnection_LeftParenthesisKeyword_7_2 extends KeywordToken  {
	
	public FeatureGroupConnection_LeftParenthesisKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getLeftParenthesisKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_ModesKeyword_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class FeatureGroupConnection_InModeAssignment_7_3 extends AssignmentToken  {
	
	public FeatureGroupConnection_InModeAssignment_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getInModeAssignment_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_InModeAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupConnection_LeftParenthesisKeyword_7_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureGroupConnectionAccess().getInModeModeCrossReference_7_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureGroupConnectionAccess().getInModeModeCrossReference_7_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class FeatureGroupConnection_RightParenthesisKeyword_7_4 extends KeywordToken  {
	
	public FeatureGroupConnection_RightParenthesisKeyword_7_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getRightParenthesisKeyword_7_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_InModeAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class FeatureGroupConnection_SemicolonKeyword_8 extends KeywordToken  {
	
	public FeatureGroupConnection_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureGroupConnectionAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureGroupConnection_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureGroupConnection_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureGroupConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule FeatureGroupConnection ****************/


/************ begin Rule FeatureConnection ****************
 *
 * FeatureConnection returns aadl2::FeatureConnection:
 * 	(name=ID ":" | refined=[aadl2::FeatureConnection] ":" "refined" "to") kind=FeatureConnectionKind // only regular cotnexts, no processor or self 
 * 	((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) ("->" | bidirectional?="<->")
 * 	(destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::FeatureConnection] ":" "refined" "to") kind=FeatureConnectionKind // only regular cotnexts, no processor or self 
// ((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) ("->" | bidirectional?="<->")
// (destinationContext=[aadl2::Context] ".")? destination=[aadl2::ConnectionEnd] ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class FeatureConnection_Group extends GroupToken {
	
	public FeatureConnection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFeatureConnectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::FeatureConnection] ":" "refined" "to"
protected class FeatureConnection_Alternatives_0 extends AlternativesToken {

	public FeatureConnection_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class FeatureConnection_Group_0_0 extends GroupToken {
	
	public FeatureConnection_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FeatureConnection_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public FeatureConnection_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFeatureConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FeatureConnection_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public FeatureConnection_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::FeatureConnection] ":" "refined" "to"
protected class FeatureConnection_Group_0_1 extends GroupToken {
	
	public FeatureConnection_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::FeatureConnection]
protected class FeatureConnection_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public FeatureConnection_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionAccess().getRefinedFeatureConnectionCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureConnectionAccess().getRefinedFeatureConnectionCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FeatureConnection_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public FeatureConnection_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FeatureConnection_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public FeatureConnection_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FeatureConnection_ToKeyword_0_1_3 extends KeywordToken  {
	
	public FeatureConnection_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind=FeatureConnectionKind
protected class FeatureConnection_KindAssignment_1 extends AssignmentToken  {
	
	public FeatureConnection_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFeatureConnectionAccess().getKindFeatureConnectionKindParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFeatureConnectionAccess().getKindFeatureConnectionKindParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]
protected class FeatureConnection_Group_2 extends GroupToken {
	
	public FeatureConnection_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_SourceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (sourceContext=[aadl2::Context] ".")?
protected class FeatureConnection_Group_2_0 extends GroupToken {
	
	public FeatureConnection_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_FullStopKeyword_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceContext=[aadl2::Context]
protected class FeatureConnection_SourceContextAssignment_2_0_0 extends AssignmentToken  {
	
	public FeatureConnection_SourceContextAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getSourceContextAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionAccess().getSourceContextContextCrossReference_2_0_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureConnectionAccess().getSourceContextContextCrossReference_2_0_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FeatureConnection_FullStopKeyword_2_0_1 extends KeywordToken  {
	
	public FeatureConnection_FullStopKeyword_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getFullStopKeyword_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_SourceContextAssignment_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// source=[aadl2::ConnectionEnd]
protected class FeatureConnection_SourceAssignment_2_1 extends AssignmentToken  {
	
	public FeatureConnection_SourceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getSourceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_KindAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionAccess().getSourceConnectionEndCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureConnectionAccess().getSourceConnectionEndCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "->" | bidirectional?="<->"
protected class FeatureConnection_Alternatives_3 extends AlternativesToken {

	public FeatureConnection_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_HyphenMinusGreaterThanSignKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_BidirectionalAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "->"
protected class FeatureConnection_HyphenMinusGreaterThanSignKeyword_3_0 extends KeywordToken  {
	
	public FeatureConnection_HyphenMinusGreaterThanSignKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getHyphenMinusGreaterThanSignKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bidirectional?="<->"
protected class FeatureConnection_BidirectionalAssignment_3_1 extends AssignmentToken  {
	
	public FeatureConnection_BidirectionalAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getBidirectionalAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bidirectional",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bidirectional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getFeatureConnectionAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_3_1_0();
			return obj;
		}
		return null;
	}

}


// (destinationContext=[aadl2::Context] ".")?
protected class FeatureConnection_Group_4 extends GroupToken {
	
	public FeatureConnection_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_FullStopKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// destinationContext=[aadl2::Context]
protected class FeatureConnection_DestinationContextAssignment_4_0 extends AssignmentToken  {
	
	public FeatureConnection_DestinationContextAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getDestinationContextAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destinationContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destinationContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionAccess().getDestinationContextContextCrossReference_4_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureConnectionAccess().getDestinationContextContextCrossReference_4_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FeatureConnection_FullStopKeyword_4_1 extends KeywordToken  {
	
	public FeatureConnection_FullStopKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getFullStopKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_DestinationContextAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// destination=[aadl2::ConnectionEnd]
protected class FeatureConnection_DestinationAssignment_5 extends AssignmentToken  {
	
	public FeatureConnection_DestinationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getDestinationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destination",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destination");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionAccess().getDestinationConnectionEndCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureConnectionAccess().getDestinationConnectionEndCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FeatureConnection_Group_6 extends GroupToken {
	
	public FeatureConnection_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FeatureConnection_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public FeatureConnection_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FeatureConnection_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public FeatureConnection_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFeatureConnectionAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FeatureConnection_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FeatureConnection_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FeatureConnection_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public FeatureConnection_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class FeatureConnection_Group_7 extends GroupToken {
	
	public FeatureConnection_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_RightParenthesisKeyword_7_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class FeatureConnection_InKeyword_7_0 extends KeywordToken  {
	
	public FeatureConnection_InKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getInKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class FeatureConnection_ModesKeyword_7_1 extends KeywordToken  {
	
	public FeatureConnection_ModesKeyword_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getModesKeyword_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_InKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class FeatureConnection_LeftParenthesisKeyword_7_2 extends KeywordToken  {
	
	public FeatureConnection_LeftParenthesisKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getLeftParenthesisKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_ModesKeyword_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class FeatureConnection_InModeAssignment_7_3 extends AssignmentToken  {
	
	public FeatureConnection_InModeAssignment_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getInModeAssignment_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_InModeAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_LeftParenthesisKeyword_7_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFeatureConnectionAccess().getInModeModeCrossReference_7_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFeatureConnectionAccess().getInModeModeCrossReference_7_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class FeatureConnection_RightParenthesisKeyword_7_4 extends KeywordToken  {
	
	public FeatureConnection_RightParenthesisKeyword_7_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getRightParenthesisKeyword_7_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_InModeAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class FeatureConnection_SemicolonKeyword_8 extends KeywordToken  {
	
	public FeatureConnection_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFeatureConnectionAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FeatureConnection_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FeatureConnection_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FeatureConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule FeatureConnection ****************/


/************ begin Rule ParameterConnection ****************
 *
 * ParameterConnection returns aadl2::ParameterConnection:
 * 	(name=ID ":" | refined=[aadl2::ParameterConnection] ":" "refined" "to") kind=ParameterConnectionKind // only regular cotnexts, no processor or self 
 * 	((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) "->" (destinationContext=[aadl2::Context] ".")?
 * 	destination=[aadl2::ConnectionEnd] ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "("
 * 	inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// (name=ID ":" | refined=[aadl2::ParameterConnection] ":" "refined" "to") kind=ParameterConnectionKind // only regular cotnexts, no processor or self 
// ((sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]) "->" (destinationContext=[aadl2::Context] ".")?
// destination=[aadl2::ConnectionEnd] ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "("
// inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class ParameterConnection_Group extends GroupToken {
	
	public ParameterConnection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParameterConnectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID ":" | refined=[aadl2::ParameterConnection] ":" "refined" "to"
protected class ParameterConnection_Alternatives_0 extends AlternativesToken {

	public ParameterConnection_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParameterConnection_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=ID ":"
protected class ParameterConnection_Group_0_0 extends GroupToken {
	
	public ParameterConnection_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_ColonKeyword_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ParameterConnection_NameAssignment_0_0_0 extends AssignmentToken  {
	
	public ParameterConnection_NameAssignment_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getNameAssignment_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParameterConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getParameterConnectionAccess().getNameIDTerminalRuleCall_0_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ParameterConnection_ColonKeyword_0_0_1 extends KeywordToken  {
	
	public ParameterConnection_ColonKeyword_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getColonKeyword_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_NameAssignment_0_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// refined=[aadl2::ParameterConnection] ":" "refined" "to"
protected class ParameterConnection_Group_0_1 extends GroupToken {
	
	public ParameterConnection_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_ToKeyword_0_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refined=[aadl2::ParameterConnection]
protected class ParameterConnection_RefinedAssignment_0_1_0 extends AssignmentToken  {
	
	public ParameterConnection_RefinedAssignment_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getRefinedAssignment_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionAccess().getRefinedParameterConnectionCrossReference_0_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterConnectionAccess().getRefinedParameterConnectionCrossReference_0_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class ParameterConnection_ColonKeyword_0_1_1 extends KeywordToken  {
	
	public ParameterConnection_ColonKeyword_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getColonKeyword_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_RefinedAssignment_0_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class ParameterConnection_RefinedKeyword_0_1_2 extends KeywordToken  {
	
	public ParameterConnection_RefinedKeyword_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getRefinedKeyword_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_ColonKeyword_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ParameterConnection_ToKeyword_0_1_3 extends KeywordToken  {
	
	public ParameterConnection_ToKeyword_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getToKeyword_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_RefinedKeyword_0_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// kind=ParameterConnectionKind
protected class ParameterConnection_KindAssignment_1 extends AssignmentToken  {
	
	public ParameterConnection_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParameterConnectionAccess().getKindParameterConnectionKindParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getParameterConnectionAccess().getKindParameterConnectionKindParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (sourceContext=[aadl2::Context] ".")? source=[aadl2::ConnectionEnd]
protected class ParameterConnection_Group_2 extends GroupToken {
	
	public ParameterConnection_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_SourceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (sourceContext=[aadl2::Context] ".")?
protected class ParameterConnection_Group_2_0 extends GroupToken {
	
	public ParameterConnection_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_FullStopKeyword_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceContext=[aadl2::Context]
protected class ParameterConnection_SourceContextAssignment_2_0_0 extends AssignmentToken  {
	
	public ParameterConnection_SourceContextAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getSourceContextAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionAccess().getSourceContextContextCrossReference_2_0_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterConnectionAccess().getSourceContextContextCrossReference_2_0_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class ParameterConnection_FullStopKeyword_2_0_1 extends KeywordToken  {
	
	public ParameterConnection_FullStopKeyword_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getFullStopKeyword_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_SourceContextAssignment_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// source=[aadl2::ConnectionEnd]
protected class ParameterConnection_SourceAssignment_2_1 extends AssignmentToken  {
	
	public ParameterConnection_SourceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getSourceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParameterConnection_KindAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionAccess().getSourceConnectionEndCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterConnectionAccess().getSourceConnectionEndCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "->"
protected class ParameterConnection_HyphenMinusGreaterThanSignKeyword_3 extends KeywordToken  {
	
	public ParameterConnection_HyphenMinusGreaterThanSignKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getHyphenMinusGreaterThanSignKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (destinationContext=[aadl2::Context] ".")?
protected class ParameterConnection_Group_4 extends GroupToken {
	
	public ParameterConnection_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_FullStopKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// destinationContext=[aadl2::Context]
protected class ParameterConnection_DestinationContextAssignment_4_0 extends AssignmentToken  {
	
	public ParameterConnection_DestinationContextAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getDestinationContextAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_HyphenMinusGreaterThanSignKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destinationContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destinationContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionAccess().getDestinationContextContextCrossReference_4_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterConnectionAccess().getDestinationContextContextCrossReference_4_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class ParameterConnection_FullStopKeyword_4_1 extends KeywordToken  {
	
	public ParameterConnection_FullStopKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getFullStopKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_DestinationContextAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// destination=[aadl2::ConnectionEnd]
protected class ParameterConnection_DestinationAssignment_5 extends AssignmentToken  {
	
	public ParameterConnection_DestinationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getDestinationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParameterConnection_HyphenMinusGreaterThanSignKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destination",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destination");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionAccess().getDestinationConnectionEndCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterConnectionAccess().getDestinationConnectionEndCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class ParameterConnection_Group_6 extends GroupToken {
	
	public ParameterConnection_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class ParameterConnection_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public ParameterConnection_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class ParameterConnection_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public ParameterConnection_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParameterConnectionAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParameterConnection_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ParameterConnection_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ParameterConnection_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public ParameterConnection_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class ParameterConnection_Group_7 extends GroupToken {
	
	public ParameterConnection_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_RightParenthesisKeyword_7_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class ParameterConnection_InKeyword_7_0 extends KeywordToken  {
	
	public ParameterConnection_InKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getInKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParameterConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class ParameterConnection_ModesKeyword_7_1 extends KeywordToken  {
	
	public ParameterConnection_ModesKeyword_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getModesKeyword_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_InKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ParameterConnection_LeftParenthesisKeyword_7_2 extends KeywordToken  {
	
	public ParameterConnection_LeftParenthesisKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getLeftParenthesisKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_ModesKeyword_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class ParameterConnection_InModeAssignment_7_3 extends AssignmentToken  {
	
	public ParameterConnection_InModeAssignment_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getInModeAssignment_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_InModeAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParameterConnection_LeftParenthesisKeyword_7_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParameterConnectionAccess().getInModeModeCrossReference_7_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParameterConnectionAccess().getInModeModeCrossReference_7_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class ParameterConnection_RightParenthesisKeyword_7_4 extends KeywordToken  {
	
	public ParameterConnection_RightParenthesisKeyword_7_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getRightParenthesisKeyword_7_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_InModeAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ParameterConnection_SemicolonKeyword_8 extends KeywordToken  {
	
	public ParameterConnection_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParameterConnectionAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParameterConnection_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParameterConnection_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ParameterConnection_DestinationAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule ParameterConnection ****************/









/************ begin Rule Connection ****************
 *
 * Connection returns aadl2::Connection:
 * 	PortConnection;
 *
 **/

// PortConnection
protected class Connection_PortConnectionParserRuleCall extends RuleCallToken {
	
	public Connection_PortConnectionParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getConnectionAccess().getPortConnectionParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PortConnection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPortConnectionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(PortConnection_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule Connection ****************/





/************ begin Rule FlowSpecification ****************
 *
 * FlowSpecification returns aadl2::FlowSpecification:
 * 	(FlowSourceSpec | FlowSinkSpec | FlowPathSpec | FlowSourceSpecRefinement | FlowSinkSpecRefinement |
 * 	FlowPathSpecRefinement) ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "("
 * 	inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// (FlowSourceSpec | FlowSinkSpec | FlowPathSpec | FlowSourceSpecRefinement | FlowSinkSpecRefinement |
// FlowPathSpecRefinement) ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "("
// inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class FlowSpecification_Group extends GroupToken {
	
	public FlowSpecification_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowPathSpecRefinementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// FlowSourceSpec | FlowSinkSpec | FlowPathSpec | FlowSourceSpecRefinement | FlowSinkSpecRefinement |
// FlowPathSpecRefinement
protected class FlowSpecification_Alternatives_0 extends AlternativesToken {

	public FlowSpecification_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_FlowSourceSpecParserRuleCall_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSpecification_FlowSinkSpecParserRuleCall_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FlowSpecification_FlowPathSpecParserRuleCall_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new FlowSpecification_FlowSourceSpecRefinementParserRuleCall_0_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new FlowSpecification_FlowSinkSpecRefinementParserRuleCall_0_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new FlowSpecification_FlowPathSpecRefinementParserRuleCall_0_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// FlowSourceSpec
protected class FlowSpecification_FlowSourceSpecParserRuleCall_0_0 extends RuleCallToken {
	
	public FlowSpecification_FlowSourceSpecParserRuleCall_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getFlowSourceSpecParserRuleCall_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowSourceSpec_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowSinkSpec
protected class FlowSpecification_FlowSinkSpecParserRuleCall_0_1 extends RuleCallToken {
	
	public FlowSpecification_FlowSinkSpecParserRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getFlowSinkSpecParserRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowSinkSpec_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowPathSpec
protected class FlowSpecification_FlowPathSpecParserRuleCall_0_2 extends RuleCallToken {
	
	public FlowSpecification_FlowPathSpecParserRuleCall_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getFlowPathSpecParserRuleCall_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowPathSpec_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowSourceSpecRefinement
protected class FlowSpecification_FlowSourceSpecRefinementParserRuleCall_0_3 extends RuleCallToken {
	
	public FlowSpecification_FlowSourceSpecRefinementParserRuleCall_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getFlowSourceSpecRefinementParserRuleCall_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowSourceSpecRefinement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowSinkSpecRefinement
protected class FlowSpecification_FlowSinkSpecRefinementParserRuleCall_0_4 extends RuleCallToken {
	
	public FlowSpecification_FlowSinkSpecRefinementParserRuleCall_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getFlowSinkSpecRefinementParserRuleCall_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowSinkSpecRefinement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowPathSpecRefinement
protected class FlowSpecification_FlowPathSpecRefinementParserRuleCall_0_5 extends RuleCallToken {
	
	public FlowSpecification_FlowPathSpecRefinementParserRuleCall_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getFlowPathSpecRefinementParserRuleCall_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowPathSpecRefinement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowSpecification_Group_1 extends GroupToken {
	
	public FlowSpecification_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_RightCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FlowSpecification_LeftCurlyBracketKeyword_1_0 extends KeywordToken  {
	
	public FlowSpecification_LeftCurlyBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getLeftCurlyBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FlowSpecification_OwnedPropertyAssociationAssignment_1_1 extends AssignmentToken  {
	
	public FlowSpecification_OwnedPropertyAssociationAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getOwnedPropertyAssociationAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowSpecificationAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowSpecification_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FlowSpecification_LeftCurlyBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FlowSpecification_RightCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public FlowSpecification_RightCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getRightCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class FlowSpecification_Group_2 extends GroupToken {
	
	public FlowSpecification_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_RightParenthesisKeyword_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class FlowSpecification_InKeyword_2_0 extends KeywordToken  {
	
	public FlowSpecification_InKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getInKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSpecification_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class FlowSpecification_ModesKeyword_2_1 extends KeywordToken  {
	
	public FlowSpecification_ModesKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getModesKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_InKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class FlowSpecification_LeftParenthesisKeyword_2_2 extends KeywordToken  {
	
	public FlowSpecification_LeftParenthesisKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getLeftParenthesisKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_ModesKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class FlowSpecification_InModeAssignment_2_3 extends AssignmentToken  {
	
	public FlowSpecification_InModeAssignment_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getInModeAssignment_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_InModeAssignment_2_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSpecification_LeftParenthesisKeyword_2_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSpecificationAccess().getInModeModeCrossReference_2_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSpecificationAccess().getInModeModeCrossReference_2_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class FlowSpecification_RightParenthesisKeyword_2_4 extends KeywordToken  {
	
	public FlowSpecification_RightParenthesisKeyword_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getRightParenthesisKeyword_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_InModeAssignment_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class FlowSpecification_SemicolonKeyword_3 extends KeywordToken  {
	
	public FlowSpecification_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSpecificationAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSpecification_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSpecification_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FlowSpecification_Alternatives_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule FlowSpecification ****************/


/************ begin Rule FlowSourceSpec ****************
 *
 * FlowSourceSpec returns aadl2::FlowSpecification:
 * 	name=ID ":" "flow" kind=FlowSource (outContext=[aadl2::Context] ".")? outFeature=[aadl2::Feature];
 *
 **/

// name=ID ":" "flow" kind=FlowSource (outContext=[aadl2::Context] ".")? outFeature=[aadl2::Feature]
protected class FlowSourceSpec_Group extends GroupToken {
	
	public FlowSourceSpec_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_OutFeatureAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowSourceSpecRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class FlowSourceSpec_NameAssignment_0 extends AssignmentToken  {
	
	public FlowSourceSpec_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSourceSpecAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFlowSourceSpecAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FlowSourceSpec_ColonKeyword_1 extends KeywordToken  {
	
	public FlowSourceSpec_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowSourceSpec_FlowKeyword_2 extends KeywordToken  {
	
	public FlowSourceSpec_FlowKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getFlowKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowSource
protected class FlowSourceSpec_KindAssignment_3 extends AssignmentToken  {
	
	public FlowSourceSpec_KindAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getKindAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_FlowKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSourceSpecAccess().getKindFlowSourceParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowSourceSpecAccess().getKindFlowSourceParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// (outContext=[aadl2::Context] ".")?
protected class FlowSourceSpec_Group_4 extends GroupToken {
	
	public FlowSourceSpec_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_FullStopKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// outContext=[aadl2::Context]
protected class FlowSourceSpec_OutContextAssignment_4_0 extends AssignmentToken  {
	
	public FlowSourceSpec_OutContextAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getOutContextAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_KindAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("outContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("outContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSourceSpecAccess().getOutContextContextCrossReference_4_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSourceSpecAccess().getOutContextContextCrossReference_4_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FlowSourceSpec_FullStopKeyword_4_1 extends KeywordToken  {
	
	public FlowSourceSpec_FullStopKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getFullStopKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_OutContextAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// outFeature=[aadl2::Feature]
protected class FlowSourceSpec_OutFeatureAssignment_5 extends AssignmentToken  {
	
	public FlowSourceSpec_OutFeatureAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecAccess().getOutFeatureAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpec_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSourceSpec_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("outFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("outFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSourceSpecAccess().getOutFeatureFeatureCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSourceSpecAccess().getOutFeatureFeatureCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FlowSourceSpec ****************/


/************ begin Rule FlowSinkSpec ****************
 *
 * FlowSinkSpec returns aadl2::FlowSpecification:
 * 	name=ID ":" "flow" kind=FlowSink (inContext=[aadl2::Context] ".")? inFeature=[aadl2::Feature];
 *
 **/

// name=ID ":" "flow" kind=FlowSink (inContext=[aadl2::Context] ".")? inFeature=[aadl2::Feature]
protected class FlowSinkSpec_Group extends GroupToken {
	
	public FlowSinkSpec_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_InFeatureAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowSinkSpecRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class FlowSinkSpec_NameAssignment_0 extends AssignmentToken  {
	
	public FlowSinkSpec_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSinkSpecAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFlowSinkSpecAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FlowSinkSpec_ColonKeyword_1 extends KeywordToken  {
	
	public FlowSinkSpec_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowSinkSpec_FlowKeyword_2 extends KeywordToken  {
	
	public FlowSinkSpec_FlowKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getFlowKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowSink
protected class FlowSinkSpec_KindAssignment_3 extends AssignmentToken  {
	
	public FlowSinkSpec_KindAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getKindAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_FlowKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSinkSpecAccess().getKindFlowSinkParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowSinkSpecAccess().getKindFlowSinkParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// (inContext=[aadl2::Context] ".")?
protected class FlowSinkSpec_Group_4 extends GroupToken {
	
	public FlowSinkSpec_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_FullStopKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inContext=[aadl2::Context]
protected class FlowSinkSpec_InContextAssignment_4_0 extends AssignmentToken  {
	
	public FlowSinkSpec_InContextAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getInContextAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_KindAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSinkSpecAccess().getInContextContextCrossReference_4_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSinkSpecAccess().getInContextContextCrossReference_4_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FlowSinkSpec_FullStopKeyword_4_1 extends KeywordToken  {
	
	public FlowSinkSpec_FullStopKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getFullStopKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_InContextAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// inFeature=[aadl2::Feature]
protected class FlowSinkSpec_InFeatureAssignment_5 extends AssignmentToken  {
	
	public FlowSinkSpec_InFeatureAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecAccess().getInFeatureAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpec_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSinkSpec_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSinkSpecAccess().getInFeatureFeatureCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSinkSpecAccess().getInFeatureFeatureCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FlowSinkSpec ****************/


/************ begin Rule FlowPathSpec ****************
 *
 * FlowPathSpec returns aadl2::FlowSpecification:
 * 	name=ID ":" "flow" kind=FlowPath (inContext=[aadl2::Context] ".")? inFeature=[aadl2::Feature] "->"
 * 	(outContext=[aadl2::Context] ".")? outFeature=[aadl2::Feature];
 *
 **/

// name=ID ":" "flow" kind=FlowPath (inContext=[aadl2::Context] ".")? inFeature=[aadl2::Feature] "->"
// (outContext=[aadl2::Context] ".")? outFeature=[aadl2::Feature]
protected class FlowPathSpec_Group extends GroupToken {
	
	public FlowPathSpec_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_OutFeatureAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowPathSpecRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class FlowPathSpec_NameAssignment_0 extends AssignmentToken  {
	
	public FlowPathSpec_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowPathSpecAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFlowPathSpecAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class FlowPathSpec_ColonKeyword_1 extends KeywordToken  {
	
	public FlowPathSpec_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowPathSpec_FlowKeyword_2 extends KeywordToken  {
	
	public FlowPathSpec_FlowKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getFlowKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowPath
protected class FlowPathSpec_KindAssignment_3 extends AssignmentToken  {
	
	public FlowPathSpec_KindAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getKindAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_FlowKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowPathSpecAccess().getKindFlowPathParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowPathSpecAccess().getKindFlowPathParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// (inContext=[aadl2::Context] ".")?
protected class FlowPathSpec_Group_4 extends GroupToken {
	
	public FlowPathSpec_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_FullStopKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inContext=[aadl2::Context]
protected class FlowPathSpec_InContextAssignment_4_0 extends AssignmentToken  {
	
	public FlowPathSpec_InContextAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getInContextAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_KindAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathSpecAccess().getInContextContextCrossReference_4_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathSpecAccess().getInContextContextCrossReference_4_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FlowPathSpec_FullStopKeyword_4_1 extends KeywordToken  {
	
	public FlowPathSpec_FullStopKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getFullStopKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_InContextAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// inFeature=[aadl2::Feature]
protected class FlowPathSpec_InFeatureAssignment_5 extends AssignmentToken  {
	
	public FlowPathSpec_InFeatureAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getInFeatureAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowPathSpec_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathSpecAccess().getInFeatureFeatureCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathSpecAccess().getInFeatureFeatureCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "->"
protected class FlowPathSpec_HyphenMinusGreaterThanSignKeyword_6 extends KeywordToken  {
	
	public FlowPathSpec_HyphenMinusGreaterThanSignKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getHyphenMinusGreaterThanSignKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_InFeatureAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (outContext=[aadl2::Context] ".")?
protected class FlowPathSpec_Group_7 extends GroupToken {
	
	public FlowPathSpec_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_FullStopKeyword_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// outContext=[aadl2::Context]
protected class FlowPathSpec_OutContextAssignment_7_0 extends AssignmentToken  {
	
	public FlowPathSpec_OutContextAssignment_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getOutContextAssignment_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_HyphenMinusGreaterThanSignKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("outContext",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("outContext");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathSpecAccess().getOutContextContextCrossReference_7_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathSpecAccess().getOutContextContextCrossReference_7_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class FlowPathSpec_FullStopKeyword_7_1 extends KeywordToken  {
	
	public FlowPathSpec_FullStopKeyword_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getFullStopKeyword_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_OutContextAssignment_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// outFeature=[aadl2::Feature]
protected class FlowPathSpec_OutFeatureAssignment_8 extends AssignmentToken  {
	
	public FlowPathSpec_OutFeatureAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecAccess().getOutFeatureAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpec_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowPathSpec_HyphenMinusGreaterThanSignKeyword_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("outFeature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("outFeature");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathSpecAccess().getOutFeatureFeatureCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathSpecAccess().getOutFeatureFeatureCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FlowPathSpec ****************/


/************ begin Rule FlowSourceSpecRefinement ****************
 *
 * FlowSourceSpecRefinement returns aadl2::FlowSpecification:
 * 	refined=[aadl2::FlowSpecification] ":" "refined" "to" "flow" kind=FlowSource ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")?;
 *
 **/

// refined=[aadl2::FlowSpecification] ":" "refined" "to" "flow" kind=FlowSource ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowSourceSpecRefinement_Group extends GroupToken {
	
	public FlowSourceSpecRefinement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSourceSpecRefinement_KindAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowSourceSpecRefinementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// refined=[aadl2::FlowSpecification]
protected class FlowSourceSpecRefinement_RefinedAssignment_0 extends AssignmentToken  {
	
	public FlowSourceSpecRefinement_RefinedAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getRefinedAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSourceSpecRefinementAccess().getRefinedFlowSpecificationCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSourceSpecRefinementAccess().getRefinedFlowSpecificationCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FlowSourceSpecRefinement_ColonKeyword_1 extends KeywordToken  {
	
	public FlowSourceSpecRefinement_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_RefinedAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FlowSourceSpecRefinement_RefinedKeyword_2 extends KeywordToken  {
	
	public FlowSourceSpecRefinement_RefinedKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getRefinedKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FlowSourceSpecRefinement_ToKeyword_3 extends KeywordToken  {
	
	public FlowSourceSpecRefinement_ToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_RefinedKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowSourceSpecRefinement_FlowKeyword_4 extends KeywordToken  {
	
	public FlowSourceSpecRefinement_FlowKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getFlowKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_ToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowSource
protected class FlowSourceSpecRefinement_KindAssignment_5 extends AssignmentToken  {
	
	public FlowSourceSpecRefinement_KindAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getKindAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_FlowKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSourceSpecRefinementAccess().getKindFlowSourceParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowSourceSpecRefinementAccess().getKindFlowSourceParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowSourceSpecRefinement_Group_6 extends GroupToken {
	
	public FlowSourceSpecRefinement_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FlowSourceSpecRefinement_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public FlowSourceSpecRefinement_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_KindAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FlowSourceSpecRefinement_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public FlowSourceSpecRefinement_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowSourceSpecRefinementAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FlowSourceSpecRefinement_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FlowSourceSpecRefinement_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public FlowSourceSpecRefinement_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceSpecRefinementAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceSpecRefinement_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule FlowSourceSpecRefinement ****************/


/************ begin Rule FlowSinkSpecRefinement ****************
 *
 * FlowSinkSpecRefinement returns aadl2::FlowSpecification:
 * 	refined=[aadl2::FlowSpecification] ":" "refined" "to" "flow" kind=FlowSink ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")?;
 *
 **/

// refined=[aadl2::FlowSpecification] ":" "refined" "to" "flow" kind=FlowSink ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowSinkSpecRefinement_Group extends GroupToken {
	
	public FlowSinkSpecRefinement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSinkSpecRefinement_KindAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowSinkSpecRefinementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// refined=[aadl2::FlowSpecification]
protected class FlowSinkSpecRefinement_RefinedAssignment_0 extends AssignmentToken  {
	
	public FlowSinkSpecRefinement_RefinedAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getRefinedAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSinkSpecRefinementAccess().getRefinedFlowSpecificationCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSinkSpecRefinementAccess().getRefinedFlowSpecificationCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FlowSinkSpecRefinement_ColonKeyword_1 extends KeywordToken  {
	
	public FlowSinkSpecRefinement_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_RefinedAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FlowSinkSpecRefinement_RefinedKeyword_2 extends KeywordToken  {
	
	public FlowSinkSpecRefinement_RefinedKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getRefinedKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FlowSinkSpecRefinement_ToKeyword_3 extends KeywordToken  {
	
	public FlowSinkSpecRefinement_ToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_RefinedKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowSinkSpecRefinement_FlowKeyword_4 extends KeywordToken  {
	
	public FlowSinkSpecRefinement_FlowKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getFlowKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_ToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowSink
protected class FlowSinkSpecRefinement_KindAssignment_5 extends AssignmentToken  {
	
	public FlowSinkSpecRefinement_KindAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getKindAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_FlowKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSinkSpecRefinementAccess().getKindFlowSinkParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowSinkSpecRefinementAccess().getKindFlowSinkParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowSinkSpecRefinement_Group_6 extends GroupToken {
	
	public FlowSinkSpecRefinement_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FlowSinkSpecRefinement_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public FlowSinkSpecRefinement_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_KindAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FlowSinkSpecRefinement_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public FlowSinkSpecRefinement_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowSinkSpecRefinementAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FlowSinkSpecRefinement_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FlowSinkSpecRefinement_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public FlowSinkSpecRefinement_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkSpecRefinementAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkSpecRefinement_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule FlowSinkSpecRefinement ****************/


/************ begin Rule FlowPathSpecRefinement ****************
 *
 * FlowPathSpecRefinement returns aadl2::FlowSpecification:
 * 	refined=[aadl2::FlowSpecification] ":" "refined" "to" "flow" kind=FlowPath ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")?;
 *
 **/

// refined=[aadl2::FlowSpecification] ":" "refined" "to" "flow" kind=FlowPath ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowPathSpecRefinement_Group extends GroupToken {
	
	public FlowPathSpecRefinement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowPathSpecRefinement_KindAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowPathSpecRefinementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// refined=[aadl2::FlowSpecification]
protected class FlowPathSpecRefinement_RefinedAssignment_0 extends AssignmentToken  {
	
	public FlowPathSpecRefinement_RefinedAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getRefinedAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathSpecRefinementAccess().getRefinedFlowSpecificationCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathSpecRefinementAccess().getRefinedFlowSpecificationCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FlowPathSpecRefinement_ColonKeyword_1 extends KeywordToken  {
	
	public FlowPathSpecRefinement_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_RefinedAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class FlowPathSpecRefinement_RefinedKeyword_2 extends KeywordToken  {
	
	public FlowPathSpecRefinement_RefinedKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getRefinedKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class FlowPathSpecRefinement_ToKeyword_3 extends KeywordToken  {
	
	public FlowPathSpecRefinement_ToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_RefinedKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowPathSpecRefinement_FlowKeyword_4 extends KeywordToken  {
	
	public FlowPathSpecRefinement_FlowKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getFlowKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_ToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowPath
protected class FlowPathSpecRefinement_KindAssignment_5 extends AssignmentToken  {
	
	public FlowPathSpecRefinement_KindAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getKindAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_FlowKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowPathSpecRefinementAccess().getKindFlowPathParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowPathSpecRefinementAccess().getKindFlowPathParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowPathSpecRefinement_Group_6 extends GroupToken {
	
	public FlowPathSpecRefinement_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FlowPathSpecRefinement_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public FlowPathSpecRefinement_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_KindAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FlowPathSpecRefinement_OwnedPropertyAssociationAssignment_6_1 extends AssignmentToken  {
	
	public FlowPathSpecRefinement_OwnedPropertyAssociationAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getOwnedPropertyAssociationAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowPathSpecRefinementAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowPathSpecRefinement_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FlowPathSpecRefinement_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FlowPathSpecRefinement_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public FlowPathSpecRefinement_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathSpecRefinementAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathSpecRefinement_OwnedPropertyAssociationAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule FlowPathSpecRefinement ****************/


/************ begin Rule FlowImplementation ****************
 *
 * FlowImplementation returns aadl2::FlowImplementation:
 * 	(FlowSourceImpl | FlowSinkImpl | FlowPathImpl) ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes"
 * 	"(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// (FlowSourceImpl | FlowSinkImpl | FlowPathImpl) ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes"
// "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class FlowImplementation_Group extends GroupToken {
	
	public FlowImplementation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowPathImplRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// FlowSourceImpl | FlowSinkImpl | FlowPathImpl
protected class FlowImplementation_Alternatives_0 extends AlternativesToken {

	public FlowImplementation_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_FlowSourceImplParserRuleCall_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowImplementation_FlowSinkImplParserRuleCall_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FlowImplementation_FlowPathImplParserRuleCall_0_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// FlowSourceImpl
protected class FlowImplementation_FlowSourceImplParserRuleCall_0_0 extends RuleCallToken {
	
	public FlowImplementation_FlowSourceImplParserRuleCall_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getFlowSourceImplParserRuleCall_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowSourceImpl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowSinkImpl
protected class FlowImplementation_FlowSinkImplParserRuleCall_0_1 extends RuleCallToken {
	
	public FlowImplementation_FlowSinkImplParserRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getFlowSinkImplParserRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowSinkImpl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FlowPathImpl
protected class FlowImplementation_FlowPathImplParserRuleCall_0_2 extends RuleCallToken {
	
	public FlowImplementation_FlowPathImplParserRuleCall_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getFlowPathImplParserRuleCall_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FlowPathImpl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class FlowImplementation_Group_1 extends GroupToken {
	
	public FlowImplementation_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_RightCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class FlowImplementation_LeftCurlyBracketKeyword_1_0 extends KeywordToken  {
	
	public FlowImplementation_LeftCurlyBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getLeftCurlyBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class FlowImplementation_OwnedPropertyAssociationAssignment_1_1 extends AssignmentToken  {
	
	public FlowImplementation_OwnedPropertyAssociationAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getOwnedPropertyAssociationAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowImplementationAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowImplementation_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FlowImplementation_LeftCurlyBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class FlowImplementation_RightCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public FlowImplementation_RightCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getRightCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_OwnedPropertyAssociationAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class FlowImplementation_Group_2 extends GroupToken {
	
	public FlowImplementation_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_RightParenthesisKeyword_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class FlowImplementation_InKeyword_2_0 extends KeywordToken  {
	
	public FlowImplementation_InKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getInKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowImplementation_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class FlowImplementation_ModesKeyword_2_1 extends KeywordToken  {
	
	public FlowImplementation_ModesKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getModesKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_InKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class FlowImplementation_LeftParenthesisKeyword_2_2 extends KeywordToken  {
	
	public FlowImplementation_LeftParenthesisKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getLeftParenthesisKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_ModesKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class FlowImplementation_InModeAssignment_2_3 extends AssignmentToken  {
	
	public FlowImplementation_InModeAssignment_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getInModeAssignment_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_InModeAssignment_2_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowImplementation_LeftParenthesisKeyword_2_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowImplementationAccess().getInModeModeCrossReference_2_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowImplementationAccess().getInModeModeCrossReference_2_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class FlowImplementation_RightParenthesisKeyword_2_4 extends KeywordToken  {
	
	public FlowImplementation_RightParenthesisKeyword_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getRightParenthesisKeyword_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_InModeAssignment_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class FlowImplementation_SemicolonKeyword_3 extends KeywordToken  {
	
	public FlowImplementation_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowImplementationAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowImplementation_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowImplementation_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FlowImplementation_Alternatives_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule FlowImplementation ****************/


/************ begin Rule FlowSourceImpl ****************
 *
 * //	(outContext=[aadl2::Context|ID] '.' )? outFeature=[aadl2::Feature|ID]
 * FlowSourceImpl returns aadl2::FlowImplementation:
 * 	specification= //name=ID 
 * 	[aadl2::FlowSpecification] ":" "flow" kind=FlowSource (ownedSubcomponentFlow+=SubcomponentFlow "->"
 * 	flowElement+=[aadl2::Connection] "->")*;
 *
 **/

// specification= //name=ID 
// [aadl2::FlowSpecification] ":" "flow" kind=FlowSource (ownedSubcomponentFlow+=SubcomponentFlow "->"
// flowElement+=[aadl2::Connection] "->")*
protected class FlowSourceImpl_Group extends GroupToken {
	
	public FlowSourceImpl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSourceImpl_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowSourceImplRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// specification= //name=ID 
// [aadl2::FlowSpecification]
protected class FlowSourceImpl_SpecificationAssignment_0 extends AssignmentToken  {
	
	public FlowSourceImpl_SpecificationAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getSpecificationAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("specification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("specification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSourceImplAccess().getSpecificationFlowSpecificationCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSourceImplAccess().getSpecificationFlowSpecificationCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FlowSourceImpl_ColonKeyword_1 extends KeywordToken  {
	
	public FlowSourceImpl_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_SpecificationAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowSourceImpl_FlowKeyword_2 extends KeywordToken  {
	
	public FlowSourceImpl_FlowKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getFlowKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowSource
protected class FlowSourceImpl_KindAssignment_3 extends AssignmentToken  {
	
	public FlowSourceImpl_KindAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getKindAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_FlowKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSourceImplAccess().getKindFlowSourceParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowSourceImplAccess().getKindFlowSourceParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// (ownedSubcomponentFlow+=SubcomponentFlow "->" flowElement+=[aadl2::Connection] "->")*
protected class FlowSourceImpl_Group_4 extends GroupToken {
	
	public FlowSourceImpl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_HyphenMinusGreaterThanSignKeyword_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedSubcomponentFlow+=SubcomponentFlow
protected class FlowSourceImpl_OwnedSubcomponentFlowAssignment_4_0 extends AssignmentToken  {
	
	public FlowSourceImpl_OwnedSubcomponentFlowAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getOwnedSubcomponentFlowAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubcomponentFlow",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubcomponentFlow");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowSourceImplAccess().getOwnedSubcomponentFlowSubcomponentFlowParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowSourceImpl_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new FlowSourceImpl_KindAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "->"
protected class FlowSourceImpl_HyphenMinusGreaterThanSignKeyword_4_1 extends KeywordToken  {
	
	public FlowSourceImpl_HyphenMinusGreaterThanSignKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getHyphenMinusGreaterThanSignKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_OwnedSubcomponentFlowAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// flowElement+=[aadl2::Connection]
protected class FlowSourceImpl_FlowElementAssignment_4_2 extends AssignmentToken  {
	
	public FlowSourceImpl_FlowElementAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getFlowElementAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_HyphenMinusGreaterThanSignKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flowElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flowElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSourceImplAccess().getFlowElementConnectionCrossReference_4_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSourceImplAccess().getFlowElementConnectionCrossReference_4_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "->"
protected class FlowSourceImpl_HyphenMinusGreaterThanSignKeyword_4_3 extends KeywordToken  {
	
	public FlowSourceImpl_HyphenMinusGreaterThanSignKeyword_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSourceImplAccess().getHyphenMinusGreaterThanSignKeyword_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSourceImpl_FlowElementAssignment_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule FlowSourceImpl ****************/


/************ begin Rule FlowSinkImpl ****************
 *
 * FlowSinkImpl returns aadl2::FlowImplementation:
 * 	specification= //name=ID 
 * 	[aadl2::FlowSpecification] ":" "flow" kind=FlowSink //	(inContext=[aadl2::Context|ID] '.' )? inFeature=[aadl2::Feature|ID]
 * 	("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)*;
 *
 **/

// specification= //name=ID 
// [aadl2::FlowSpecification] ":" "flow" kind=FlowSink //	(inContext=[aadl2::Context|ID] '.' )? inFeature=[aadl2::Feature|ID]
// ("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)*
protected class FlowSinkImpl_Group extends GroupToken {
	
	public FlowSinkImpl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSinkImpl_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowSinkImplRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// specification= //name=ID 
// [aadl2::FlowSpecification]
protected class FlowSinkImpl_SpecificationAssignment_0 extends AssignmentToken  {
	
	public FlowSinkImpl_SpecificationAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getSpecificationAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("specification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("specification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSinkImplAccess().getSpecificationFlowSpecificationCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSinkImplAccess().getSpecificationFlowSpecificationCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FlowSinkImpl_ColonKeyword_1 extends KeywordToken  {
	
	public FlowSinkImpl_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_SpecificationAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowSinkImpl_FlowKeyword_2 extends KeywordToken  {
	
	public FlowSinkImpl_FlowKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getFlowKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowSink
protected class FlowSinkImpl_KindAssignment_3 extends AssignmentToken  {
	
	public FlowSinkImpl_KindAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getKindAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_FlowKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowSinkImplAccess().getKindFlowSinkParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowSinkImplAccess().getKindFlowSinkParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// ("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)*
protected class FlowSinkImpl_Group_4 extends GroupToken {
	
	public FlowSinkImpl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_OwnedSubcomponentFlowAssignment_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class FlowSinkImpl_HyphenMinusGreaterThanSignKeyword_4_0 extends KeywordToken  {
	
	public FlowSinkImpl_HyphenMinusGreaterThanSignKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getHyphenMinusGreaterThanSignKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowSinkImpl_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// flowElement+=[aadl2::Connection]
protected class FlowSinkImpl_FlowElementAssignment_4_1 extends AssignmentToken  {
	
	public FlowSinkImpl_FlowElementAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getFlowElementAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_HyphenMinusGreaterThanSignKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flowElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flowElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowSinkImplAccess().getFlowElementConnectionCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowSinkImplAccess().getFlowElementConnectionCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "->"
protected class FlowSinkImpl_HyphenMinusGreaterThanSignKeyword_4_2 extends KeywordToken  {
	
	public FlowSinkImpl_HyphenMinusGreaterThanSignKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getHyphenMinusGreaterThanSignKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowSinkImpl_FlowElementAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedSubcomponentFlow+=SubcomponentFlow
protected class FlowSinkImpl_OwnedSubcomponentFlowAssignment_4_3 extends AssignmentToken  {
	
	public FlowSinkImpl_OwnedSubcomponentFlowAssignment_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowSinkImplAccess().getOwnedSubcomponentFlowAssignment_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubcomponentFlow",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubcomponentFlow");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowSinkImplAccess().getOwnedSubcomponentFlowSubcomponentFlowParserRuleCall_4_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowSinkImpl_HyphenMinusGreaterThanSignKeyword_4_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule FlowSinkImpl ****************/


/************ begin Rule FlowPathImpl ****************
 *
 * //	'->' (outContext=[aadl2::Context|ID] '.' )? outFeature=[aadl2::Feature|ID] 
 * FlowPathImpl returns aadl2::FlowImplementation:
 * 	specification= //name=ID 
 * 	[aadl2::FlowSpecification] ":" "flow" kind=FlowPath //	(inContext=[aadl2::Context|ID] '.' )? inFeature=[aadl2::Feature|ID]
 * 	(("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)* "->"
 * 	flowElement+=[aadl2::Connection])?;
 *
 **/

// specification= //name=ID 
// [aadl2::FlowSpecification] ":" "flow" kind=FlowPath //	(inContext=[aadl2::Context|ID] '.' )? inFeature=[aadl2::Feature|ID]
// (("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)* "->"
// flowElement+=[aadl2::Connection])?
protected class FlowPathImpl_Group extends GroupToken {
	
	public FlowPathImpl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowPathImpl_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFlowPathImplRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// specification= //name=ID 
// [aadl2::FlowSpecification]
protected class FlowPathImpl_SpecificationAssignment_0 extends AssignmentToken  {
	
	public FlowPathImpl_SpecificationAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getSpecificationAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("specification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("specification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathImplAccess().getSpecificationFlowSpecificationCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathImplAccess().getSpecificationFlowSpecificationCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class FlowPathImpl_ColonKeyword_1 extends KeywordToken  {
	
	public FlowPathImpl_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_SpecificationAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class FlowPathImpl_FlowKeyword_2 extends KeywordToken  {
	
	public FlowPathImpl_FlowKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getFlowKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// kind=FlowPath
protected class FlowPathImpl_KindAssignment_3 extends AssignmentToken  {
	
	public FlowPathImpl_KindAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getKindAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_FlowKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFlowPathImplAccess().getKindFlowPathParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFlowPathImplAccess().getKindFlowPathParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// (("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)* "->"
// flowElement+=[aadl2::Connection])?
protected class FlowPathImpl_Group_4 extends GroupToken {
	
	public FlowPathImpl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_FlowElementAssignment_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)*
protected class FlowPathImpl_Group_4_0 extends GroupToken {
	
	public FlowPathImpl_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_OwnedSubcomponentFlowAssignment_4_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_0_0 extends KeywordToken  {
	
	public FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getHyphenMinusGreaterThanSignKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowPathImpl_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// flowElement+=[aadl2::Connection]
protected class FlowPathImpl_FlowElementAssignment_4_0_1 extends AssignmentToken  {
	
	public FlowPathImpl_FlowElementAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getFlowElementAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flowElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flowElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathImplAccess().getFlowElementConnectionCrossReference_4_0_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathImplAccess().getFlowElementConnectionCrossReference_4_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "->"
protected class FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_0_2 extends KeywordToken  {
	
	public FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getHyphenMinusGreaterThanSignKeyword_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_FlowElementAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedSubcomponentFlow+=SubcomponentFlow
protected class FlowPathImpl_OwnedSubcomponentFlowAssignment_4_0_3 extends AssignmentToken  {
	
	public FlowPathImpl_OwnedSubcomponentFlowAssignment_4_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getOwnedSubcomponentFlowAssignment_4_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubcomponentFlow",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubcomponentFlow");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFlowPathImplAccess().getOwnedSubcomponentFlowSubcomponentFlowParserRuleCall_4_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_0_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "->"
protected class FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_1 extends KeywordToken  {
	
	public FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getHyphenMinusGreaterThanSignKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FlowPathImpl_KindAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// flowElement+=[aadl2::Connection]
protected class FlowPathImpl_FlowElementAssignment_4_2 extends AssignmentToken  {
	
	public FlowPathImpl_FlowElementAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFlowPathImplAccess().getFlowElementAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FlowPathImpl_HyphenMinusGreaterThanSignKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flowElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flowElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFlowPathImplAccess().getFlowElementConnectionCrossReference_4_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFlowPathImplAccess().getFlowElementConnectionCrossReference_4_2_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule FlowPathImpl ****************/


/************ begin Rule EndToEndFlow ****************
 *
 * EndToEndFlow returns aadl2::EndToEndFlow:
 * 	name=ID ":" "end" "to" "end" "flow" ownedSubcomponentFlow+=SubcomponentFlow ("->" flowElement+=[aadl2::Connection]
 * 	"->" ownedSubcomponentFlow+=SubcomponentFlow)* ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes"
 * 	"(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * 	";";
 *
 **/

// name=ID ":" "end" "to" "end" "flow" ownedSubcomponentFlow+=SubcomponentFlow ("->" flowElement+=[aadl2::Connection] "->"
// ownedSubcomponentFlow+=SubcomponentFlow)* ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "("
// inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
// ";"
protected class EndToEndFlow_Group extends GroupToken {
	
	public EndToEndFlow_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_SemicolonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEndToEndFlowRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class EndToEndFlow_NameAssignment_0 extends AssignmentToken  {
	
	public EndToEndFlow_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEndToEndFlowAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEndToEndFlowAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EndToEndFlow_ColonKeyword_1 extends KeywordToken  {
	
	public EndToEndFlow_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class EndToEndFlow_EndKeyword_2 extends KeywordToken  {
	
	public EndToEndFlow_EndKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getEndKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class EndToEndFlow_ToKeyword_3 extends KeywordToken  {
	
	public EndToEndFlow_ToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_EndKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class EndToEndFlow_EndKeyword_4 extends KeywordToken  {
	
	public EndToEndFlow_EndKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getEndKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_ToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class EndToEndFlow_FlowKeyword_5 extends KeywordToken  {
	
	public EndToEndFlow_FlowKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getFlowKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_EndKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedSubcomponentFlow+=SubcomponentFlow
protected class EndToEndFlow_OwnedSubcomponentFlowAssignment_6 extends AssignmentToken  {
	
	public EndToEndFlow_OwnedSubcomponentFlowAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getOwnedSubcomponentFlowAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubcomponentFlow",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubcomponentFlow");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEndToEndFlowAccess().getOwnedSubcomponentFlowSubcomponentFlowParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EndToEndFlow_FlowKeyword_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("->" flowElement+=[aadl2::Connection] "->" ownedSubcomponentFlow+=SubcomponentFlow)*
protected class EndToEndFlow_Group_7 extends GroupToken {
	
	public EndToEndFlow_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_OwnedSubcomponentFlowAssignment_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class EndToEndFlow_HyphenMinusGreaterThanSignKeyword_7_0 extends KeywordToken  {
	
	public EndToEndFlow_HyphenMinusGreaterThanSignKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getHyphenMinusGreaterThanSignKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlow_OwnedSubcomponentFlowAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// flowElement+=[aadl2::Connection]
protected class EndToEndFlow_FlowElementAssignment_7_1 extends AssignmentToken  {
	
	public EndToEndFlow_FlowElementAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getFlowElementAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_HyphenMinusGreaterThanSignKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flowElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flowElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEndToEndFlowAccess().getFlowElementConnectionCrossReference_7_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEndToEndFlowAccess().getFlowElementConnectionCrossReference_7_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "->"
protected class EndToEndFlow_HyphenMinusGreaterThanSignKeyword_7_2 extends KeywordToken  {
	
	public EndToEndFlow_HyphenMinusGreaterThanSignKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getHyphenMinusGreaterThanSignKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_FlowElementAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedSubcomponentFlow+=SubcomponentFlow
protected class EndToEndFlow_OwnedSubcomponentFlowAssignment_7_3 extends AssignmentToken  {
	
	public EndToEndFlow_OwnedSubcomponentFlowAssignment_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getOwnedSubcomponentFlowAssignment_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedSubcomponentFlow",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedSubcomponentFlow");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEndToEndFlowAccess().getOwnedSubcomponentFlowSubcomponentFlowParserRuleCall_7_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EndToEndFlow_HyphenMinusGreaterThanSignKeyword_7_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class EndToEndFlow_Group_8 extends GroupToken {
	
	public EndToEndFlow_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_RightCurlyBracketKeyword_8_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class EndToEndFlow_LeftCurlyBracketKeyword_8_0 extends KeywordToken  {
	
	public EndToEndFlow_LeftCurlyBracketKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getLeftCurlyBracketKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlow_OwnedSubcomponentFlowAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class EndToEndFlow_OwnedPropertyAssociationAssignment_8_1 extends AssignmentToken  {
	
	public EndToEndFlow_OwnedPropertyAssociationAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getOwnedPropertyAssociationAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEndToEndFlowAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EndToEndFlow_OwnedPropertyAssociationAssignment_8_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EndToEndFlow_LeftCurlyBracketKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class EndToEndFlow_RightCurlyBracketKeyword_8_2 extends KeywordToken  {
	
	public EndToEndFlow_RightCurlyBracketKeyword_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getRightCurlyBracketKeyword_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_OwnedPropertyAssociationAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class EndToEndFlow_Group_9 extends GroupToken {
	
	public EndToEndFlow_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_RightParenthesisKeyword_9_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class EndToEndFlow_InKeyword_9_0 extends KeywordToken  {
	
	public EndToEndFlow_InKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getInKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlow_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EndToEndFlow_OwnedSubcomponentFlowAssignment_6(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class EndToEndFlow_ModesKeyword_9_1 extends KeywordToken  {
	
	public EndToEndFlow_ModesKeyword_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getModesKeyword_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_InKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class EndToEndFlow_LeftParenthesisKeyword_9_2 extends KeywordToken  {
	
	public EndToEndFlow_LeftParenthesisKeyword_9_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getLeftParenthesisKeyword_9_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_ModesKeyword_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class EndToEndFlow_InModeAssignment_9_3 extends AssignmentToken  {
	
	public EndToEndFlow_InModeAssignment_9_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getInModeAssignment_9_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_InModeAssignment_9_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlow_LeftParenthesisKeyword_9_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEndToEndFlowAccess().getInModeModeCrossReference_9_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEndToEndFlowAccess().getInModeModeCrossReference_9_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class EndToEndFlow_RightParenthesisKeyword_9_4 extends KeywordToken  {
	
	public EndToEndFlow_RightParenthesisKeyword_9_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getRightParenthesisKeyword_9_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_InModeAssignment_9_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class EndToEndFlow_SemicolonKeyword_10 extends KeywordToken  {
	
	public EndToEndFlow_SemicolonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowAccess().getSemicolonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlow_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlow_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EndToEndFlow_Group_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EndToEndFlow_OwnedSubcomponentFlowAssignment_6(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule EndToEndFlow ****************/


/************ begin Rule EndToEndFlowRefinement ****************
 *
 * EndToEndFlowRefinement returns aadl2::EndToEndFlow:
 * 	refined=[aadl2::EndToEndFlow] ":" "refined" "to" "end" "to" "end" "flow" ("{"
 * 	ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
 * ;
 *
 **/

// refined=[aadl2::EndToEndFlow] ":" "refined" "to" "end" "to" "end" "flow" ("{"
// ownedPropertyAssociation+=PropertyAssociation+ "}")? ("in" "modes" "(" inMode+=[aadl2::Mode]+ ")")? //| allModes?='all'
protected class EndToEndFlowRefinement_Group extends GroupToken {
	
	public EndToEndFlowRefinement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlowRefinement_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EndToEndFlowRefinement_FlowKeyword_7(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEndToEndFlowRefinementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// refined=[aadl2::EndToEndFlow]
protected class EndToEndFlowRefinement_RefinedAssignment_0 extends AssignmentToken  {
	
	public EndToEndFlowRefinement_RefinedAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getRefinedAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refined",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refined");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEndToEndFlowRefinementAccess().getRefinedEndToEndFlowCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEndToEndFlowRefinementAccess().getRefinedEndToEndFlowCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ":"
protected class EndToEndFlowRefinement_ColonKeyword_1 extends KeywordToken  {
	
	public EndToEndFlowRefinement_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_RefinedAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refined"
protected class EndToEndFlowRefinement_RefinedKeyword_2 extends KeywordToken  {
	
	public EndToEndFlowRefinement_RefinedKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getRefinedKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class EndToEndFlowRefinement_ToKeyword_3 extends KeywordToken  {
	
	public EndToEndFlowRefinement_ToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_RefinedKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class EndToEndFlowRefinement_EndKeyword_4 extends KeywordToken  {
	
	public EndToEndFlowRefinement_EndKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getEndKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_ToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class EndToEndFlowRefinement_ToKeyword_5 extends KeywordToken  {
	
	public EndToEndFlowRefinement_ToKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getToKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_EndKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class EndToEndFlowRefinement_EndKeyword_6 extends KeywordToken  {
	
	public EndToEndFlowRefinement_EndKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getEndKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_ToKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "flow"
protected class EndToEndFlowRefinement_FlowKeyword_7 extends KeywordToken  {
	
	public EndToEndFlowRefinement_FlowKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getFlowKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_EndKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class EndToEndFlowRefinement_Group_8 extends GroupToken {
	
	public EndToEndFlowRefinement_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_RightCurlyBracketKeyword_8_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class EndToEndFlowRefinement_LeftCurlyBracketKeyword_8_0 extends KeywordToken  {
	
	public EndToEndFlowRefinement_LeftCurlyBracketKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getLeftCurlyBracketKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_FlowKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class EndToEndFlowRefinement_OwnedPropertyAssociationAssignment_8_1 extends AssignmentToken  {
	
	public EndToEndFlowRefinement_OwnedPropertyAssociationAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getOwnedPropertyAssociationAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEndToEndFlowRefinementAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EndToEndFlowRefinement_OwnedPropertyAssociationAssignment_8_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EndToEndFlowRefinement_LeftCurlyBracketKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class EndToEndFlowRefinement_RightCurlyBracketKeyword_8_2 extends KeywordToken  {
	
	public EndToEndFlowRefinement_RightCurlyBracketKeyword_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getRightCurlyBracketKeyword_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_OwnedPropertyAssociationAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (=> "in" "modes" "(" inMode+=[aadl2::Mode]+ ")")?
protected class EndToEndFlowRefinement_Group_9 extends GroupToken {
	
	public EndToEndFlowRefinement_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_RightParenthesisKeyword_9_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "in"
protected class EndToEndFlowRefinement_InKeyword_9_0 extends KeywordToken  {
	
	public EndToEndFlowRefinement_InKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getInKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlowRefinement_FlowKeyword_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "modes"
protected class EndToEndFlowRefinement_ModesKeyword_9_1 extends KeywordToken  {
	
	public EndToEndFlowRefinement_ModesKeyword_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getModesKeyword_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_InKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class EndToEndFlowRefinement_LeftParenthesisKeyword_9_2 extends KeywordToken  {
	
	public EndToEndFlowRefinement_LeftParenthesisKeyword_9_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getLeftParenthesisKeyword_9_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_ModesKeyword_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inMode+=[aadl2::Mode]+
protected class EndToEndFlowRefinement_InModeAssignment_9_3 extends AssignmentToken  {
	
	public EndToEndFlowRefinement_InModeAssignment_9_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getInModeAssignment_9_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_InModeAssignment_9_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EndToEndFlowRefinement_LeftParenthesisKeyword_9_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEndToEndFlowRefinementAccess().getInModeModeCrossReference_9_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEndToEndFlowRefinementAccess().getInModeModeCrossReference_9_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ")"
protected class EndToEndFlowRefinement_RightParenthesisKeyword_9_4 extends KeywordToken  {
	
	public EndToEndFlowRefinement_RightParenthesisKeyword_9_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEndToEndFlowRefinementAccess().getRightParenthesisKeyword_9_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EndToEndFlowRefinement_InModeAssignment_9_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule EndToEndFlowRefinement ****************/


/************ begin Rule SubcomponentFlow ****************
 *
 * // could refer to data access which is stored as dataAccess instead of flowSpec
 * // could also refere to endtoend flow
 * SubcomponentFlow returns aadl2::SubcomponentFlow:
 * 	context=[aadl2::Subcomponent] "." flowSpecification=[aadl2::FlowSpecification];
 *
 **/

// context=[aadl2::Subcomponent] "." flowSpecification=[aadl2::FlowSpecification]
protected class SubcomponentFlow_Group extends GroupToken {
	
	public SubcomponentFlow_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSubcomponentFlowAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_FlowSpecificationAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSubcomponentFlowRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// context=[aadl2::Subcomponent]
protected class SubcomponentFlow_ContextAssignment_0 extends AssignmentToken  {
	
	public SubcomponentFlow_ContextAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubcomponentFlowAccess().getContextAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("context",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("context");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowAccess().getContextSubcomponentCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubcomponentFlowAccess().getContextSubcomponentCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class SubcomponentFlow_FullStopKeyword_1 extends KeywordToken  {
	
	public SubcomponentFlow_FullStopKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSubcomponentFlowAccess().getFullStopKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_ContextAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// flowSpecification=[aadl2::FlowSpecification]
protected class SubcomponentFlow_FlowSpecificationAssignment_2 extends AssignmentToken  {
	
	public SubcomponentFlow_FlowSpecificationAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSubcomponentFlowAccess().getFlowSpecificationAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SubcomponentFlow_FullStopKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flowSpecification",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flowSpecification");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSubcomponentFlowAccess().getFlowSpecificationFlowSpecificationCrossReference_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSubcomponentFlowAccess().getFlowSpecificationFlowSpecificationCrossReference_2_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule SubcomponentFlow ****************/


/************ begin Rule Mode ****************
 *
 * // Modes 
 * Mode returns aadl2::Mode:
 * 	name=ID ":" initial?="initial"? "mode" ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ";";
 *
 **/

// name=ID ":" initial?="initial"? "mode" ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ";"
protected class Mode_Group extends GroupToken {
	
	public Mode_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_SemicolonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Mode_NameAssignment_0 extends AssignmentToken  {
	
	public Mode_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModeAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModeAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Mode_ColonKeyword_1 extends KeywordToken  {
	
	public Mode_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeAccess().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// initial?="initial"?
protected class Mode_InitialAssignment_2 extends AssignmentToken  {
	
	public Mode_InitialAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeAccess().getInitialAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initial",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initial");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getModeAccess().getInitialInitialKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// "mode"
protected class Mode_ModeKeyword_3 extends KeywordToken  {
	
	public Mode_ModeKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeAccess().getModeKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_InitialAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Mode_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class Mode_Group_4 extends GroupToken {
	
	public Mode_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_RightCurlyBracketKeyword_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class Mode_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public Mode_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_ModeKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class Mode_OwnedPropertyAssociationAssignment_4_1 extends AssignmentToken  {
	
	public Mode_OwnedPropertyAssociationAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeAccess().getOwnedPropertyAssociationAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Mode_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Mode_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Mode_RightCurlyBracketKeyword_4_2 extends KeywordToken  {
	
	public Mode_RightCurlyBracketKeyword_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeAccess().getRightCurlyBracketKeyword_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_OwnedPropertyAssociationAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class Mode_SemicolonKeyword_5 extends KeywordToken  {
	
	public Mode_SemicolonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeAccess().getSemicolonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mode_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Mode_ModeKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Mode ****************/


/************ begin Rule ModeTransition ****************
 *
 * ModeTransition returns aadl2::ModeTransition:
 * 	(name=ID ":")? source=[aadl2::Mode] "-[" ownedTrigger+=TriggerPort ("," ownedTrigger+=TriggerPort)* "]->"
 * 	destination=[aadl2::Mode] ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ";";
 *
 **/

// (name=ID ":")? source=[aadl2::Mode] "-[" ownedTrigger+=TriggerPort ("," ownedTrigger+=TriggerPort)* "]->"
// destination=[aadl2::Mode] ("{" ownedPropertyAssociation+=PropertyAssociation+ "}")? ";"
protected class ModeTransition_Group extends GroupToken {
	
	public ModeTransition_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_SemicolonKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModeTransitionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// (name=ID ":")?
protected class ModeTransition_Group_0 extends GroupToken {
	
	public ModeTransition_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_ColonKeyword_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ModeTransition_NameAssignment_0_0 extends AssignmentToken  {
	
	public ModeTransition_NameAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getNameAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModeTransitionAccess().getNameIDTerminalRuleCall_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModeTransitionAccess().getNameIDTerminalRuleCall_0_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class ModeTransition_ColonKeyword_0_1 extends KeywordToken  {
	
	public ModeTransition_ColonKeyword_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getColonKeyword_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_NameAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// source=[aadl2::Mode]
protected class ModeTransition_SourceAssignment_1 extends AssignmentToken  {
	
	public ModeTransition_SourceAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getSourceAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionAccess().getSourceModeCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getModeTransitionAccess().getSourceModeCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "-["
protected class ModeTransition_HyphenMinusLeftSquareBracketKeyword_2 extends KeywordToken  {
	
	public ModeTransition_HyphenMinusLeftSquareBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getHyphenMinusLeftSquareBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_SourceAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedTrigger+=TriggerPort
protected class ModeTransition_OwnedTriggerAssignment_3 extends AssignmentToken  {
	
	public ModeTransition_OwnedTriggerAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getOwnedTriggerAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TriggerPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedTrigger",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedTrigger");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTriggerPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeTransitionAccess().getOwnedTriggerTriggerPortParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeTransition_HyphenMinusLeftSquareBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ownedTrigger+=TriggerPort)*
protected class ModeTransition_Group_4 extends GroupToken {
	
	public ModeTransition_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_OwnedTriggerAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ModeTransition_CommaKeyword_4_0 extends KeywordToken  {
	
	public ModeTransition_CommaKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getCommaKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModeTransition_OwnedTriggerAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ownedTrigger+=TriggerPort
protected class ModeTransition_OwnedTriggerAssignment_4_1 extends AssignmentToken  {
	
	public ModeTransition_OwnedTriggerAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getOwnedTriggerAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TriggerPort_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedTrigger",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedTrigger");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTriggerPortRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeTransitionAccess().getOwnedTriggerTriggerPortParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeTransition_CommaKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]->"
protected class ModeTransition_RightSquareBracketHyphenMinusGreaterThanSignKeyword_5 extends KeywordToken  {
	
	public ModeTransition_RightSquareBracketHyphenMinusGreaterThanSignKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getRightSquareBracketHyphenMinusGreaterThanSignKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModeTransition_OwnedTriggerAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// destination=[aadl2::Mode]
protected class ModeTransition_DestinationAssignment_6 extends AssignmentToken  {
	
	public ModeTransition_DestinationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getDestinationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_RightSquareBracketHyphenMinusGreaterThanSignKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("destination",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("destination");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeTransitionAccess().getDestinationModeCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getModeTransitionAccess().getDestinationModeCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// (=> "{" ownedPropertyAssociation+=PropertyAssociation+ "}")?
protected class ModeTransition_Group_7 extends GroupToken {
	
	public ModeTransition_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_RightCurlyBracketKeyword_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "{"
protected class ModeTransition_LeftCurlyBracketKeyword_7_0 extends KeywordToken  {
	
	public ModeTransition_LeftCurlyBracketKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getLeftCurlyBracketKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_DestinationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ownedPropertyAssociation+=PropertyAssociation+
protected class ModeTransition_OwnedPropertyAssociationAssignment_7_1 extends AssignmentToken  {
	
	public ModeTransition_OwnedPropertyAssociationAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getOwnedPropertyAssociationAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ownedPropertyAssociation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ownedPropertyAssociation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeTransitionAccess().getOwnedPropertyAssociationPropertyAssociationParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeTransition_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModeTransition_LeftCurlyBracketKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ModeTransition_RightCurlyBracketKeyword_7_2 extends KeywordToken  {
	
	public ModeTransition_RightCurlyBracketKeyword_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getRightCurlyBracketKeyword_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_OwnedPropertyAssociationAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ";"
protected class ModeTransition_SemicolonKeyword_8 extends KeywordToken  {
	
	public ModeTransition_SemicolonKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeTransitionAccess().getSemicolonKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeTransition_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModeTransition_DestinationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ModeTransition ****************/


/************ begin Rule TriggerPort ****************
 *
 * TriggerPort returns aadl2::TriggerPort:
 * 	(context=[aadl2::Context] ".")? // (self?='self'|processor?='processor') vs. special object reference as context 
 * 	port=[aadl2::Port];
 *
 **/

// (context=[aadl2::Context] ".")? // (self?='self'|processor?='processor') vs. special object reference as context 
// port=[aadl2::Port]
protected class TriggerPort_Group extends GroupToken {
	
	public TriggerPort_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTriggerPortAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TriggerPort_PortAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTriggerPortRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// (context=[aadl2::Context] ".")?
protected class TriggerPort_Group_0 extends GroupToken {
	
	public TriggerPort_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTriggerPortAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TriggerPort_FullStopKeyword_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// context=[aadl2::Context]
protected class TriggerPort_ContextAssignment_0_0 extends AssignmentToken  {
	
	public TriggerPort_ContextAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTriggerPortAccess().getContextAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("context",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("context");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTriggerPortAccess().getContextContextCrossReference_0_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTriggerPortAccess().getContextContextCrossReference_0_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "."
protected class TriggerPort_FullStopKeyword_0_1 extends KeywordToken  {
	
	public TriggerPort_FullStopKeyword_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTriggerPortAccess().getFullStopKeyword_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TriggerPort_ContextAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// port=[aadl2::Port]
protected class TriggerPort_PortAssignment_1 extends AssignmentToken  {
	
	public TriggerPort_PortAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTriggerPortAccess().getPortAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TriggerPort_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("port",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("port");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTriggerPortAccess().getPortPortCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTriggerPortAccess().getPortPortCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule TriggerPort ****************/


/************ begin Rule ModeRef ****************
 *
 * // used where component_in_modes is shown in standard grammar
 * ModeRef returns aadl2::ModeBinding:
 * 	parentMode=[aadl2::Mode] ("->" derivedMode=[aadl2::Mode])?;
 *
 **/

// parentMode=[aadl2::Mode] ("->" derivedMode=[aadl2::Mode])?
protected class ModeRef_Group extends GroupToken {
	
	public ModeRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModeRef_ParentModeAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModeRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parentMode=[aadl2::Mode]
protected class ModeRef_ParentModeAssignment_0 extends AssignmentToken  {
	
	public ModeRef_ParentModeAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeRefAccess().getParentModeAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parentMode",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parentMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefAccess().getParentModeModeCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getModeRefAccess().getParentModeModeCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("->" derivedMode=[aadl2::Mode])?
protected class ModeRef_Group_1 extends GroupToken {
	
	public ModeRef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeRefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_DerivedModeAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class ModeRef_HyphenMinusGreaterThanSignKeyword_1_0 extends KeywordToken  {
	
	public ModeRef_HyphenMinusGreaterThanSignKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeRefAccess().getHyphenMinusGreaterThanSignKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_ParentModeAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// derivedMode=[aadl2::Mode]
protected class ModeRef_DerivedModeAssignment_1_1 extends AssignmentToken  {
	
	public ModeRef_DerivedModeAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeRefAccess().getDerivedModeAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeRef_HyphenMinusGreaterThanSignKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("derivedMode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("derivedMode");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModeRefAccess().getDerivedModeModeCrossReference_1_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getModeRefAccess().getDerivedModeModeCrossReference_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule ModeRef ****************/


/************ begin Rule AnnexLibrary ****************
 *
 * AnnexLibrary returns aadl2::AnnexLibrary:
 * 	DefaultAnnexLibrary;
 *
 **/

// DefaultAnnexLibrary
protected class AnnexLibrary_DefaultAnnexLibraryParserRuleCall extends RuleCallToken {
	
	public AnnexLibrary_DefaultAnnexLibraryParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAnnexLibraryAccess().getDefaultAnnexLibraryParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexLibrary_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDefaultAnnexLibraryRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DefaultAnnexLibrary_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule AnnexLibrary ****************/


/************ begin Rule DefaultAnnexLibrary ****************
 *
 * DefaultAnnexLibrary returns aadl2::DefaultAnnexLibrary:
 * 	"annex" name=ID sourceText=ANNEXTEXT ";";
 *
 **/

// "annex" name=ID sourceText=ANNEXTEXT ";"
protected class DefaultAnnexLibrary_Group extends GroupToken {
	
	public DefaultAnnexLibrary_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDefaultAnnexLibraryAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexLibrary_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDefaultAnnexLibraryRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "annex"
protected class DefaultAnnexLibrary_AnnexKeyword_0 extends KeywordToken  {
	
	public DefaultAnnexLibrary_AnnexKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDefaultAnnexLibraryAccess().getAnnexKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class DefaultAnnexLibrary_NameAssignment_1 extends AssignmentToken  {
	
	public DefaultAnnexLibrary_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDefaultAnnexLibraryAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexLibrary_AnnexKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDefaultAnnexLibraryAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDefaultAnnexLibraryAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// sourceText=ANNEXTEXT
protected class DefaultAnnexLibrary_SourceTextAssignment_2 extends AssignmentToken  {
	
	public DefaultAnnexLibrary_SourceTextAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDefaultAnnexLibraryAccess().getSourceTextAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexLibrary_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceText",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceText");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDefaultAnnexLibraryAccess().getSourceTextANNEXTEXTTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDefaultAnnexLibraryAccess().getSourceTextANNEXTEXTTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DefaultAnnexLibrary_SemicolonKeyword_3 extends KeywordToken  {
	
	public DefaultAnnexLibrary_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDefaultAnnexLibraryAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexLibrary_SourceTextAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DefaultAnnexLibrary ****************/


/************ begin Rule AnnexSubclause ****************
 *
 * AnnexSubclause returns aadl2::AnnexSubclause:
 * 	DefaultAnnexSubclause;
 *
 **/

// DefaultAnnexSubclause
protected class AnnexSubclause_DefaultAnnexSubclauseParserRuleCall extends RuleCallToken {
	
	public AnnexSubclause_DefaultAnnexSubclauseParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAnnexSubclauseAccess().getDefaultAnnexSubclauseParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexSubclause_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDefaultAnnexSubclauseRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DefaultAnnexSubclause_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule AnnexSubclause ****************/


/************ begin Rule DefaultAnnexSubclause ****************
 *
 * DefaultAnnexSubclause returns aadl2::DefaultAnnexSubclause:
 * 	"annex" name=ID sourceText=ANNEXTEXT ";";
 *
 **/

// "annex" name=ID sourceText=ANNEXTEXT ";"
protected class DefaultAnnexSubclause_Group extends GroupToken {
	
	public DefaultAnnexSubclause_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDefaultAnnexSubclauseAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexSubclause_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDefaultAnnexSubclauseRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "annex"
protected class DefaultAnnexSubclause_AnnexKeyword_0 extends KeywordToken  {
	
	public DefaultAnnexSubclause_AnnexKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDefaultAnnexSubclauseAccess().getAnnexKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class DefaultAnnexSubclause_NameAssignment_1 extends AssignmentToken  {
	
	public DefaultAnnexSubclause_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDefaultAnnexSubclauseAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexSubclause_AnnexKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDefaultAnnexSubclauseAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDefaultAnnexSubclauseAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// sourceText=ANNEXTEXT
protected class DefaultAnnexSubclause_SourceTextAssignment_2 extends AssignmentToken  {
	
	public DefaultAnnexSubclause_SourceTextAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDefaultAnnexSubclauseAccess().getSourceTextAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexSubclause_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceText",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceText");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDefaultAnnexSubclauseAccess().getSourceTextANNEXTEXTTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDefaultAnnexSubclauseAccess().getSourceTextANNEXTEXTTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class DefaultAnnexSubclause_SemicolonKeyword_3 extends KeywordToken  {
	
	public DefaultAnnexSubclause_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDefaultAnnexSubclauseAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DefaultAnnexSubclause_SourceTextAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DefaultAnnexSubclause ****************/


/************ begin Rule BasicPropertyAssociation ****************
 *
 * // **************
 * // Properties
 * BasicPropertyAssociation returns aadl2::PropertyAssociation:
 * 	property= // name=QPREF
 * 	[aadl2::Property|QPREF] //ownedValue+=PropertyValue ';'
 * 	"=>";
 *
 **/

// property= // name=QPREF
// [aadl2::Property|QPREF] //ownedValue+=PropertyValue ';'
// "=>"
protected class BasicPropertyAssociation_Group extends GroupToken {
	
	public BasicPropertyAssociation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBasicPropertyAssociationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BasicPropertyAssociation_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBasicPropertyAssociationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// property= // name=QPREF
// [aadl2::Property|QPREF]
protected class BasicPropertyAssociation_PropertyAssignment_0 extends AssignmentToken  {
	
	public BasicPropertyAssociation_PropertyAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBasicPropertyAssociationAccess().getPropertyAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("property",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("property");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// //ownedValue+=PropertyValue ';'
// "=>"
protected class BasicPropertyAssociation_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public BasicPropertyAssociation_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBasicPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BasicPropertyAssociation_PropertyAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule BasicPropertyAssociation ****************/


/************ begin Rule PropertyAssociation ****************
 *
 * PropertyAssociation returns aadl2::PropertyAssociation:
 * 	property=[aadl2::Property] //ownedValue=PropertyExpression 
 * 	"=>" ";";
 *
 **/

// property=[aadl2::Property] //ownedValue=PropertyExpression 
// "=>" ";"
protected class PropertyAssociation_Group extends GroupToken {
	
	public PropertyAssociation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAssociationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_SemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPropertyAssociationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// property=[aadl2::Property]
protected class PropertyAssociation_PropertyAssignment_0 extends AssignmentToken  {
	
	public PropertyAssociation_PropertyAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAssociationAccess().getPropertyAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("property",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("property");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// //ownedValue=PropertyExpression 
// "=>"
protected class PropertyAssociation_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public PropertyAssociation_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_PropertyAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ";"
protected class PropertyAssociation_SemicolonKeyword_2 extends KeywordToken  {
	
	public PropertyAssociation_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPropertyAssociationAccess().getSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyAssociation_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PropertyAssociation ****************/


/************ begin Rule ContainedPropertyAssociation ****************
 *
 * ContainedPropertyAssociation returns aadl2::PropertyAssociation:
 * 	property=[aadl2::Property] //ownedValue=PropertyExpression
 * 	"=>" ("applies" "to" appliesTo+=ContainmentPath)? ";";
 *
 **/

// property=[aadl2::Property] //ownedValue=PropertyExpression
// "=>" ("applies" "to" appliesTo+=ContainmentPath)? ";"
protected class ContainedPropertyAssociation_Group extends GroupToken {
	
	public ContainedPropertyAssociation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getContainedPropertyAssociationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// property=[aadl2::Property]
protected class ContainedPropertyAssociation_PropertyAssignment_0 extends AssignmentToken  {
	
	public ContainedPropertyAssociation_PropertyAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("property",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("property");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// //ownedValue=PropertyExpression
// "=>"
protected class ContainedPropertyAssociation_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public ContainedPropertyAssociation_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_PropertyAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (=> "applies" "to" appliesTo+=ContainmentPath)?
protected class ContainedPropertyAssociation_Group_2 extends GroupToken {
	
	public ContainedPropertyAssociation_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_AppliesToAssignment_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// => "applies"
protected class ContainedPropertyAssociation_AppliesKeyword_2_0 extends KeywordToken  {
	
	public ContainedPropertyAssociation_AppliesKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "to"
protected class ContainedPropertyAssociation_ToKeyword_2_1 extends KeywordToken  {
	
	public ContainedPropertyAssociation_ToKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_AppliesKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// appliesTo+=ContainmentPath
protected class ContainedPropertyAssociation_AppliesToAssignment_2_2 extends AssignmentToken  {
	
	public ContainedPropertyAssociation_AppliesToAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPath_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("appliesTo",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("appliesTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainmentPathRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ContainedPropertyAssociation_ToKeyword_2_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ";"
protected class ContainedPropertyAssociation_SemicolonKeyword_3 extends KeywordToken  {
	
	public ContainedPropertyAssociation_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainedPropertyAssociation_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ContainedPropertyAssociation_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ContainedPropertyAssociation ****************/


/************ begin Rule ContainmentPath ****************
 *
 * ContainmentPath returns aadl2::ContainedNamedElement:
 * 	{aadl2::ContainedNamedElement} containmentPathElement+=ContainmentPathElement (","
 * 	containmentPathElement+=ContainmentPathElement)*;
 *
 **/

// {aadl2::ContainedNamedElement} containmentPathElement+=ContainmentPathElement (","
// containmentPathElement+=ContainmentPathElement)*
protected class ContainmentPath_Group extends GroupToken {
	
	public ContainmentPath_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContainmentPathAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPath_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ContainmentPath_ContainmentPathElementAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getContainmentPathAccess().getContainedNamedElementAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::ContainedNamedElement}
protected class ContainmentPath_ContainedNamedElementAction_0 extends ActionToken  {

	public ContainmentPath_ContainedNamedElementAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getContainmentPathAccess().getContainedNamedElementAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// containmentPathElement+=ContainmentPathElement
protected class ContainmentPath_ContainmentPathElementAssignment_1 extends AssignmentToken  {
	
	public ContainmentPath_ContainmentPathElementAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPathElement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("containmentPathElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("containmentPathElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainmentPathElementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ContainmentPath_ContainedNamedElementAction_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," containmentPathElement+=ContainmentPathElement)*
protected class ContainmentPath_Group_2 extends GroupToken {
	
	public ContainmentPath_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContainmentPathAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPath_ContainmentPathElementAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ContainmentPath_CommaKeyword_2_0 extends KeywordToken  {
	
	public ContainmentPath_CommaKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContainmentPathAccess().getCommaKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPath_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ContainmentPath_ContainmentPathElementAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// containmentPathElement+=ContainmentPathElement
protected class ContainmentPath_ContainmentPathElementAssignment_2_1 extends AssignmentToken  {
	
	public ContainmentPath_ContainmentPathElementAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPathElement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("containmentPathElement",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("containmentPathElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainmentPathElementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ContainmentPath_CommaKeyword_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule ContainmentPath ****************/


/************ begin Rule ContainmentPathElement ****************
 *
 * ContainmentPathElement returns aadl2::ContainmentPathElement:
 * 	namedElement=[aadl2::NamedElement] arrayRange+=ArrayRange;
 *
 **/

// namedElement=[aadl2::NamedElement] arrayRange+=ArrayRange
protected class ContainmentPathElement_Group extends GroupToken {
	
	public ContainmentPathElement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContainmentPathElementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContainmentPathElement_ArrayRangeAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getContainmentPathElementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// namedElement=[aadl2::NamedElement]
protected class ContainmentPathElement_NamedElementAssignment_0 extends AssignmentToken  {
	
	public ContainmentPathElement_NamedElementAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("namedElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("namedElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// arrayRange+=ArrayRange
protected class ContainmentPathElement_ArrayRangeAssignment_1 extends AssignmentToken  {
	
	public ContainmentPathElement_ArrayRangeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arrayRange",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arrayRange");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getArrayRangeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ContainmentPathElement_NamedElementAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule ContainmentPathElement ****************/


/************ begin Rule ArrayRange ****************
 *
 * ArrayRange returns aadl2::ArrayRange:
 * 	{aadl2::ArrayRange} "[" lowerBound=gINT ("." "." upperBound=gINT)? "]";
 *
 **/

// {aadl2::ArrayRange} "[" lowerBound=gINT ("." "." upperBound=gINT)? "]"
protected class ArrayRange_Group extends GroupToken {
	
	public ArrayRange_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_RightSquareBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getArrayRangeAccess().getArrayRangeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {aadl2::ArrayRange}
protected class ArrayRange_ArrayRangeAction_0 extends ActionToken  {

	public ArrayRange_ArrayRangeAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getArrayRangeAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "["
protected class ArrayRange_LeftSquareBracketKeyword_1 extends KeywordToken  {
	
	public ArrayRange_LeftSquareBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_ArrayRangeAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=gINT
protected class ArrayRange_LowerBoundAssignment_2 extends AssignmentToken  {
	
	public ArrayRange_LowerBoundAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_LeftSquareBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getArrayRangeAccess().getLowerBoundGINTParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getArrayRangeAccess().getLowerBoundGINTParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("." "." upperBound=gINT)?
protected class ArrayRange_Group_3 extends GroupToken {
	
	public ArrayRange_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_UpperBoundAssignment_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class ArrayRange_FullStopKeyword_3_0 extends KeywordToken  {
	
	public ArrayRange_FullStopKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getFullStopKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_LowerBoundAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "."
protected class ArrayRange_FullStopKeyword_3_1 extends KeywordToken  {
	
	public ArrayRange_FullStopKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getFullStopKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_FullStopKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=gINT
protected class ArrayRange_UpperBoundAssignment_3_2 extends AssignmentToken  {
	
	public ArrayRange_UpperBoundAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_FullStopKeyword_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getArrayRangeAccess().getUpperBoundGINTParserRuleCall_3_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getArrayRangeAccess().getUpperBoundGINTParserRuleCall_3_2_0();
			return obj;
		}
		return null;
	}

}


// "]"
protected class ArrayRange_RightSquareBracketKeyword_4 extends KeywordToken  {
	
	public ArrayRange_RightSquareBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ArrayRange_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ArrayRange_LowerBoundAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ArrayRange ****************/








}
