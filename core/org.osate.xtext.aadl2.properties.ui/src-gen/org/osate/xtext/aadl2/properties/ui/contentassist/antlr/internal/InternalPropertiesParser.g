/*
* generated by Xtext
*/
parser grammar InternalPropertiesParser;

options {
	tokenVocab=InternalPropertiesLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@header {
package org.osate.xtext.aadl2.properties.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.osate.xtext.aadl2.properties.services.PropertiesGrammarAccess;

}

@members {
 
 	private PropertiesGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("KEYWORD_1", "'('");
		tokenNameToValue.put("KEYWORD_2", "')'");
		tokenNameToValue.put("KEYWORD_3", "'*'");
		tokenNameToValue.put("KEYWORD_4", "'+'");
		tokenNameToValue.put("KEYWORD_5", "','");
		tokenNameToValue.put("KEYWORD_6", "'-'");
		tokenNameToValue.put("KEYWORD_7", "'.'");
		tokenNameToValue.put("KEYWORD_8", "';'");
		tokenNameToValue.put("KEYWORD_9", "'['");
		tokenNameToValue.put("KEYWORD_10", "']'");
		tokenNameToValue.put("KEYWORD_11", "'{'");
		tokenNameToValue.put("KEYWORD_12", "'}'");
		tokenNameToValue.put("KEYWORD_13", "'..'");
		tokenNameToValue.put("KEYWORD_14", "'::'");
		tokenNameToValue.put("KEYWORD_15", "'=>'");
		tokenNameToValue.put("KEYWORD_16", "'in'");
		tokenNameToValue.put("KEYWORD_17", "'or'");
		tokenNameToValue.put("KEYWORD_18", "'to'");
		tokenNameToValue.put("KEYWORD_19", "'+=>'");
		tokenNameToValue.put("KEYWORD_20", "'and'");
		tokenNameToValue.put("KEYWORD_21", "'not'");
		tokenNameToValue.put("KEYWORD_22", "'true'");
		tokenNameToValue.put("KEYWORD_23", "'annex'");
		tokenNameToValue.put("KEYWORD_24", "'delta'");
		tokenNameToValue.put("KEYWORD_25", "'false'");
		tokenNameToValue.put("KEYWORD_26", "'modes'");
		tokenNameToValue.put("KEYWORD_27", "'applies'");
		tokenNameToValue.put("KEYWORD_28", "'compute'");
		tokenNameToValue.put("KEYWORD_29", "'constant'");
		tokenNameToValue.put("KEYWORD_30", "'reference'");
		tokenNameToValue.put("KEYWORD_31", "'classifier'");
 	}
 	
    public void setGrammarAccess(PropertiesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRulePModel
entryRulePModel 
:
{ before(grammarAccess.getPModelRule()); }
	 rulePModel
{ after(grammarAccess.getPModelRule()); } 
	 EOF 
;

// Rule PModel
rulePModel 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPModelAccess().getAlternatives()); }
(rule__PModel__Alternatives)
{ after(grammarAccess.getPModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicPropertyAssociation
entryRuleBasicPropertyAssociation 
:
{ before(grammarAccess.getBasicPropertyAssociationRule()); }
	 ruleBasicPropertyAssociation
{ after(grammarAccess.getBasicPropertyAssociationRule()); } 
	 EOF 
;

// Rule BasicPropertyAssociation
ruleBasicPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getGroup()); }
(rule__BasicPropertyAssociation__Group__0)
{ after(grammarAccess.getBasicPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainedPropertyAssociation
entryRuleContainedPropertyAssociation 
:
{ before(grammarAccess.getContainedPropertyAssociationRule()); }
	 ruleContainedPropertyAssociation
{ after(grammarAccess.getContainedPropertyAssociationRule()); } 
	 EOF 
;

// Rule ContainedPropertyAssociation
ruleContainedPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
(rule__ContainedPropertyAssociation__Group__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyAssociation
entryRulePropertyAssociation 
:
{ before(grammarAccess.getPropertyAssociationRule()); }
	 rulePropertyAssociation
{ after(grammarAccess.getPropertyAssociationRule()); } 
	 EOF 
;

// Rule PropertyAssociation
rulePropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyAssociationAccess().getGroup()); }
(rule__PropertyAssociation__Group__0)
{ after(grammarAccess.getPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainmentPath
entryRuleContainmentPath 
:
{ before(grammarAccess.getContainmentPathRule()); }
	 ruleContainmentPath
{ after(grammarAccess.getContainmentPathRule()); } 
	 EOF 
;

// Rule ContainmentPath
ruleContainmentPath 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathAccess().getGroup()); }
(rule__ContainmentPath__Group__0)
{ after(grammarAccess.getContainmentPathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModalPropertyValue
entryRuleModalPropertyValue 
:
{ before(grammarAccess.getModalPropertyValueRule()); }
	 ruleModalPropertyValue
{ after(grammarAccess.getModalPropertyValueRule()); } 
	 EOF 
;

// Rule ModalPropertyValue
ruleModalPropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getModalPropertyValueAccess().getGroup()); }
(rule__ModalPropertyValue__Group__0)
{ after(grammarAccess.getModalPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalModalPropertyValue
entryRuleOptionalModalPropertyValue 
:
{ before(grammarAccess.getOptionalModalPropertyValueRule()); }
	 ruleOptionalModalPropertyValue
{ after(grammarAccess.getOptionalModalPropertyValueRule()); } 
	 EOF 
;

// Rule OptionalModalPropertyValue
ruleOptionalModalPropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
(rule__OptionalModalPropertyValue__Group__0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue 
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
(rule__PropertyValue__OwnedValueAssignment)
{ after(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyExpression
entryRulePropertyExpression 
:
{ before(grammarAccess.getPropertyExpressionRule()); }
	 rulePropertyExpression
{ after(grammarAccess.getPropertyExpressionRule()); } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
(rule__PropertyExpression__Alternatives)
{ after(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralorReferenceTerm
entryRuleLiteralorReferenceTerm 
:
{ before(grammarAccess.getLiteralorReferenceTermRule()); }
	 ruleLiteralorReferenceTerm
{ after(grammarAccess.getLiteralorReferenceTermRule()); } 
	 EOF 
;

// Rule LiteralorReferenceTerm
ruleLiteralorReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
(rule__LiteralorReferenceTerm__NamedValueAssignment)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualBooleanTerm
entryRuleActualBooleanTerm 
:
{ before(grammarAccess.getActualBooleanTermRule()); }
	 ruleActualBooleanTerm
{ after(grammarAccess.getActualBooleanTermRule()); } 
	 EOF 
;

// Rule ActualBooleanTerm
ruleActualBooleanTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getActualBooleanTermAccess().getAlternatives()); }
(rule__ActualBooleanTerm__Alternatives)
{ after(grammarAccess.getActualBooleanTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualOrTerm
entryRuleActualOrTerm 
:
{ before(grammarAccess.getActualOrTermRule()); }
	 ruleActualOrTerm
{ after(grammarAccess.getActualOrTermRule()); } 
	 EOF 
;

// Rule ActualOrTerm
ruleActualOrTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getActualOrTermAccess().getGroup()); }
(rule__ActualOrTerm__Group__0)
{ after(grammarAccess.getActualOrTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualAndTerm
entryRuleActualAndTerm 
:
{ before(grammarAccess.getActualAndTermRule()); }
	 ruleActualAndTerm
{ after(grammarAccess.getActualAndTermRule()); } 
	 EOF 
;

// Rule ActualAndTerm
ruleActualAndTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getActualAndTermAccess().getGroup()); }
(rule__ActualAndTerm__Group__0)
{ after(grammarAccess.getActualAndTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm 
:
{ before(grammarAccess.getBooleanTermRule()); }
	 ruleBooleanTerm
{ after(grammarAccess.getBooleanTermRule()); } 
	 EOF 
;

// Rule BooleanTerm
ruleBooleanTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanTermAccess().getOrTermParserRuleCall()); }
	ruleOrTerm
{ after(grammarAccess.getBooleanTermAccess().getOrTermParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrTerm
entryRuleOrTerm 
:
{ before(grammarAccess.getOrTermRule()); }
	 ruleOrTerm
{ after(grammarAccess.getOrTermRule()); } 
	 EOF 
;

// Rule OrTerm
ruleOrTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOrTermAccess().getGroup()); }
(rule__OrTerm__Group__0)
{ after(grammarAccess.getOrTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndTerm
entryRuleAndTerm 
:
{ before(grammarAccess.getAndTermRule()); }
	 ruleAndTerm
{ after(grammarAccess.getAndTermRule()); } 
	 EOF 
;

// Rule AndTerm
ruleAndTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAndTermAccess().getGroup()); }
(rule__AndTerm__Group__0)
{ after(grammarAccess.getAndTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotTerm
entryRuleNotTerm 
:
{ before(grammarAccess.getNotTermRule()); }
	 ruleNotTerm
{ after(grammarAccess.getNotTermRule()); } 
	 EOF 
;

// Rule NotTerm
ruleNotTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNotTermAccess().getGroup()); }
(rule__NotTerm__Group__0)
{ after(grammarAccess.getNotTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanAtom
entryRuleBooleanAtom 
:
{ before(grammarAccess.getBooleanAtomRule()); }
	 ruleBooleanAtom
{ after(grammarAccess.getBooleanAtomRule()); } 
	 EOF 
;

// Rule BooleanAtom
ruleBooleanAtom 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanAtomAccess().getAlternatives()); }
(rule__BooleanAtom__Alternatives)
{ after(grammarAccess.getBooleanAtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
(rule__ConstantValue__NamedValueAssignment)
{ after(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceTerm
entryRuleReferenceTerm 
:
{ before(grammarAccess.getReferenceTermRule()); }
	 ruleReferenceTerm
{ after(grammarAccess.getReferenceTermRule()); } 
	 EOF 
;

// Rule ReferenceTerm
ruleReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getReferenceTermAccess().getGroup()); }
(rule__ReferenceTerm__Group__0)
{ after(grammarAccess.getReferenceTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTerm
entryRuleRecordTerm 
:
{ before(grammarAccess.getRecordTermRule()); }
	 ruleRecordTerm
{ after(grammarAccess.getRecordTermRule()); } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecordTermAccess().getGroup()); }
(rule__RecordTerm__Group__0)
{ after(grammarAccess.getRecordTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComputedTerm
entryRuleComputedTerm 
:
{ before(grammarAccess.getComputedTermRule()); }
	 ruleComputedTerm
{ after(grammarAccess.getComputedTermRule()); } 
	 EOF 
;

// Rule ComputedTerm
ruleComputedTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComputedTermAccess().getGroup()); }
(rule__ComputedTerm__Group__0)
{ after(grammarAccess.getComputedTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentClassifierTerm
entryRuleComponentClassifierTerm 
:
{ before(grammarAccess.getComponentClassifierTermRule()); }
	 ruleComponentClassifierTerm
{ after(grammarAccess.getComponentClassifierTermRule()); } 
	 EOF 
;

// Rule ComponentClassifierTerm
ruleComponentClassifierTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
(rule__ComponentClassifierTerm__Group__0)
{ after(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListTerm
entryRuleListTerm 
:
{ before(grammarAccess.getListTermRule()); }
	 ruleListTerm
{ after(grammarAccess.getListTermRule()); } 
	 EOF 
;

// Rule ListTerm
ruleListTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getListTermAccess().getGroup()); }
(rule__ListTerm__Group__0)
{ after(grammarAccess.getListTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldPropertyAssociation
entryRuleFieldPropertyAssociation 
:
{ before(grammarAccess.getFieldPropertyAssociationRule()); }
	 ruleFieldPropertyAssociation
{ after(grammarAccess.getFieldPropertyAssociationRule()); } 
	 EOF 
;

// Rule FieldPropertyAssociation
ruleFieldPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
(rule__FieldPropertyAssociation__Group__0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement 
:
{ before(grammarAccess.getContainmentPathElementRule()); }
	 ruleContainmentPathElement
{ after(grammarAccess.getContainmentPathElementRule()); } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathElementAccess().getAlternatives()); }
(rule__ContainmentPathElement__Alternatives)
{ after(grammarAccess.getContainmentPathElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleANNEXREF
entryRuleANNEXREF 
:
{ before(grammarAccess.getANNEXREFRule()); }
	 ruleANNEXREF
{ after(grammarAccess.getANNEXREFRule()); } 
	 EOF 
;

// Rule ANNEXREF
ruleANNEXREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getANNEXREFAccess().getGroup()); }
(rule__ANNEXREF__Group__0)
{ after(grammarAccess.getANNEXREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndOp
entryRuleAndOp 
:
{ before(grammarAccess.getAndOpRule()); }
	 ruleAndOp
{ after(grammarAccess.getAndOpRule()); } 
	 EOF 
;

// Rule AndOp
ruleAndOp 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAndOpAccess().getAndKeyword()); }

	KEYWORD_20 

{ after(grammarAccess.getAndOpAccess().getAndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrOp
entryRuleOrOp 
:
{ before(grammarAccess.getOrOpRule()); }
	 ruleOrOp
{ after(grammarAccess.getOrOpRule()); } 
	 EOF 
;

// Rule OrOp
ruleOrOp 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOrOpAccess().getOrKeyword()); }

	KEYWORD_17 

{ after(grammarAccess.getOrOpAccess().getOrKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOp
entryRuleNotOp 
:
{ before(grammarAccess.getNotOpRule()); }
	 ruleNotOp
{ after(grammarAccess.getNotOpRule()); } 
	 EOF 
;

// Rule NotOp
ruleNotOp 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNotOpAccess().getNotKeyword()); }

	KEYWORD_21 

{ after(grammarAccess.getNotOpAccess().getNotKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusMinus
entryRulePlusMinus 
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusMinusAccess().getAlternatives()); }
(rule__PlusMinus__Alternatives)
{ after(grammarAccess.getPlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringTerm
entryRuleStringTerm 
:
{ before(grammarAccess.getStringTermRule()); }
	 ruleStringTerm
{ after(grammarAccess.getStringTermRule()); } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringTermAccess().getValueAssignment()); }
(rule__StringTerm__ValueAssignment)
{ after(grammarAccess.getStringTermAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoQuoteString
entryRuleNoQuoteString 
:
{ before(grammarAccess.getNoQuoteStringRule()); }
	 ruleNoQuoteString
{ after(grammarAccess.getNoQuoteStringRule()); } 
	 EOF 
;

// Rule NoQuoteString
ruleNoQuoteString 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayRange
entryRuleArrayRange 
:
{ before(grammarAccess.getArrayRangeRule()); }
	 ruleArrayRange
{ after(grammarAccess.getArrayRangeRule()); } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayRangeAccess().getGroup()); }
(rule__ArrayRange__Group__0)
{ after(grammarAccess.getArrayRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedConstant
entryRuleSignedConstant 
:
{ before(grammarAccess.getSignedConstantRule()); }
	 ruleSignedConstant
{ after(grammarAccess.getSignedConstantRule()); } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedConstantAccess().getGroup()); }
(rule__SignedConstant__Group__0)
{ after(grammarAccess.getSignedConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm 
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerTermAccess().getGroup()); }
(rule__IntegerTerm__Group__0)
{ after(grammarAccess.getIntegerTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedInt
entryRuleSignedInt 
:
{ before(grammarAccess.getSignedIntRule()); }
	 ruleSignedInt
{ after(grammarAccess.getSignedIntRule()); } 
	 EOF 
;

// Rule SignedInt
ruleSignedInt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedIntAccess().getGroup()); }
(rule__SignedInt__Group__0)
{ after(grammarAccess.getSignedIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealTerm
entryRuleRealTerm 
:
{ before(grammarAccess.getRealTermRule()); }
	 ruleRealTerm
{ after(grammarAccess.getRealTermRule()); } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealTermAccess().getGroup()); }
(rule__RealTerm__Group__0)
{ after(grammarAccess.getRealTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedReal
entryRuleSignedReal 
:
{ before(grammarAccess.getSignedRealRule()); }
	 ruleSignedReal
{ after(grammarAccess.getSignedRealRule()); } 
	 EOF 
;

// Rule SignedReal
ruleSignedReal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedRealAccess().getGroup()); }
(rule__SignedReal__Group__0)
{ after(grammarAccess.getSignedRealAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericRangeTerm
entryRuleNumericRangeTerm 
:
{ before(grammarAccess.getNumericRangeTermRule()); }
	 ruleNumericRangeTerm
{ after(grammarAccess.getNumericRangeTermRule()); } 
	 EOF 
;

// Rule NumericRangeTerm
ruleNumericRangeTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup()); }
(rule__NumericRangeTerm__Group__0)
{ after(grammarAccess.getNumericRangeTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTVALUE
entryRuleINTVALUE 
:
{ before(grammarAccess.getINTVALUERule()); }
	 ruleINTVALUE
{ after(grammarAccess.getINTVALUERule()); } 
	 EOF 
;

// Rule INTVALUE
ruleINTVALUE 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQPREF
entryRuleQPREF 
:
{ before(grammarAccess.getQPREFRule()); }
	 ruleQPREF
{ after(grammarAccess.getQPREFRule()); } 
	 EOF 
;

// Rule QPREF
ruleQPREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQPREFAccess().getGroup()); }
(rule__QPREF__Group__0)
{ after(grammarAccess.getQPREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQCREF
entryRuleQCREF 
:
{ before(grammarAccess.getQCREFRule()); }
	 ruleQCREF
{ after(grammarAccess.getQCREFRule()); } 
	 EOF 
;

// Rule QCREF
ruleQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQCREFAccess().getGroup()); }
(rule__QCREF__Group__0)
{ after(grammarAccess.getQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTAR
entryRuleSTAR 
:
{ before(grammarAccess.getSTARRule()); }
	 ruleSTAR
{ after(grammarAccess.getSTARRule()); } 
	 EOF 
;

// Rule STAR
ruleSTAR 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSTARAccess().getAsteriskKeyword()); }

	KEYWORD_3 

{ after(grammarAccess.getSTARAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPModelAccess().getContainedPropertyAssociationParserRuleCall_0()); }
	ruleContainedPropertyAssociation
{ after(grammarAccess.getPModelAccess().getContainedPropertyAssociationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPModelAccess().getBasicPropertyAssociationParserRuleCall_1()); }
	ruleBasicPropertyAssociation
{ after(grammarAccess.getPModelAccess().getBasicPropertyAssociationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPModelAccess().getPropertyAssociationParserRuleCall_2()); }
	rulePropertyAssociation
{ after(grammarAccess.getPModelAccess().getPropertyAssociationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }

	KEYWORD_15 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
(rule__ContainedPropertyAssociation__AppendAssignment_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_0()); }
(rule__ContainedPropertyAssociation__Group_3_0__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }

	KEYWORD_15 

{ after(grammarAccess.getPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyAssociationAccess().getAppendAssignment_1_1()); }
(rule__PropertyAssociation__AppendAssignment_1_1)
{ after(grammarAccess.getPropertyAssociationAccess().getAppendAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getGroup_3_0()); }
(rule__PropertyAssociation__Group_3_0__0)
{ after(grammarAccess.getPropertyAssociationAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getPropertyAssociationAccess().getOwnedValueAssignment_3_1()); }
(rule__PropertyAssociation__OwnedValueAssignment_3_1)
{ after(grammarAccess.getPropertyAssociationAccess().getOwnedValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
	ruleRecordTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_1()); }
	ruleNumericRangeTerm
{ after(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_2()); }
	ruleReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
	ruleComputedTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
	ruleStringTerm
{ after(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_5()); }
	ruleRealTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_6()); }
	ruleIntegerTerm
{ after(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_7()); }
	ruleComponentClassifierTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
	ruleListTerm
{ after(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getActualBooleanTermParserRuleCall_9()); }
	ruleActualBooleanTerm
{ after(grammarAccess.getPropertyExpressionAccess().getActualBooleanTermParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
	ruleLiteralorReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualBooleanTerm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualBooleanTermAccess().getActualOrTermParserRuleCall_0()); }
	ruleActualOrTerm
{ after(grammarAccess.getActualBooleanTermAccess().getActualOrTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActualBooleanTermAccess().getActualAndTermParserRuleCall_1()); }
	ruleActualAndTerm
{ after(grammarAccess.getActualBooleanTermAccess().getActualAndTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActualBooleanTermAccess().getBooleanLiteralParserRuleCall_2()); }
	ruleBooleanLiteral
{ after(grammarAccess.getActualBooleanTermAccess().getBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getActualBooleanTermAccess().getNotTermParserRuleCall_3()); }
	ruleNotTerm
{ after(grammarAccess.getActualBooleanTermAccess().getNotTermParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getActualBooleanTermAccess().getConstantValueParserRuleCall_4()); }
	ruleConstantValue
{ after(grammarAccess.getActualBooleanTermAccess().getConstantValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAtom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAtomAccess().getBooleanLiteralParserRuleCall_0()); }
	ruleBooleanLiteral
{ after(grammarAccess.getBooleanAtomAccess().getBooleanLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBooleanAtomAccess().getNotTermParserRuleCall_1()); }
	ruleNotTerm
{ after(grammarAccess.getBooleanAtomAccess().getNotTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBooleanAtomAccess().getConstantValueParserRuleCall_2()); }
	ruleConstantValue
{ after(grammarAccess.getBooleanAtomAccess().getConstantValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBooleanAtomAccess().getGroup_3()); }
(rule__BooleanAtom__Group_3__0)
{ after(grammarAccess.getBooleanAtomAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
(rule__BooleanLiteral__ValueAssignment_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }

	KEYWORD_25 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
(rule__ContainmentPathElement__Group_0__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
(rule__ContainmentPathElement__Group_1__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }

	KEYWORD_4 

{ after(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }

	KEYWORD_6 

{ after(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }

	KEYWORD_4 

{ after(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }

	KEYWORD_6 

{ after(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }

	KEYWORD_4 

{ after(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }

	KEYWORD_6 

{ after(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MinimumAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumRealTermParserRuleCall_0_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumRealTermParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumIntegerTermParserRuleCall_0_0_1()); }
	ruleIntegerTerm
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumIntegerTermParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumSignedConstantParserRuleCall_0_0_2()); }
	ruleSignedConstant
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumSignedConstantParserRuleCall_0_0_2()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumConstantValueParserRuleCall_0_0_3()); }
	ruleConstantValue
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumConstantValueParserRuleCall_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MaximumAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumRealTermParserRuleCall_2_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumRealTermParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumIntegerTermParserRuleCall_2_0_1()); }
	ruleIntegerTerm
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumIntegerTermParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumSignedConstantParserRuleCall_2_0_2()); }
	ruleSignedConstant
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumSignedConstantParserRuleCall_2_0_2()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumConstantValueParserRuleCall_2_0_3()); }
	ruleConstantValue
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumConstantValueParserRuleCall_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__DeltaAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaRealTermParserRuleCall_3_1_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaRealTermParserRuleCall_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaIntegerTermParserRuleCall_3_1_0_1()); }
	ruleIntegerTerm
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaIntegerTermParserRuleCall_3_1_0_1()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaSignedConstantParserRuleCall_3_1_0_2()); }
	ruleSignedConstant
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaSignedConstantParserRuleCall_3_1_0_2()); }
)

    |(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaConstantValueParserRuleCall_3_1_0_3()); }
	ruleConstantValue
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaConstantValueParserRuleCall_3_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BasicPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicPropertyAssociation__Group__0__Impl
	rule__BasicPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__BasicPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getBasicPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicPropertyAssociation__Group__1__Impl
	rule__BasicPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	KEYWORD_15 

{ after(grammarAccess.getBasicPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicPropertyAssociation__Group__2__Impl
	rule__BasicPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getOwnedValueAssignment_2()); }
(rule__BasicPropertyAssociation__OwnedValueAssignment_2)
{ after(grammarAccess.getBasicPropertyAssociationAccess().getOwnedValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicPropertyAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getSemicolonKeyword_3()); }

	KEYWORD_8 

{ after(grammarAccess.getBasicPropertyAssociationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainedPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__0__Impl
	rule__ContainedPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__ContainedPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__1__Impl
	rule__ContainedPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
(rule__ContainedPropertyAssociation__Alternatives_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__2__Impl
	rule__ContainedPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
(rule__ContainedPropertyAssociation__ConstantAssignment_2)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__3__Impl
	rule__ContainedPropertyAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_3()); }
(rule__ContainedPropertyAssociation__Alternatives_3)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__4__Impl
	rule__ContainedPropertyAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
(rule__ContainedPropertyAssociation__Group_4__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_5()); }

	KEYWORD_8 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ContainedPropertyAssociation__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_0__0__Impl
	rule__ContainedPropertyAssociation__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_3_0_0()); }

	KEYWORD_1 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_0__1__Impl
	rule__ContainedPropertyAssociation__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_0_1()); }
(rule__ContainedPropertyAssociation__Group_3_0_1__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_0__2__Impl
	rule__ContainedPropertyAssociation__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0_2()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0_2)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_3_0_3()); }

	KEYWORD_2 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainedPropertyAssociation__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_0_1__0__Impl
	rule__ContainedPropertyAssociation__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0_1_0()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0_1_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_0_1_1()); }
(
	KEYWORD_5 
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__0__Impl
	rule__ContainedPropertyAssociation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_4_0()); }
(
	KEYWORD_27 
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__1__Impl
	rule__ContainedPropertyAssociation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_4_1()); }

	KEYWORD_18 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__2__Impl
	rule__ContainedPropertyAssociation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_2)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_3()); }
(rule__ContainedPropertyAssociation__Group_4_3__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainedPropertyAssociation__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_3__0__Impl
	rule__ContainedPropertyAssociation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_3_0()); }

	KEYWORD_5 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_3_1()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_3_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group__0__Impl
	rule__PropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__PropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group__1__Impl
	rule__PropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getAlternatives_1()); }
(rule__PropertyAssociation__Alternatives_1)
{ after(grammarAccess.getPropertyAssociationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group__2__Impl
	rule__PropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getConstantAssignment_2()); }
(rule__PropertyAssociation__ConstantAssignment_2)?
{ after(grammarAccess.getPropertyAssociationAccess().getConstantAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group__3__Impl
	rule__PropertyAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getAlternatives_3()); }
(rule__PropertyAssociation__Alternatives_3)
{ after(grammarAccess.getPropertyAssociationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getSemicolonKeyword_4()); }

	KEYWORD_8 

{ after(grammarAccess.getPropertyAssociationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertyAssociation__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group_3_0__0__Impl
	rule__PropertyAssociation__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getLeftParenthesisKeyword_3_0_0()); }

	KEYWORD_1 

{ after(grammarAccess.getPropertyAssociationAccess().getLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group_3_0__1__Impl
	rule__PropertyAssociation__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getGroup_3_0_1()); }
(rule__PropertyAssociation__Group_3_0_1__0)*
{ after(grammarAccess.getPropertyAssociationAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group_3_0__2__Impl
	rule__PropertyAssociation__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getOwnedValueAssignment_3_0_2()); }
(rule__PropertyAssociation__OwnedValueAssignment_3_0_2)
{ after(grammarAccess.getPropertyAssociationAccess().getOwnedValueAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getRightParenthesisKeyword_3_0_3()); }

	KEYWORD_2 

{ after(grammarAccess.getPropertyAssociationAccess().getRightParenthesisKeyword_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropertyAssociation__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group_3_0_1__0__Impl
	rule__PropertyAssociation__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getOwnedValueAssignment_3_0_1_0()); }
(rule__PropertyAssociation__OwnedValueAssignment_3_0_1_0)
{ after(grammarAccess.getPropertyAssociationAccess().getOwnedValueAssignment_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyAssociation__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyAssociation__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getCommaKeyword_3_0_1_1()); }
(
	KEYWORD_5 
)
{ after(grammarAccess.getPropertyAssociationAccess().getCommaKeyword_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group__0__Impl
	rule__ContainmentPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainedNamedElementAction_0()); }
(

)
{ after(grammarAccess.getContainmentPathAccess().getContainedNamedElementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group__1__Impl
	rule__ContainmentPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_1()); }
(rule__ContainmentPath__ContainmentPathElementAssignment_1)
{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPath__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getGroup_2()); }
(rule__ContainmentPath__Group_2__0)*
{ after(grammarAccess.getContainmentPathAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContainmentPath__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group_2__0__Impl
	rule__ContainmentPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getFullStopKeyword_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getContainmentPathAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPath__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_2_1()); }
(rule__ContainmentPath__ContainmentPathElementAssignment_2_1)
{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModalPropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__0__Impl
	rule__ModalPropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getOwnedValueAssignment_0()); }
(rule__ModalPropertyValue__OwnedValueAssignment_0)
{ after(grammarAccess.getModalPropertyValueAccess().getOwnedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__1__Impl
	rule__ModalPropertyValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getInKeyword_1()); }
(
	KEYWORD_16 
)
{ after(grammarAccess.getModalPropertyValueAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__2__Impl
	rule__ModalPropertyValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getModesKeyword_2()); }

	KEYWORD_26 

{ after(grammarAccess.getModalPropertyValueAccess().getModesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__3__Impl
	rule__ModalPropertyValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getLeftParenthesisKeyword_3()); }

	KEYWORD_1 

{ after(grammarAccess.getModalPropertyValueAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__4__Impl
	rule__ModalPropertyValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getInModeAssignment_4()); }
(rule__ModalPropertyValue__InModeAssignment_4)
{ after(grammarAccess.getModalPropertyValueAccess().getInModeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__5__Impl
	rule__ModalPropertyValue__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getGroup_5()); }
(rule__ModalPropertyValue__Group_5__0)*
{ after(grammarAccess.getModalPropertyValueAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getRightParenthesisKeyword_6()); }

	KEYWORD_2 

{ after(grammarAccess.getModalPropertyValueAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ModalPropertyValue__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group_5__0__Impl
	rule__ModalPropertyValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getCommaKeyword_5_0()); }

	KEYWORD_5 

{ after(grammarAccess.getModalPropertyValueAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModalPropertyValue__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModalPropertyValue__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getInModeAssignment_5_1()); }
(rule__ModalPropertyValue__InModeAssignment_5_1)
{ after(grammarAccess.getModalPropertyValueAccess().getInModeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalModalPropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__0__Impl
	rule__OptionalModalPropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
(rule__OptionalModalPropertyValue__OwnedValueAssignment_0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
(rule__OptionalModalPropertyValue__Group_1__0)?
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalModalPropertyValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__0__Impl
	rule__OptionalModalPropertyValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInKeyword_1_0()); }

	KEYWORD_16 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__1__Impl
	rule__OptionalModalPropertyValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getModesKeyword_1_1()); }

	KEYWORD_26 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getModesKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__2__Impl
	rule__OptionalModalPropertyValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_2()); }

	KEYWORD_1 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__3__Impl
	rule__OptionalModalPropertyValue__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_3)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__4__Impl
	rule__OptionalModalPropertyValue__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_4()); }
(rule__OptionalModalPropertyValue__Group_1_4__0)*
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_5()); }

	KEYWORD_2 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OptionalModalPropertyValue__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_4__0__Impl
	rule__OptionalModalPropertyValue__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_4_0()); }

	KEYWORD_5 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_4_1()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_4_1)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActualOrTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualOrTerm__Group__0__Impl
	rule__ActualOrTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAssignment_0()); }
(rule__ActualOrTerm__OwnedPropertyExpressionAssignment_0)
{ after(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualOrTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualOrTerm__Group__1__Impl
	rule__ActualOrTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOpAssignment_1()); }
(rule__ActualOrTerm__OpAssignment_1)
{ after(grammarAccess.getActualOrTermAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualOrTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualOrTerm__Group__2__Impl
	rule__ActualOrTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAssignment_2()); }
(rule__ActualOrTerm__OwnedPropertyExpressionAssignment_2)
{ after(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualOrTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualOrTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getGroup_3()); }
(rule__ActualOrTerm__Group_3__0)*
{ after(grammarAccess.getActualOrTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActualOrTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualOrTerm__Group_3__0__Impl
	rule__ActualOrTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOpAssignment_3_0()); }
(rule__ActualOrTerm__OpAssignment_3_0)
{ after(grammarAccess.getActualOrTermAccess().getOpAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualOrTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualOrTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAssignment_3_1()); }
(rule__ActualOrTerm__OwnedPropertyExpressionAssignment_3_1)
{ after(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActualAndTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualAndTerm__Group__0__Impl
	rule__ActualAndTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionAssignment_0()); }
(rule__ActualAndTerm__OwnedPropertyExpressionAssignment_0)
{ after(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualAndTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualAndTerm__Group__1__Impl
	rule__ActualAndTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOpAssignment_1()); }
(rule__ActualAndTerm__OpAssignment_1)
{ after(grammarAccess.getActualAndTermAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualAndTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualAndTerm__Group__2__Impl
	rule__ActualAndTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionAssignment_2()); }
(rule__ActualAndTerm__OwnedPropertyExpressionAssignment_2)
{ after(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualAndTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualAndTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getGroup_3()); }
(rule__ActualAndTerm__Group_3__0)*
{ after(grammarAccess.getActualAndTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActualAndTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualAndTerm__Group_3__0__Impl
	rule__ActualAndTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOpAssignment_3_0()); }
(rule__ActualAndTerm__OpAssignment_3_0)
{ after(grammarAccess.getActualAndTermAccess().getOpAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualAndTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualAndTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionAssignment_3_1()); }
(rule__ActualAndTerm__OwnedPropertyExpressionAssignment_3_1)
{ after(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTerm__Group__0__Impl
	rule__OrTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getAndTermParserRuleCall_0()); }
	ruleAndTerm
{ after(grammarAccess.getOrTermAccess().getAndTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getGroup_1()); }
(rule__OrTerm__Group_1__0)*
{ after(grammarAccess.getOrTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrTerm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTerm__Group_1__0__Impl
	rule__OrTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getOperationOwnedPropertyExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getOrTermAccess().getOperationOwnedPropertyExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTerm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTerm__Group_1__1__Impl
	rule__OrTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getOpAssignment_1_1()); }
(rule__OrTerm__OpAssignment_1_1)
{ after(grammarAccess.getOrTermAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTerm__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getOwnedPropertyExpressionAssignment_1_2()); }
(rule__OrTerm__OwnedPropertyExpressionAssignment_1_2)
{ after(grammarAccess.getOrTermAccess().getOwnedPropertyExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndTerm__Group__0__Impl
	rule__AndTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getBooleanAtomParserRuleCall_0()); }
	ruleBooleanAtom
{ after(grammarAccess.getAndTermAccess().getBooleanAtomParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getGroup_1()); }
(rule__AndTerm__Group_1__0)*
{ after(grammarAccess.getAndTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndTerm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndTerm__Group_1__0__Impl
	rule__AndTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getOperationOwnedPropertyExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getAndTermAccess().getOperationOwnedPropertyExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndTerm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndTerm__Group_1__1__Impl
	rule__AndTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getOpAssignment_1_1()); }
(rule__AndTerm__OpAssignment_1_1)
{ after(grammarAccess.getAndTermAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndTerm__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getOwnedPropertyExpressionAssignment_1_2()); }
(rule__AndTerm__OwnedPropertyExpressionAssignment_1_2)
{ after(grammarAccess.getAndTermAccess().getOwnedPropertyExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotTerm__Group__0__Impl
	rule__NotTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotTermAccess().getOpAssignment_0()); }
(rule__NotTerm__OpAssignment_0)
{ after(grammarAccess.getNotTermAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotTermAccess().getOwnedPropertyExpressionAssignment_1()); }
(rule__NotTerm__OwnedPropertyExpressionAssignment_1)
{ after(grammarAccess.getNotTermAccess().getOwnedPropertyExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanAtom__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAtom__Group_3__0__Impl
	rule__BooleanAtom__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAtom__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAtomAccess().getLeftParenthesisKeyword_3_0()); }

	KEYWORD_1 

{ after(grammarAccess.getBooleanAtomAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAtom__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAtom__Group_3__1__Impl
	rule__BooleanAtom__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAtom__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAtomAccess().getBooleanTermParserRuleCall_3_1()); }
	ruleBooleanTerm
{ after(grammarAccess.getBooleanAtomAccess().getBooleanTermParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAtom__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAtom__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAtom__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAtomAccess().getRightParenthesisKeyword_3_2()); }

	KEYWORD_2 

{ after(grammarAccess.getBooleanAtomAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__0__Impl
	rule__ReferenceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }

	KEYWORD_30 

{ after(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__1__Impl
	rule__ReferenceTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__2__Impl
	rule__ReferenceTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_2()); }
(rule__ReferenceTerm__ContainmentPathElementAssignment_2)
{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__3__Impl
	rule__ReferenceTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getGroup_3()); }
(rule__ReferenceTerm__Group_3__0)*
{ after(grammarAccess.getReferenceTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_4()); }

	KEYWORD_2 

{ after(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ReferenceTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group_3__0__Impl
	rule__ReferenceTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getFullStopKeyword_3_0()); }

	KEYWORD_7 

{ after(grammarAccess.getReferenceTermAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_3_1()); }
(rule__ReferenceTerm__ContainmentPathElementAssignment_3_1)
{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__0__Impl
	rule__RecordTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getLeftParenthesisKeyword_0()); }

	KEYWORD_1 

{ after(grammarAccess.getRecordTermAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__1__Impl
	rule__RecordTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)*
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getRightParenthesisKeyword_2()); }

	KEYWORD_2 

{ after(grammarAccess.getRecordTermAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComputedTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__0__Impl
	rule__ComputedTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }

	KEYWORD_28 

{ after(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__1__Impl
	rule__ComputedTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__2__Impl
	rule__ComputedTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
(rule__ComputedTerm__FunctionAssignment_2)
{ after(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComponentClassifierTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__0__Impl
	rule__ComponentClassifierTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }

	KEYWORD_31 

{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__1__Impl
	rule__ComponentClassifierTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__2__Impl
	rule__ComponentClassifierTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
(rule__ComponentClassifierTerm__ClassifierAssignment_2)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__0__Impl
	rule__ListTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_0()); }

	KEYWORD_1 

{ after(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__1__Impl
	rule__ListTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_1()); }
(rule__ListTerm__OwnedListElementAssignment_1)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__2__Impl
	rule__ListTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2()); }
(rule__ListTerm__Group_2__0)*
{ after(grammarAccess.getListTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__0__Impl
	rule__ListTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getCommaKeyword_2_0()); }

	KEYWORD_5 

{ after(grammarAccess.getListTermAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1()); }
(rule__ListTerm__OwnedListElementAssignment_2_1)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__0__Impl
	rule__FieldPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__FieldPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__1__Impl
	rule__FieldPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	KEYWORD_15 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__2__Impl
	rule__FieldPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
(rule__FieldPropertyAssociation__OwnedValueAssignment_2)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }

	KEYWORD_8 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainmentPathElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__0__Impl
	rule__ContainmentPathElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
(rule__ContainmentPathElement__NamedElementAssignment_0_0)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
(rule__ContainmentPathElement__ArrayRangeAssignment_0_1)?
{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__0__Impl
	rule__ContainmentPathElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getAnnexKeyword_1_0()); }

	KEYWORD_23 

{ after(grammarAccess.getContainmentPathElementAccess().getAnnexKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_1_1()); }
(rule__ContainmentPathElement__NamedElementAssignment_1_1)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ANNEXREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__0__Impl
	rule__ANNEXREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getLeftCurlyBracketKeyword_0()); }

	KEYWORD_11 

{ after(grammarAccess.getANNEXREFAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANNEXREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__1__Impl
	rule__ANNEXREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_1()); }
	ruleSTAR
{ after(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANNEXREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__2__Impl
	rule__ANNEXREF__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_2()); }
	ruleSTAR
{ after(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANNEXREF__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__3__Impl
	rule__ANNEXREF__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getANNEXREFAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANNEXREF__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__4__Impl
	rule__ANNEXREF__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_4()); }
	ruleSTAR
{ after(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANNEXREF__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__5__Impl
	rule__ANNEXREF__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_5()); }
	ruleSTAR
{ after(grammarAccess.getANNEXREFAccess().getSTARParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANNEXREF__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANNEXREF__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANNEXREF__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNEXREFAccess().getRightCurlyBracketKeyword_6()); }

	KEYWORD_12 

{ after(grammarAccess.getANNEXREFAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ArrayRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__0__Impl
	rule__ArrayRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
(

)
{ after(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__1__Impl
	rule__ArrayRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }

	KEYWORD_9 

{ after(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__2__Impl
	rule__ArrayRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
(rule__ArrayRange__LowerBoundAssignment_2)
{ after(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__3__Impl
	rule__ArrayRange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getGroup_3()); }
(rule__ArrayRange__Group_3__0)?
{ after(grammarAccess.getArrayRangeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }

	KEYWORD_10 

{ after(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayRange__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__0__Impl
	rule__ArrayRange__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }

	KEYWORD_13 

{ after(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
(rule__ArrayRange__UpperBoundAssignment_3_1)
{ after(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__0__Impl
	rule__SignedConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
(rule__SignedConstant__OpAssignment_0)
{ after(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
(rule__SignedConstant__OwnedPropertyExpressionAssignment_1)
{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__0__Impl
	rule__IntegerTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
(rule__IntegerTerm__ValueAssignment_0)
{ after(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
(rule__IntegerTerm__UnitAssignment_1)?
{ after(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__0__Impl
	rule__SignedInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
(rule__SignedInt__Alternatives_0)?
{ after(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__0__Impl
	rule__RealTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
(rule__RealTerm__ValueAssignment_0)
{ after(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
(rule__RealTerm__UnitAssignment_1)?
{ after(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedReal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__0__Impl
	rule__SignedReal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
(rule__SignedReal__Alternatives_0)?
{ after(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedReal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); }
	RULE_REAL_LIT
{ after(grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericRangeTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__0__Impl
	rule__NumericRangeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
(rule__NumericRangeTerm__MinimumAssignment_0)
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__1__Impl
	rule__NumericRangeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }

	KEYWORD_13 

{ after(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__2__Impl
	rule__NumericRangeTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
(rule__NumericRangeTerm__MaximumAssignment_2)
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
(rule__NumericRangeTerm__Group_3__0)?
{ after(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NumericRangeTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__0__Impl
	rule__NumericRangeTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }

	KEYWORD_24 

{ after(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
(rule__NumericRangeTerm__DeltaAssignment_3_1)
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__0__Impl
	rule__QPREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getGroup_1()); }
(rule__QPREF__Group_1__0)?
{ after(grammarAccess.getQPREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__0__Impl
	rule__QPREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }

	KEYWORD_14 

{ after(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__0__Impl
	rule__QCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_0()); }
(rule__QCREF__Group_0__0)*
{ after(grammarAccess.getQCREFAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__1__Impl
	rule__QCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_2()); }
(rule__QCREF__Group_2__0)?
{ after(grammarAccess.getQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__0__Impl
	rule__QCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }

	KEYWORD_14 

{ after(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__0__Impl
	rule__QCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__BasicPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
	ruleQPREF{ after(grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getBasicPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicPropertyAssociation__OwnedValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicPropertyAssociationAccess().getOwnedValuePropertyValueParserRuleCall_2_0()); }
	rulePropertyValue{ after(grammarAccess.getBasicPropertyAssociationAccess().getOwnedValuePropertyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
	ruleQPREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppendAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }

	KEYWORD_19 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__ConstantAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }

	KEYWORD_29 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueModalPropertyValueParserRuleCall_3_0_1_0_0()); }
	ruleModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueModalPropertyValueParserRuleCall_3_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_2_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValuePropertyValueParserRuleCall_3_1_0()); }
	rulePropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValuePropertyValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_3_1_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
	ruleQPREF{ after(grammarAccess.getPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__AppendAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
(
{ before(grammarAccess.getPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }

	KEYWORD_19 

{ after(grammarAccess.getPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

{ after(grammarAccess.getPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__ConstantAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
(
{ before(grammarAccess.getPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }

	KEYWORD_29 

{ after(grammarAccess.getPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

{ after(grammarAccess.getPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__OwnedValueAssignment_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getOwnedValueModalPropertyValueParserRuleCall_3_0_1_0_0()); }
	ruleModalPropertyValue{ after(grammarAccess.getPropertyAssociationAccess().getOwnedValueModalPropertyValueParserRuleCall_3_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__OwnedValueAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_2_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAssociation__OwnedValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAssociationAccess().getOwnedValuePropertyValueParserRuleCall_3_1_0()); }
	rulePropertyValue{ after(grammarAccess.getPropertyAssociationAccess().getOwnedValuePropertyValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__ContainmentPathElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__ContainmentPathElementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__OwnedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__InModeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getInModeModeCrossReference_4_0()); }
(
{ before(grammarAccess.getModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getModalPropertyValueAccess().getInModeModeCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModalPropertyValue__InModeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModalPropertyValueAccess().getInModeModeCrossReference_5_1_0()); }
(
{ before(grammarAccess.getModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getModalPropertyValueAccess().getInModeModeCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__OwnedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_4_1_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_4_1_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__OwnedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
	rulePropertyExpression{ after(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralorReferenceTerm__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__OwnedPropertyExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_0_0()); }
	ruleAndTerm{ after(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOpOrOpParserRuleCall_1_0()); }
	ruleOrOp{ after(grammarAccess.getActualOrTermAccess().getOpOrOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__OwnedPropertyExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_2_0()); }
	ruleAndTerm{ after(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__OpAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOpOrOpParserRuleCall_3_0_0()); }
	ruleOrOp{ after(grammarAccess.getActualOrTermAccess().getOpOrOpParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualOrTerm__OwnedPropertyExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_3_1_0()); }
	ruleAndTerm{ after(grammarAccess.getActualOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__OwnedPropertyExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_0_0()); }
	ruleBooleanAtom{ after(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOpAndOpParserRuleCall_1_0()); }
	ruleAndOp{ after(grammarAccess.getActualAndTermAccess().getOpAndOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__OwnedPropertyExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_2_0()); }
	ruleBooleanAtom{ after(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__OpAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOpAndOpParserRuleCall_3_0_0()); }
	ruleAndOp{ after(grammarAccess.getActualAndTermAccess().getOpAndOpParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualAndTerm__OwnedPropertyExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_3_1_0()); }
	ruleBooleanAtom{ after(grammarAccess.getActualAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getOpOrOpParserRuleCall_1_1_0()); }
	ruleOrOp{ after(grammarAccess.getOrTermAccess().getOpOrOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrTerm__OwnedPropertyExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_1_2_0()); }
	ruleAndTerm{ after(grammarAccess.getOrTermAccess().getOwnedPropertyExpressionAndTermParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getOpAndOpParserRuleCall_1_1_0()); }
	ruleAndOp{ after(grammarAccess.getAndTermAccess().getOpAndOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndTerm__OwnedPropertyExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_1_2_0()); }
	ruleBooleanAtom{ after(grammarAccess.getAndTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotTerm__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotTermAccess().getOpNotOpParserRuleCall_0_0()); }
	ruleNotOp{ after(grammarAccess.getNotTermAccess().getOpNotOpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotTerm__OwnedPropertyExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_1_0()); }
	ruleBooleanAtom{ after(grammarAccess.getNotTermAccess().getOwnedPropertyExpressionBooleanAtomParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }

	KEYWORD_22 

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__ContainmentPathElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__ContainmentPathElementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_3_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__OwnedFieldValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
	ruleFieldPropertyAssociation{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__FunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__ClassifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
	ruleQCREF{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_1_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__OwnedValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
	rulePropertyExpression{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__NamedElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__ArrayRangeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
	ruleArrayRange{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__NamedElementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_1_1_0()); }
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementANNEXREFParserRuleCall_1_1_0_1()); }
	ruleANNEXREF{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementANNEXREFParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTerm__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
	ruleNoQuoteString{ after(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__LowerBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__UpperBoundAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
	rulePlusMinus{ after(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OwnedPropertyExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
	ruleConstantValue{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); }
	ruleSignedInt{ after(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); }
	ruleSignedReal{ after(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MinimumAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumAlternatives_0_0()); }
(rule__NumericRangeTerm__MinimumAlternatives_0_0)
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MaximumAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumAlternatives_2_0()); }
(rule__NumericRangeTerm__MaximumAlternatives_2_0)
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__DeltaAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaAlternatives_3_1_0()); }
(rule__NumericRangeTerm__DeltaAlternatives_3_1_0)
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


